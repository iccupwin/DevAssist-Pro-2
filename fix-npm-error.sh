#!/bin/bash
# ===========================================
# DevAssist Pro - –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ npm –æ—à–∏–±–∫–∏
# ===========================================

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[FIX]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

echo ""
echo "========================================"
log "üö® –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ npm build –æ—à–∏–±–∫–∏"
echo "========================================"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.simple.yml" ] || [ ! -f "Dockerfile.fullstack.simple" ]; then
    error "–ù–µ –Ω–∞–π–¥–µ–Ω—ã —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ Docker —Ñ–∞–π–ª—ã!"
    error "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ /opt/devassist-pro"
    exit 1
fi

log "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
./stop-fullstack.sh 2>/dev/null || true

log "–ó–∞–º–µ–Ω—è–µ–º Docker —Ñ–∞–π–ª—ã –Ω–∞ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏..."

# –°–æ–∑–¥–∞–µ–º –±–µ–∫–∞–ø —Ç–µ–∫—É—â–∏—Ö —Ñ–∞–π–ª–æ–≤
if [ -f "Dockerfile.fullstack" ]; then
    cp Dockerfile.fullstack Dockerfile.fullstack.backup
    log "–°–æ–∑–¥–∞–Ω –±–µ–∫–∞–ø: Dockerfile.fullstack.backup"
fi

if [ -f "docker-compose.fullstack.yml" ]; then
    cp docker-compose.fullstack.yml docker-compose.fullstack.yml.backup
    log "–°–æ–∑–¥–∞–Ω –±–µ–∫–∞–ø: docker-compose.fullstack.yml.backup"
fi

# –ö–æ–ø–∏—Ä—É–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏
cp Dockerfile.fullstack.simple Dockerfile.fullstack
cp docker-compose.simple.yml docker-compose.fullstack.yml

success "–£–ø—Ä–æ—â–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª..."
if [ ! -f ".env" ]; then
    if [ -f ".env.fullstack.example" ]; then
        cp .env.fullstack.example .env
        warning ".env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –∏–∑ –ø—Ä–∏–º–µ—Ä–∞. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å ANTHROPIC_API_KEY!"
    else
        error ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
fi

log "–û—á–∏—â–∞–µ–º Docker –∫–µ—à..."
docker system prune -f 2>/dev/null || true

log "–ó–∞–ø—É—Å–∫–∞–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é..."
./start-fullstack.sh --rebuild

echo ""
log "–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 15

log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
if docker-compose -f docker-compose.fullstack.yml ps | grep -q "Up"; then
    success "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã!"
    
    echo ""
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º health checks..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π health check
    if curl -f -s http://localhost:80/health > /dev/null 2>&1; then
        success "‚úÖ HTTP health check –ø—Ä–æ—à–µ–ª"
    else
        warning "‚ö†Ô∏è HTTP health check –Ω–µ –ø—Ä–æ—à–µ–ª (–≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏)"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    if curl -f -s http://localhost:80/api/health > /dev/null 2>&1; then
        success "‚úÖ API health check –ø—Ä–æ—à–µ–ª"
    else
        warning "‚ö†Ô∏è API health check –Ω–µ –ø—Ä–æ—à–µ–ª (–≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏)"
    fi
    
else
    error "‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å!"
    echo ""
    log "–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
    docker-compose -f docker-compose.fullstack.yml logs --tail=20
    exit 1
fi

echo ""
echo "========================================"
success "üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo "========================================"
echo ""

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–π IP
EXTERNAL_IP=$(curl -s ifconfig.me 2>/dev/null || curl -s ipinfo.io/ip 2>/dev/null || echo "YOUR_SERVER_IP")

echo "üìä –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
echo "   ‚Ä¢ –ì–ª–∞–≤–Ω–∞—è:    http://$EXTERNAL_IP"
echo "   ‚Ä¢ Health:     http://$EXTERNAL_IP/health"
echo "   ‚Ä¢ API Docs:   http://$EXTERNAL_IP/api/docs"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π:"
echo "   ‚Ä¢ –°—Ç–∞—Ç—É—Å:     docker-compose -f docker-compose.fullstack.yml ps"
echo "   ‚Ä¢ –õ–æ–≥–∏:       docker-compose -f docker-compose.fullstack.yml logs -f"
echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞:  ./stop-fullstack.sh"
echo ""
warning "üí° –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ React frontend"
warning "üí° –ü–æ–ª–Ω—ã–π frontend –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è npm –ø—Ä–æ–±–ª–µ–º"
echo ""