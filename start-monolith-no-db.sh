#!/bin/bash

# DevAssist Pro - –ó–∞–ø—É—Å–∫ –º–æ–Ω–æ–ª–∏—Ç–Ω–æ–≥–æ backend –ë–ï–ó –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
# –î–ª—è —Å–ª—É—á–∞–µ–≤ –∫–æ–≥–¥–∞ PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

echo "üöÄ DevAssist Pro - –ó–∞–ø—É—Å–∫ –ë–ï–ó –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
echo "=" * 60

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
log_step "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
pkill -f "python.*app" 2>/dev/null || true
pkill -f "uvicorn" 2>/dev/null || true
log_info "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python..."
if command -v python3 >/dev/null 2>&1; then
    python_cmd="python3"
elif command -v python >/dev/null 2>&1; then
    python_cmd="python"
else
    log_error "‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

log_info "‚úÖ Python –Ω–∞–π–¥–µ–Ω: $($python_cmd --version)"

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ backend
cd backend

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ app_simple.py (–æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –ë–î)
if [ -f "app_simple.py" ]; then
    app_file="app_simple.py"
    log_info "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º app_simple.py (–±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)"
elif [ -f "app.py" ]; then
    app_file="app.py"
    log_warn "‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ–º app.py (–º–æ–∂–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –ë–î)"
else
    log_error "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ app.py, –Ω–∏ app_simple.py!"
    exit 1
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
$python_cmd -m pip install fastapi uvicorn python-dotenv anthropic openai --quiet || true

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∑ –ë–î
log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
cd ..

# –°–æ–∑–¥–∞–µ–º .env —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–π –ë–î
cat > .env << EOF
# DevAssist Pro - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ë–ï–ó –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DEBUG=false
LOG_LEVEL=INFO
ENVIRONMENT=development
ADMIN_PASSWORD=admin123
MAX_FILE_SIZE=50MB
SUPPORTED_FORMATS=pdf,docx,txt
USE_REAL_API=true
ALLOWED_ORIGINS=http://46.149.71.162:3000,http://46.149.71.162,http://localhost:3000,http://localhost:3001

# AI API –∫–ª—é—á–∏
ANTHROPIC_API_KEY=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

# –û–¢–ö–õ–Æ–ß–ê–ï–ú –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç—Ç–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
DATABASE_AVAILABLE=false
SKIP_DATABASE=true
NO_DATABASE=true
EOF

log_info "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–µ–∑ –ë–î"

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
log_step "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p data/reports data/uploads data/cache
log_info "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log_step "–ó–∞–ø—É—Å–∫ backend –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
cd backend

log_info "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º $app_file –Ω–∞ –ø–æ—Ä—Ç—É 8000..."
log_info "   –õ–æ–≥–∏ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ app.log"

# –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
nohup $python_cmd $app_file > ../app.log 2>&1 &
APP_PID=$!

log_info "‚úÖ Backend –∑–∞–ø—É—â–µ–Ω —Å PID: $APP_PID"

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
log_step "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 8

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
max_attempts=20
attempt=1

while [ $attempt -le $max_attempts ]; do
    if curl -s http://localhost:8000/health >/dev/null 2>&1; then
        health_response=$(curl -s http://localhost:8000/health)
        log_info "‚úÖ Backend —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
        log_info "–û—Ç–≤–µ—Ç health: $health_response"
        break
    else
        log_warn "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: Backend –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤..."
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    if ! kill -0 $APP_PID 2>/dev/null; then
        log_error "‚ùå –ü—Ä–æ—Ü–µ—Å—Å backend –∑–∞–≤–µ—Ä—à–∏–ª—Å—è!"
        log_error "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
        tail -30 ../app.log
        exit 1
    fi
    
    sleep 3
    ((attempt++))
done

if [ $attempt -gt $max_attempts ]; then
    log_error "‚ùå Backend –Ω–µ —Å–º–æ–≥ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –∑–∞ —Ä–∞–∑—É–º–Ω–æ–µ –≤—Ä–µ–º—è"
    log_error "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
    tail -30 ../app.log
    exit 1
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
cd ..
echo ""
log_info "üéâ DevAssist Pro –∑–∞–ø—É—â–µ–Ω –ë–ï–ó –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!"
echo "=" * 60
echo ""

echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:"
echo "   ‚Ä¢ –ì–ª–∞–≤–Ω–∞—è:      http://localhost:8000/"
echo "   ‚Ä¢ Health:       http://localhost:8000/health"
echo "   ‚Ä¢ API Docs:     http://localhost:8000/docs"
echo ""

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ endpoints
log_step "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoints..."
endpoints=("/" "/health" "/docs" "/api/llm/providers")

for endpoint in "${endpoints[@]}"; do
    if curl -s "http://localhost:8000$endpoint" >/dev/null 2>&1; then
        log_info "‚úÖ $endpoint - —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log_warn "‚ö†Ô∏è  $endpoint - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
done

echo ""
echo "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   ‚Ä¢ PID –ø—Ä–æ—Ü–µ—Å—Å–∞: $APP_PID"
echo "   ‚Ä¢ –õ–æ–≥–∏:         tail -f ~/project/app.log"
echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞:    kill $APP_PID"
echo "   ‚Ä¢ –°—Ç–∞—Ç—É—Å:       curl http://localhost:8000/health"
echo ""

# –°–æ—Ö—Ä–∞–Ω—è–µ–º PID –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
echo $APP_PID > app.pid
log_info "PID —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª app.pid"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
log_step "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
tail -10 app.log

echo ""
log_info "‚ú® Backend —Ä–∞–±–æ—Ç–∞–µ—Ç! (—Ä–µ–∂–∏–º –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)"
log_info "üîó –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: http://46.149.71.162:8000/"

echo ""
log_warn "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –†–∞–±–æ—Ç–∞ –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!"
log_warn "   –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã"
log_warn "   –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ PostgreSQL"