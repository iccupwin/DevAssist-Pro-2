#!/bin/bash

# DevAssist Pro - –ó–∞–ø—É—Å–∫ –º–æ–Ω–æ–ª–∏—Ç–Ω–æ–≥–æ backend'–∞
# –ê–≤—Ç–æ—Ä: Claude Code Assistant
# –î–∞—Ç–∞: $(date +%Y-%m-%d)

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "backend/docker-compose.monolith.yml" ]; then
    log_error "–§–∞–π–ª backend/docker-compose.monolith.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    log_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ DevAssist-Pro"
    exit 1
fi

log_info "üöÄ –ó–∞–ø—É—Å–∫ DevAssist Pro - –ú–æ–Ω–æ–ª–∏—Ç–Ω—ã–π Backend"
echo "=" * 60

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..."
if ! command -v docker &> /dev/null; then
    log_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
    log_error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è docker compose
if command -v docker-compose &> /dev/null; then
    DOCKER_COMPOSE="docker-compose"
else
    DOCKER_COMPOSE="docker compose"
fi

log_info "‚úÖ Docker –Ω–∞–π–¥–µ–Ω: $(docker --version)"
log_info "‚úÖ Docker Compose –Ω–∞–π–¥–µ–Ω: $($DOCKER_COMPOSE --version)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ ! -f ".env" ]; then
    log_warn "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ .env.example..."
    if [ -f ".env.example" ]; then
        cp .env.example .env
        log_info "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ .env.example"
        log_warn "‚ö†Ô∏è  –í–ê–ñ–ù–û: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–µ .env –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º!"
        log_warn "‚ö†Ô∏è  –û—Å–æ–±–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞:"
        log_warn "     - ANTHROPIC_API_KEY (–¥–ª—è AI –∞–Ω–∞–ª–∏–∑–∞)"
        log_warn "     - OPENAI_API_KEY (–¥–ª—è AI –∞–Ω–∞–ª–∏–∑–∞)"
        log_warn "     - ADMIN_PASSWORD (–ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)"
    else
        log_error "–§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é."
        exit 1
    fi
fi

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é backend
cd backend

log_step "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
$DOCKER_COMPOSE -f docker-compose.monolith.yml down 2>/dev/null || true

log_step "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
docker system prune -f --volumes 2>/dev/null || true

log_step "–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
$DOCKER_COMPOSE -f docker-compose.monolith.yml build --no-cache

log_step "–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
$DOCKER_COMPOSE -f docker-compose.monolith.yml up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
log_step "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
$DOCKER_COMPOSE -f docker-compose.monolith.yml ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
max_attempts=30
attempt=1

while [ $attempt -le $max_attempts ]; do
    if curl -s http://localhost:8000/health >/dev/null 2>&1; then
        log_info "‚úÖ Backend —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
        break
    else
        log_warn "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: Backend –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤..."
        sleep 2
        ((attempt++))
    fi
done

if [ $attempt -gt $max_attempts ]; then
    log_error "‚ùå Backend –Ω–µ —Å–º–æ–≥ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –∑–∞ —Ä–∞–∑—É–º–Ω–æ–µ –≤—Ä–µ–º—è"
    log_error "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: $DOCKER_COMPOSE -f docker-compose.monolith.yml logs"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints
log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints..."
echo ""
echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:"
echo "   ‚Ä¢ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:    http://localhost:8000/"
echo "   ‚Ä¢ Health Check:        http://localhost:8000/health"
echo "   ‚Ä¢ API Documentation:   http://localhost:8000/docs"
echo "   ‚Ä¢ Admin Status:        http://localhost:8000/api/admin/status"
echo "   ‚Ä¢ Analytics Dashboard: http://localhost:8000/api/analytics/dashboard"
echo ""

# –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫
log_step "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
$DOCKER_COMPOSE -f docker-compose.monolith.yml logs --tail=20 app

echo ""
log_info "üéâ DevAssist Pro Backend —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
echo "=" * 60
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:     cd backend && $DOCKER_COMPOSE -f docker-compose.monolith.yml logs -f"
echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞:          cd backend && $DOCKER_COMPOSE -f docker-compose.monolith.yml down"
echo "   ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:         cd backend && $DOCKER_COMPOSE -f docker-compose.monolith.yml restart"
echo "   ‚Ä¢ –°—Ç–∞—Ç—É—Å:             cd backend && $DOCKER_COMPOSE -f docker-compose.monolith.yml ps"
echo ""
echo "üîó Frontend React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞: http://localhost:3000"
echo "üîó Backend API –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8000"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è API –∫–ª—é—á–µ–π
log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤..."
if curl -s http://localhost:8000/api/llm/health | grep -q "healthy"; then
    log_info "‚úÖ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    log_warn "‚ö†Ô∏è  AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã —Ç—Ä–µ–±—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á–∏ –≤ .env —Ñ–∞–π–ª–µ"
fi

log_info "‚ú® –ó–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"