#!/bin/bash

echo "üéØ –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò"
echo "======================================="
echo ""

echo "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫—É—é –æ—à–∏–±–∫—É –≤ backend/app.py"
echo ""

# –°–æ–∑–¥–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ç—á-—Ñ–∞–π–ª
cat > fix_auth_final.py << 'EOF'
#!/usr/bin/env python3

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª app.py
with open('/app/app.py', 'r', encoding='utf-8') as f:
    content = f.read()

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É 1049 –∏ 1063
lines = content.split('\n')

for i, line in enumerate(lines):
    if 'response.get(\'success\', False) if isinstance(response, dict) else response.success' in line:
        # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π f-string
        if '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' in line:
            lines[i] = '        success = response.get(\'success\', False) if isinstance(response, dict) else getattr(response, \'success\', False)'
            lines.insert(i+1, '        logger.info(f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_data.email}: {\'—É—Å–ø–µ—à–Ω–æ\' if success else \'–Ω–µ—É–¥–∞—á–∞\'}")')
        elif '–í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' in line:
            lines[i] = '        success = response.get(\'success\', False) if isinstance(response, dict) else getattr(response, \'success\', False)'
            lines.insert(i+1, '        logger.info(f"–í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {login_data.email}: {\'—É—Å–ø–µ—à–Ω–æ\' if success else \'–Ω–µ—É–¥–∞—á–∞\'}")')

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
with open('/app/app.py', 'w', encoding='utf-8') as f:
    f.write('\n'.join(lines))

print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!")
EOF

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend..."
docker stop devassist_app_monolith 2>/dev/null || true

echo ""
echo "üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π..."
docker cp fix_auth_final.py devassist_app_monolith:/tmp/
docker start devassist_app_monolith
sleep 5
docker exec devassist_app_monolith python /tmp/fix_auth_final.py

echo ""
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend..."
docker restart devassist_app_monolith

echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

echo ""
echo "üß™ –§–ò–ù–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´ –í–°–ï–• –°–ò–°–¢–ï–ú"
echo "=============================="

# 1. Health Check
echo "üîç 1. Health Check Test:"
HEALTH=$(curl -s --max-time 10 "http://localhost:8000/health" 2>/dev/null || echo "TIMEOUT")
if echo "$HEALTH" | grep -q "healthy"; then
    echo "   ‚úÖ Health Check: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    HEALTH_OK=true
else
    echo "   ‚ùå Health Check: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    HEALTH_OK=false
fi

# 2. CORS Test
echo "üåê 2. CORS Preflight Test:"
CORS=$(curl -s -i -X OPTIONS \
    -H "Origin: http://46.149.71.162:3000" \
    -H "Access-Control-Request-Method: POST" \
    -H "Access-Control-Request-Headers: Content-Type" \
    "http://localhost:8000/api/auth/login" 2>/dev/null || echo "TIMEOUT")

if echo "$CORS" | grep -qi "access-control-allow-origin.*46.149.71.162"; then
    echo "   ‚úÖ CORS: —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è frontend"
    CORS_OK=true
else
    echo "   ‚ùå CORS: –ø—Ä–æ–±–ª–µ–º–∞"
    CORS_OK=false
fi

# 3. Authentication Test
echo "üîê 3. Authentication Test:"
AUTH=$(curl -s -X POST \
    -H "Content-Type: application/json" \
    -H "Origin: http://46.149.71.162:3000" \
    -d '{"email":"admin@devassist.pro","password":"admin123"}' \
    "http://localhost:8000/api/auth/login" 2>/dev/null || echo "TIMEOUT")

if echo "$AUTH" | grep -q '"success":true' && echo "$AUTH" | grep -q '"token":'; then
    echo "   ‚úÖ Authentication: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    AUTH_OK=true
else
    echo "   ‚ùå Authentication: –ø—Ä–æ–±–ª–µ–º–∞"
    echo "   –û—Ç–≤–µ—Ç: $(echo "$AUTH" | head -c 100)..."
    AUTH_OK=false
fi

# 4. Registration Test
echo "üë§ 4. Registration Test:"
REG=$(curl -s -X POST \
    -H "Content-Type: application/json" \
    -H "Origin: http://46.149.71.162:3000" \
    -d '{"email":"newuser@test.com","password":"test123","full_name":"New User","company":"Test"}' \
    "http://localhost:8000/api/auth/register" 2>/dev/null || echo "TIMEOUT")

if echo "$REG" | grep -q '"success":true'; then
    echo "   ‚úÖ Registration: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    REG_OK=true
else
    echo "   ‚ùå Registration: –ø—Ä–æ–±–ª–µ–º–∞"
    REG_OK=false
fi

# 5. External Access Test
echo "üåç 5. External Access Test:"
EXT=$(curl -s --max-time 10 "http://46.149.71.162:8000/health" 2>/dev/null || echo "TIMEOUT")
if echo "$EXT" | grep -q "healthy"; then
    echo "   ‚úÖ External Access: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    EXT_OK=true
else
    echo "   ‚ùå External Access: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    EXT_OK=false
fi

echo ""
echo "üéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:"
echo "====================="

if [ "$HEALTH_OK" = true ] && [ "$CORS_OK" = true ] && [ "$AUTH_OK" = true ] && [ "$REG_OK" = true ] && [ "$EXT_OK" = true ]; then
    echo ""
    echo "üéâüéâüéâ –ü–û–õ–ù–´–ô –£–°–ü–ï–•! –í–°–ï –°–ò–°–¢–ï–ú–´ –†–ê–ë–û–¢–ê–Æ–¢! üéâüéâüéâ"
    echo ""
    echo "‚úÖ Health Check: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "‚úÖ CORS: –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è frontend" 
    echo "‚úÖ Authentication: –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç"
    echo "‚úÖ Registration: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    echo "‚úÖ External Access: –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ"
    echo ""
    echo "üåê –ì–û–¢–û–í–û –ö –ü–†–û–ò–ó–í–û–î–°–¢–í–ï–ù–ù–û–ú–£ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:"
    echo ""
    echo "   üñ•Ô∏è  Frontend URL:     http://46.149.71.162:3000"
    echo "   üîß Backend API:      http://46.149.71.162:8000"
    echo "   üìö API Documentation: http://46.149.71.162:8000/docs"
    echo "   üíì Health Check:     http://46.149.71.162:8000/health"
    echo ""
    echo "üë§ –£–ß–ï–¢–ù–´–ï –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê:"
    echo "   üìß Email:    admin@devassist.pro"
    echo "   üîë Password: admin123"
    echo ""
    echo "üöÄ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨ FRONTEND:"
    echo "   ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    echo "   ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    echo "   ‚úÖ –í—Å–µ API –∑–∞–ø—Ä–æ—Å—ã –±–µ–∑ CORS –æ—à–∏–±–æ–∫"
    echo "   ‚úÖ –ü–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ DevAssist Pro —Ñ—É–Ω–∫—Ü–∏—è–º"
    echo ""
    echo "üéä –ü–†–û–ï–ö–¢ –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï!"
    
elif [ "$HEALTH_OK" = true ]; then
    echo "‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•"
    echo ""
    [ "$CORS_OK" != true ] && echo "‚ùå CORS: —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è"
    [ "$AUTH_OK" != true ] && echo "‚ùå Authentication: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    [ "$REG_OK" != true ] && echo "‚ùå Registration: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    [ "$EXT_OK" != true ] && echo "‚ùå External Access: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    
else
    echo "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´"
    echo "   Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ health check"
fi

echo ""
echo "üìã –£–ü–†–ê–í–õ–ï–ù–ò–ï:"
echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:  docker logs devassist_app_monolith"
echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:      docker restart devassist_app_monolith"  
echo "   –°—Ç–∞—Ç—É—Å:          docker ps | grep devassist"

# –û—á–∏—Å—Ç–∫–∞
rm -f fix_auth_final.py
docker exec devassist_app_monolith rm -f /tmp/fix_auth_final.py 2>/dev/null || true

echo ""
echo "‚úÖ –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"