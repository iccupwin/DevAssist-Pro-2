#!/bin/bash

echo "üåê –ù–ï–ú–ï–î–õ–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï CORS"
echo "==============================="
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "backend/docker-compose.monolith.yml" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã:"
echo "   Frontend: http://46.149.71.162:3000"
echo "   Backend:  http://46.149.71.162:8000"
echo "   –û—à–∏–±–∫–∞:   No 'Access-Control-Allow-Origin' header"
echo ""

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CORS –≤ docker-compose.monolith.yml..."

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS
echo "üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS:"
grep -A 1 -B 1 "ALLOWED_ORIGINS" backend/docker-compose.monolith.yml

echo ""
echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ CORS –¥–ª—è IP —Å–µ—Ä–≤–µ—Ä–∞..."

# –û–±–Ω–æ–≤–ª—è–µ–º CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
sed -i 's|ALLOWED_ORIGINS: .*|ALLOWED_ORIGINS: http://46.149.71.162:3000,http://46.149.71.162,http://localhost:3000,http://localhost:3001|' backend/docker-compose.monolith.yml

echo ""
echo "‚úÖ –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ CORS:"
grep -A 1 -B 1 "ALLOWED_ORIGINS" backend/docker-compose.monolith.yml

echo ""
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏..."

cd backend

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ app –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ app –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker stop devassist_app_monolith
docker rm devassist_app_monolith

echo ""
echo "üöÄ –ó–∞–ø—É—Å–∫ app –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏..."
docker compose -f docker-compose.monolith.yml up -d --build app

echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (20 —Å–µ–∫—É–Ω–¥)..."
sleep 20

echo ""
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CORS..."

# –¢–µ—Å—Ç —Å curl –∏–º–∏—Ç–∏—Ä—É—é—â–∏–π browser request
echo "üåê –¢–µ—Å—Ç CORS preflight –∑–∞–ø—Ä–æ—Å–∞..."
CORS_TEST=$(curl -s -i -X OPTIONS \
    -H "Origin: http://46.149.71.162:3000" \
    -H "Access-Control-Request-Method: POST" \
    -H "Access-Control-Request-Headers: Content-Type" \
    "http://localhost:8000/api/auth/login" 2>/dev/null)

if echo "$CORS_TEST" | grep -q "Access-Control-Allow-Origin"; then
    echo "   ‚úÖ CORS preflight: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "   –ó–∞–≥–æ–ª–æ–≤–∫–∏: $(echo "$CORS_TEST" | grep "Access-Control-Allow-Origin")"
    CORS_OK=true
else
    echo "   ‚ùå CORS preflight: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "   –û—Ç–≤–µ—Ç: $(echo "$CORS_TEST" | head -5)"
    CORS_OK=false
fi

echo ""
echo "üîê –¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ auth –∑–∞–ø—Ä–æ—Å–∞..."
AUTH_TEST=$(curl -s -X POST \
    -H "Content-Type: application/json" \
    -H "Origin: http://46.149.71.162:3000" \
    -d '{"email":"admin@devassist.pro","password":"admin123"}' \
    "http://localhost:8000/api/auth/login" 2>/dev/null)

if echo "$AUTH_TEST" | grep -q "access_token"; then
    echo "   ‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    AUTH_OK=true
else
    echo "   ‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: –ø—Ä–æ–±–ª–µ–º–∞"
    echo "   –û—Ç–≤–µ—Ç: $AUTH_TEST"
    AUTH_OK=false
fi

echo ""
echo "üéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:"
echo "========================"

if [ "$CORS_OK" = true ] && [ "$AUTH_OK" = true ]; then
    echo "üéâ CORS –ü–û–õ–ù–û–°–¢–¨–Æ –ò–°–ü–†–ê–í–õ–ï–ù!"
    echo ""
    echo "‚úÖ CORS headers –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
    echo "‚úÖ Preflight –∑–∞–ø—Ä–æ—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç"
    echo "‚úÖ POST –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–æ—Ö–æ–¥—è—Ç"
    echo "‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo ""
    echo "üîó Frontend —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç:"
    echo "   ‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    echo "   ‚Ä¢ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤—ã–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    echo "   ‚Ä¢ –î–µ–ª–∞—Ç—å API –∑–∞–ø—Ä–æ—Å—ã –∫ backend"
    echo ""
    echo "üåê –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:"
    echo "   Frontend: http://46.149.71.162:3000"
    echo "   Backend:  http://46.149.71.162:8000/docs"
    
elif [ "$CORS_OK" = true ]; then
    echo "‚ö†Ô∏è  CORS –∏—Å–ø—Ä–∞–≤–ª–µ–Ω, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π"
    echo ""
    echo "‚úÖ CORS headers —Ä–∞–±–æ—Ç–∞—é—Ç"
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –ª–æ–≥–∏–∫–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
    
else
    echo "‚ùå CORS –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    echo ""
    echo "üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:"
    echo "   docker compose -f docker-compose.monolith.yml logs app | grep -i cors"
    echo "   docker compose -f docker-compose.monolith.yml logs app | tail -20"
fi

echo ""
echo "üìã –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   –õ–æ–≥–∏ backend: docker compose -f docker-compose.monolith.yml logs app"
echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:   docker compose -f docker-compose.monolith.yml restart app"
echo "   –ü—Ä–æ–≤–µ—Ä–∫–∞:     curl -i http://localhost:8000/health"

cd ..