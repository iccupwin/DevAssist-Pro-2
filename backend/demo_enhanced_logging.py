#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –î–ï–¢–ê–õ–¨–ù–û–ì–û –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø –ö–ü –ê–ù–ê–õ–ò–ó–ê–¢–û–†–ê
"""

import requests
import json
import time

def demo_enhanced_logging():
    print("üî• –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –î–ï–¢–ê–õ–¨–ù–û–ì–û –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    # –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ
    demo_data = {
        "tz_content": "–¢–ï–•–ù–ò–ß–ï–°–ö–û–ï –ó–ê–î–ê–ù–ò–ï: –°–æ–∑–¥–∞—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ö–ü. –ë—é–¥–∂–µ—Ç –¥–æ 10 –º–ª–Ω —Ä—É–±–ª–µ–π, —Å—Ä–æ–∫ 12 –º–µ—Å—è—Ü–µ–≤.",
        "kp_content": "–ö–û–ú–ú–ï–†–ß–ï–°–ö–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï: –ö–æ–º–ø–∞–Ω–∏—è –¢–µ—Ö–°–æ—Ñ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –∑–∞ 8 –º–ª–Ω —Ä—É–±–ª–µ–π –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–µ—Å—è—Ü–µ–≤. –ö–æ–º–∞–Ω–¥–∞ 15 —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.",
        "model": "claude-3-5-sonnet-20241022",
        "max_tokens": 2000,
        "temperature": 0.1
    }
    
    print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º...")
    print("üîç –°–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å backend –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è!")
    print("")
    
    try:
        response = requests.post(
            "http://127.0.0.1:8000/api/llm/analyze-detailed",
            json=demo_data,
            headers={"Content-Type": "application/json"},
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –£–°–ü–ï–•! –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"üìã Analysis ID: {result.get('analysis_id')}")
            print(f"ü§ñ –ú–æ–¥–µ–ª—å: {result.get('model_used')}")
            print(f"‚è±Ô∏è –í—Ä–µ–º—è: {result.get('processing_time')}s")
            print(f"üîÑ Fallback: {result.get('fallback_mode')}")
            
            if result.get('detailed_analysis'):
                analysis = result['detailed_analysis']
                print(f"üìä –û–±—â–∏–π —Å–∫–æ—Ä: {analysis.get('overall_score')}")
                
            print("")
            print("üéâ –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ê–ö–¢–ò–í–ù–û!")
            print("üì∫ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å backend –≤—ã—à–µ ‚¨ÜÔ∏è")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–ò –î–ï–¢–ê–õ–¨–ù–û–ì–û –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø")
    print("")
    demo_enhanced_logging()
    print("")
    print("üìã –ß–¢–û –ë–´–õ–û –î–û–ë–ê–í–õ–ï–ù–û:")
    print("‚úÖ Frontend: –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Ñ–∞–π–ª–∞–º–∏")
    print("‚úÖ Backend: –ø–æ–ª–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏")  
    print("‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ: –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –æ—à–∏–±–æ–∫, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    print("")
    print("üîç –¢–ï–ü–ï–†–¨ –í–´ –í–ò–î–ò–¢–ï –í–°–Å –ß–¢–û –î–ï–õ–ê–ï–¢ –°–ò–°–¢–ï–ú–ê!")