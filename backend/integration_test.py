#\!/usr/bin/env python3
"""
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã DevAssist Pro
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–≤—è–∑–∫—É PostgreSQL + Backend + Frontend
"""
import requests
import json

def test_auth_integration():
    """–¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    base_url = "http://localhost:8000"
    
    # –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    register_data = {
        "email": "integration@test.com",
        "password": "password123",
        "full_name": "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –¢–µ—Å—Ç",
        "company": "Test Corp",
        "phone": "+7 (999) 888-77-66"
    }
    
    response = requests.post(f"{base_url}/api/auth/register", json=register_data)
    print(f"‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {response.status_code}")
    
    if response.status_code == 200:
        data = response.json()
        if data.get('success'):
            print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {data['user']['email']}")
            token = data.get('token')
            
            # –¢–µ—Å—Ç –≤—Ö–æ–¥–∞
            login_data = {
                "email": "integration@test.com", 
                "password": "password123"
            }
            response = requests.post(f"{base_url}/api/auth/login", json=login_data)
            print(f"‚úÖ –í—Ö–æ–¥: {response.status_code}")
            
            if response.status_code == 200:
                login_result = response.json()
                if login_result.get('success'):
                    print(f"   –í—Ö–æ–¥ —É—Å–ø–µ—à–Ω—ã–π: {login_result['user']['full_name']}")
                    return True
    
    return False

def test_database_integration():
    """–¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    import subprocess
    
    try:
        result = subprocess.run([
            'docker', 'exec', 'devassist_postgres_monolith',
            'psql', '-U', 'devassist', '-d', 'devassist_pro',
            '-c', 'SELECT COUNT(*) FROM users;'
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            lines = result.stdout.strip().split('\n')
            count = [line for line in lines if line.strip().isdigit()]
            if count:
                print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: {count[0]}")
            return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")
    
    return False

def test_api_endpoints():
    """–¢–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤"""
    base_url = "http://localhost:8000"
    
    endpoints = [
        "/health",
        "/api/auth/register",
        "/api/documents/upload",
        "/api/analytics/dashboard",
        "/api/reports/generate"
    ]
    
    for endpoint in endpoints:
        try:
            if endpoint == "/api/auth/register":
                continue  # –£–∂–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω –≤—ã—à–µ
            
            response = requests.get(f"{base_url}{endpoint}")
            status = "‚úÖ" if response.status_code in [200, 405, 422] else "‚ùå"
            print(f"{status} {endpoint}: {response.status_code}")
        except Exception as e:
            print(f"‚ùå {endpoint}: Error - {e}")

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ DevAssist Pro")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    auth_ok = test_auth_integration()
    
    # –¢–µ—Å—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_ok = test_database_integration()
    
    # –¢–µ—Å—Ç API
    test_api_endpoints()
    
    print("=" * 50)
    if auth_ok and db_ok:
        print("üéâ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ\!")
        print("‚úÖ PostgreSQL –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ Backend API —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç")
        print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
    
    print("üåê Frontend –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:3000")
    print("üîß Backend –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8000")

if __name__ == "__main__":
    main()
EOF < /dev/null
