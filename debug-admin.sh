#!/bin/bash

# DevAssist Pro - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å—é
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å–æ –≤—Ö–æ–¥–æ–º –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

echo -e "${BLUE}üîç DevAssist Pro - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏${NC}"
echo ""

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
print_info "1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose ps
echo ""

# 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
print_info "2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Backend API..."
if curl -f -s http://localhost:8000/health >/dev/null 2>&1; then
    print_success "‚úì Backend API –¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ—Ä—Ç 8000)"
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–¥–æ—Ä–æ–≤—å–µ
    health_response=$(curl -s http://localhost:8000/health 2>/dev/null)
    echo "   –û—Ç–≤–µ—Ç API: $health_response"
else
    print_error "‚úó Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ—Ä—Ç 8000)"
fi
echo ""

# 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º frontend
print_info "3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Frontend..."
if curl -f -s http://localhost/ >/dev/null 2>&1; then
    print_success "‚úì Frontend –¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ—Ä—Ç 80)"
elif curl -f -s http://localhost:3000/ >/dev/null 2>&1; then
    print_success "‚úì Frontend –¥–æ—Å—Ç—É–ø–µ–Ω (–ø–æ—Ä—Ç 3000)"
else
    print_error "‚úó Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi
echo ""

# 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
print_info "4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."

# –ù–∞—Ö–æ–¥–∏–º PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
PG_CONTAINER=$(docker compose ps --format "table {{.Names}}" | grep -E "(postgres|db)" | head -1)

if [ -n "$PG_CONTAINER" ]; then
    print_success "‚úì PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞–π–¥–µ–Ω: $PG_CONTAINER"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    if docker exec -i "$PG_CONTAINER" psql -U devassist_user -d devassist_pro -c "SELECT 1;" >/dev/null 2>&1; then
        print_success "‚úì –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç (devassist_user)"
        DB_USER="devassist_user"
    elif docker exec -i "$PG_CONTAINER" psql -U devassist -d devassist_pro -c "SELECT 1;" >/dev/null 2>&1; then
        print_success "‚úì –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç (devassist)"
        DB_USER="devassist"
    elif docker exec -i "$PG_CONTAINER" psql -U postgres -d devassist_pro -c "SELECT 1;" >/dev/null 2>&1; then
        print_success "‚úì –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç (postgres)"
        DB_USER="postgres"
    else
        print_error "‚úó –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
        DB_USER=""
    fi
else
    print_error "‚úó PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
    DB_USER=""
fi
echo ""

# 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É users
if [ -n "$DB_USER" ]; then
    print_info "5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    table_exists=$(docker exec -i "$PG_CONTAINER" psql -U "$DB_USER" -d devassist_pro -t -c "SELECT COUNT(*) FROM information_schema.tables WHERE table_name = 'users';" 2>/dev/null | tr -d ' ')
    
    if [ "$table_exists" = "1" ]; then
        print_success "‚úì –¢–∞–±–ª–∏—Ü–∞ users —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        
        # –°—á–∏—Ç–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        total_users=$(docker exec -i "$PG_CONTAINER" psql -U "$DB_USER" -d devassist_pro -t -c "SELECT COUNT(*) FROM users;" 2>/dev/null | tr -d ' ')
        admin_users=$(docker exec -i "$PG_CONTAINER" psql -U "$DB_USER" -d devassist_pro -t -c "SELECT COUNT(*) FROM users WHERE is_superuser = true;" 2>/dev/null | tr -d ' ')
        
        print_info "   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $total_users"
        print_info "   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: $admin_users"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–¥–º–∏–Ω–æ–≤
        if [ "$admin_users" -gt 0 ]; then
            print_success "‚úì –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–∞–π–¥–µ–Ω—ã:"
            docker exec -i "$PG_CONTAINER" psql -U "$DB_USER" -d devassist_pro -c "SELECT id, email, full_name, is_active, is_verified FROM users WHERE is_superuser = true;" 2>/dev/null
        else
            print_warning "‚ö† –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
        fi
    else
        print_error "‚úó –¢–∞–±–ª–∏—Ü–∞ users –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        print_info "   –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É users..."
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        CREATE_SQL="
        CREATE TABLE IF NOT EXISTS users (
            id SERIAL PRIMARY KEY,
            email VARCHAR(255) UNIQUE NOT NULL,
            hashed_password VARCHAR(255) NOT NULL,
            full_name VARCHAR(255) NOT NULL,
            is_active BOOLEAN DEFAULT true,
            is_superuser BOOLEAN DEFAULT false,
            is_verified BOOLEAN DEFAULT false,
            company VARCHAR(255),
            position VARCHAR(255),
            phone VARCHAR(50),
            created_at TIMESTAMP DEFAULT NOW(),
            updated_at TIMESTAMP DEFAULT NOW()
        );
        "
        
        if docker exec -i "$PG_CONTAINER" psql -U "$DB_USER" -d devassist_pro -c "$CREATE_SQL" >/dev/null 2>&1; then
            print_success "‚úì –¢–∞–±–ª–∏—Ü–∞ users —Å–æ–∑–¥–∞–Ω–∞"
        else
            print_error "‚úó –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É users"
        fi
    fi
else
    print_warning "‚ö† –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ë–î - –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
fi
echo ""

# 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints
print_info "6. –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoints..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º auth endpoints
if curl -f -s http://localhost:8000/api/auth/me >/dev/null 2>&1; then
    print_success "‚úì Auth API –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    print_warning "‚ö† Auth API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç —Ç–æ–∫–µ–Ω)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º admin endpoints
admin_response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/api/admin/users 2>/dev/null)
if [ "$admin_response" = "401" ] || [ "$admin_response" = "403" ]; then
    print_success "‚úì Admin API –¥–æ—Å—Ç—É–ø–µ–Ω (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é)"
elif [ "$admin_response" = "200" ]; then
    print_success "‚úì Admin API –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    print_warning "‚ö† Admin API –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: $admin_response)"
fi
echo ""

# 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏
print_info "7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏..."
echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –∏–∑ –ª–æ–≥–æ–≤:"
docker compose logs --tail=20 | grep -i error || echo "   –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
echo ""

# 8. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
print_info "8. –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."

if [ -n "$DB_USER" ]; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python –¥–ª—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
    if command -v python3 >/dev/null 2>&1; then
        # –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
        password_hash=$(python3 -c "
import hashlib
import base64
password = 'admin123456'
hash_obj = hashlib.sha256(password.encode())
print('\$2b\$12\$' + base64.b64encode(hash_obj.digest()).decode()[:22] + 'abcdefghijklmnopqrstuv')
" 2>/dev/null || echo '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewAlzYIsGhL6VK5u')
    else
        # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ö–µ—à –¥–ª—è –ø–∞—Ä–æ–ª—è 'admin123456'
        password_hash='$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewAlzYIsGhL6VK5u'
    fi
    
    # SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
    ADMIN_SQL="
    INSERT INTO users (
        email, 
        hashed_password, 
        full_name, 
        is_active, 
        is_superuser, 
        is_verified,
        company,
        position,
        created_at,
        updated_at
    ) VALUES (
        'admin@devassist.pro',
        '$password_hash',
        'System Administrator',
        true,
        true,
        true,
        'DevAssist Pro',
        'Administrator',
        NOW(),
        NOW()
    ) ON CONFLICT (email) DO UPDATE SET
        is_superuser = true,
        is_active = true,
        is_verified = true,
        hashed_password = '$password_hash',
        updated_at = NOW();
    "
    
    if docker exec -i "$PG_CONTAINER" psql -U "$DB_USER" -d devassist_pro -c "$ADMIN_SQL" >/dev/null 2>&1; then
        print_success "‚úì –¢–µ—Å—Ç–æ–≤—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω"
    else
        print_error "‚úó –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    fi
else
    print_warning "‚ö† –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞ - –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î"
fi
echo ""

# 9. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
print_info "9. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
all_good=true

if ! curl -f -s http://localhost:8000/health >/dev/null 2>&1; then
    print_error "‚úó Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    all_good=false
fi

if [ -z "$DB_USER" ]; then
    print_error "‚úó –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    all_good=false
fi

if [ "$admin_users" = "0" ]; then
    print_error "‚úó –ù–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"
    all_good=false
fi

echo ""
if [ "$all_good" = true ]; then
    print_success "üéâ –í–°–ï –ì–û–¢–û–í–û!"
    echo ""
    print_info "–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å:"
    print_info "   URL: http://46.149.71.162/admin"
    print_info "   Email: admin@devassist.pro"
    print_info "   –ü–∞—Ä–æ–ª—å: admin123456"
    echo ""
    print_warning "‚ö†Ô∏è  –°–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞!"
else
    print_error "‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´!"
    echo ""
    print_info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
    print_info "1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã: docker compose restart"
    print_info "2. –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å: ./fix-and-deploy.sh"
    print_info "3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏: docker compose logs"
fi

echo ""
print_info "–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: ./debug-admin.sh"