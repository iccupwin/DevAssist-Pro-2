/*! For license information please see 784.23cc98a4.chunk.js.LICENSE.txt */
"use strict";(self.webpackChunkdevassist_pro_frontend=self.webpackChunkdevassist_pro_frontend||[]).push([[784],{8299:(e,t,s)=>{s.d(t,{Z:()=>u});const r=new class{constructor(){this.baseURL=void 0,this.baseURL={NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!1,REACT_APP_API_URL:"http://46.149.71.162:8000",REACT_APP_API_BASE_URL:"http://46.149.71.162:8000/api",REACT_APP_WS_URL:"ws://46.149.71.162:8000/ws",REACT_APP_ENVIRONMENT:"development",REACT_APP_USE_REAL_API:"true"}.REACT_APP_BACKEND_API_URL||"https://your-api-domain.com/admin"}async getServices(){try{0;const e=await fetch(`${this.baseURL}/services`),t=await e.json();return{success:e.ok,data:t.services||[],message:t.message,error:e.ok?void 0:t.error}}catch(e){return console.error("Failed to fetch services:",e),{success:!1,data:[],error:e instanceof Error?e.message:"Unknown error"}}}async performServiceAction(e){try{0;const t=await fetch(`${this.baseURL}/services/${e.serviceId}/action`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:e.action})}),s=await t.json();return{success:t.ok,data:{message:s.message||`Service ${e.action} completed`},error:t.ok?void 0:s.error}}catch(t){return console.error("Service action failed:",t),{success:!1,data:{message:""},error:t instanceof Error?t.message:"Unknown error"}}}async getLogs(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{0;const t=new URLSearchParams;e.service&&t.append("service",e.service),e.level&&t.append("level",e.level),e.search&&t.append("search",e.search),e.limit&&t.append("limit",e.limit.toString());const s=await fetch(`${this.baseURL}/logs?${t}`),r=await s.json();return{success:s.ok,data:r.logs||[],message:r.message,error:s.ok?void 0:r.error}}catch(t){return console.error("Failed to fetch logs:",t),{success:!1,data:[],error:t instanceof Error?t.message:"Unknown error"}}}async getDatabases(){try{0;const e=await fetch(`${this.baseURL}/databases`),t=await e.json();return{success:e.ok,data:t.databases||[],message:t.message,error:e.ok?void 0:t.error}}catch(e){return console.error("Failed to fetch databases:",e),{success:!1,data:[],error:e instanceof Error?e.message:"Unknown error"}}}async getInfrastructureMetrics(){try{0;const e=await fetch(`${this.baseURL}/infrastructure/metrics`),t=await e.json();return{success:e.ok,data:t.metrics||this.getDefaultMetrics(),message:t.message,error:e.ok?void 0:t.error}}catch(e){return console.error("Failed to fetch infrastructure metrics:",e),{success:!1,data:this.getDefaultMetrics(),error:e instanceof Error?e.message:"Unknown error"}}}async checkServiceHealth(e){try{0;const t=await fetch(`${this.baseURL}/services/${e}/health`),s=await t.json();return{success:t.ok,data:s.health||{status:"unknown",responseTime:0},error:t.ok?void 0:s.error}}catch(t){return console.error("Health check failed:",t),{success:!1,data:{status:"error",responseTime:0},error:t instanceof Error?t.message:"Unknown error"}}}getMockServices(){return{success:!0,data:[{id:"api-gateway",name:"api-gateway",displayName:"API Gateway",status:"running",port:8e3,url:"http://localhost:8000",description:"\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u0439 API Gateway \u0434\u043b\u044f \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432",cpu:15.4,memory:256,uptime:"2d 14h 32m",lastRestart:"2024-01-13 10:15:00",version:"1.2.3",dependencies:["auth-service","database"],healthCheck:{endpoint:"/health",status:"healthy",lastCheck:(new Date).toISOString(),responseTime:120}},{id:"auth-service",name:"auth-service",displayName:"Auth Service",status:"running",port:8001,url:"http://localhost:8001",description:"\u0421\u0435\u0440\u0432\u0438\u0441 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438",cpu:8.2,memory:128,uptime:"2d 14h 30m",lastRestart:"2024-01-13 10:17:00",version:"1.1.5",dependencies:["database","redis"],healthCheck:{endpoint:"/health",status:"healthy",lastCheck:(new Date).toISOString(),responseTime:85}},{id:"llm-service",name:"llm-service",displayName:"LLM Service",status:"running",port:8002,url:"http://localhost:8002",description:"\u0421\u0435\u0440\u0432\u0438\u0441 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f AI \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438",cpu:45.7,memory:1024,uptime:"2d 14h 28m",lastRestart:"2024-01-13 10:19:00",version:"2.0.1",dependencies:["database","redis"],healthCheck:{endpoint:"/health",status:"healthy",lastCheck:(new Date).toISOString(),responseTime:230}},{id:"documents-service",name:"documents-service",displayName:"Documents Service",status:"running",port:8003,url:"http://localhost:8003",description:"\u0421\u0435\u0440\u0432\u0438\u0441 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432",cpu:22.1,memory:512,uptime:"2d 14h 25m",lastRestart:"2024-01-13 10:22:00",version:"1.3.2",dependencies:["database"],healthCheck:{endpoint:"/health",status:"healthy",lastCheck:(new Date).toISOString(),responseTime:95}},{id:"dashboard-service",name:"dashboard-service",displayName:"Dashboard Service",status:"error",port:8004,url:"http://localhost:8004",description:"\u0421\u0435\u0440\u0432\u0438\u0441 \u0434\u0430\u0448\u0431\u043e\u0440\u0434\u0430 \u0438 \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0438",cpu:0,memory:0,uptime:"0m",lastRestart:"2024-01-13 15:30:00",version:"1.0.8",dependencies:["database","auth-service"],healthCheck:{endpoint:"/health",status:"unhealthy",lastCheck:(new Date).toISOString(),responseTime:0}}]}}mockServiceAction(e){return{success:!0,data:{message:{start:`\u0421\u0435\u0440\u0432\u0438\u0441 ${e.serviceId} \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f...`,stop:`\u0421\u0435\u0440\u0432\u0438\u0441 ${e.serviceId} \u043e\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f...`,restart:`\u0421\u0435\u0440\u0432\u0438\u0441 ${e.serviceId} \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f...`,reload:`\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 ${e.serviceId} \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442\u0441\u044f...`}[e.action]||"\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f..."}}}getMockLogs(e){let t=[{id:"1",service:"api-gateway",timestamp:new Date(Date.now()-12e4).toISOString(),level:"info",message:"Request processed successfully: POST /api/auth/login",requestId:"req-12345"},{id:"2",service:"llm-service",timestamp:new Date(Date.now()-24e4).toISOString(),level:"info",message:"Claude API request completed in 2.3s",requestId:"req-12346"},{id:"3",service:"dashboard-service",timestamp:new Date(Date.now()-102e4).toISOString(),level:"error",message:"Database connection timeout after 30s",details:{timeout:3e4,host:"localhost:5432"}},{id:"4",service:"auth-service",timestamp:new Date(Date.now()-114e4).toISOString(),level:"warn",message:"Rate limit exceeded for IP 192.168.1.100",details:{ip:"192.168.1.100",limit:100}},{id:"5",service:"documents-service",timestamp:new Date(Date.now()-192e4).toISOString(),level:"info",message:"PDF processing completed: document_12345.pdf",requestId:"req-12347"}];if(e.service&&(t=t.filter(t=>t.service===e.service)),e.level&&(t=t.filter(t=>t.level===e.level)),e.search){const s=e.search.toLowerCase();t=t.filter(e=>e.message.toLowerCase().includes(s)||e.service.toLowerCase().includes(s))}return e.limit&&(t=t.slice(0,e.limit)),{success:!0,data:t}}getMockDatabases(){return{success:!0,data:[{name:"PostgreSQL",type:"postgresql",status:"connected",host:"localhost",port:5432,size:"2.4 GB",connections:23,uptime:"5d 8h 15m",performance:{queryTime:12.5,slowQueries:3,lockWaits:0}},{name:"Redis",type:"redis",status:"connected",host:"localhost",port:6379,size:"128 MB",connections:15,uptime:"5d 8h 12m",performance:{queryTime:.8,slowQueries:0,lockWaits:0}}]}}getMockInfrastructureMetrics(){return{success:!0,data:{system:{cpuUsage:23.4,memoryUsage:68.7,diskUsage:45.2,networkIO:125.8},docker:{containers:12,images:8,volumes:6,networks:3},loadBalancer:{status:"active",requestsPerSecond:45.2,activeConnections:234},ssl:{status:"valid",expiryDate:"2024-12-15",issuer:"Let's Encrypt"}}}}getDefaultMetrics(){return{system:{cpuUsage:0,memoryUsage:0,diskUsage:0,networkIO:0},docker:{containers:0,images:0,volumes:0,networks:0},loadBalancer:{status:"inactive",requestsPerSecond:0,activeConnections:0},ssl:{status:"valid",expiryDate:"",issuer:""}}}};const a={storageType:"localStorage",refreshThreshold:5,maxRefreshRetries:3,enableAutoRefresh:!0};class n{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.config=void 0,this.refreshTimeout=null,this.refreshPromise=null,this.refreshCallbacks=new Set,this.storage=void 0,this.config={...a,...e},this.storage=this.getStorage(),this.scheduleTokenRefresh()}static getInstance(e){return n.instance||(n.instance=new n(e)),n.instance}getStorage(){return"memory"===this.config.storageType?new Map:"undefined"!==typeof window?"localStorage"===this.config.storageType?window.localStorage:window.sessionStorage:new Map}setToken(e){try{const t=JSON.stringify({...e,storedAt:Date.now()});this.storage instanceof Map?this.storage.set("auth_token",t):this.storage.setItem("auth_token",t),this.scheduleTokenRefresh(),this.notifyRefreshCallbacks(e)}catch(t){throw new Error(`Token storage failed: ${t instanceof Error?t.message:"Unknown error"}`)}}getToken(){try{const e=this.storage instanceof Map?this.storage.get("auth_token"):this.storage.getItem("auth_token");if(!e)return null;const t=JSON.parse(e);return this.isTokenExpired(t)?(this.clearToken(),null):t}catch(e){return this.clearToken(),null}}getAccessToken(){const e=this.getToken();return(null===e||void 0===e?void 0:e.accessToken)||null}getAuthHeader(){const e=this.getAccessToken();return e?{Authorization:`Bearer ${e}`}:{}}isAuthenticated(){const e=this.getToken();return null!==e&&!this.isTokenExpired(e)}isTokenExpired(e){return!!e.expiresAt&&Date.now()>=e.expiresAt}shouldRefreshToken(e){if(!e.expiresAt||!this.config.enableAutoRefresh)return!1;const t=e.expiresAt-60*this.config.refreshThreshold*1e3;return Date.now()>=t}clearToken(){try{this.storage instanceof Map?this.storage.delete("auth_token"):this.storage.removeItem("auth_token"),this.refreshTimeout&&(clearTimeout(this.refreshTimeout),this.refreshTimeout=null),this.notifyRefreshCallbacks(null)}catch(e){}}async refreshToken(){if(this.refreshPromise)return this.refreshPromise;const e=this.getToken();if(null===e||void 0===e||!e.refreshToken)return this.clearToken(),null;this.refreshPromise=this.performTokenRefresh(e.refreshToken);try{return await this.refreshPromise}finally{this.refreshPromise=null}}async performTokenRefresh(e){try{const t=await fetch("/api/auth/refresh",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({refreshToken:e})});if(!t.ok)throw new Error(`Token refresh failed: ${t.status}`);const s=await t.json();if(s.success&&s.token){const t={accessToken:s.token.accessToken,refreshToken:s.token.refreshToken||e,expiresAt:s.token.expiresAt||Date.now()+36e5,tokenType:"Bearer",scope:s.token.scope};return this.setToken(t),t}throw new Error(s.message||"Token refresh failed")}catch(t){return this.clearToken(),null}}scheduleTokenRefresh(){if(this.refreshTimeout&&clearTimeout(this.refreshTimeout),!this.config.enableAutoRefresh)return;const e=this.getToken();if(null===e||void 0===e||!e.expiresAt)return;const t=e.expiresAt-60*this.config.refreshThreshold*1e3,s=Math.max(0,t-Date.now());this.refreshTimeout=setTimeout(async()=>{await this.refreshToken()},s)}onTokenChange(e){return this.refreshCallbacks.add(e),()=>{this.refreshCallbacks.delete(e)}}notifyRefreshCallbacks(e){this.refreshCallbacks.forEach(t=>{try{t(e)}catch(s){}})}async validateToken(){if(!this.getAccessToken())return!1;try{const e=await fetch("/api/auth/me",{headers:this.getAuthHeader()});if(e.ok)return!0;if(401===e.status){return null!==await this.refreshToken()}return!1}catch(e){return!1}}getTokenInfo(){const e=this.getToken();if(!e)return{isValid:!1,expiresAt:null,expiresIn:null,needsRefresh:!1};const t=!this.isTokenExpired(e),s=e.expiresAt?e.expiresAt-Date.now():null,r=this.shouldRefreshToken(e);return{isValid:t,expiresAt:e.expiresAt,expiresIn:s,needsRefresh:r}}static createTokenData(e){const t=e.expiresAt?new Date(e.expiresAt).getTime():Date.now()+(e.expiresIn?1e3*e.expiresIn:36e5);return{accessToken:e.accessToken||e.token,refreshToken:e.refreshToken,expiresAt:t,tokenType:"Bearer",scope:e.scope}}static async initialize(e){const t=n.getInstance(e);return await t.validateToken()||t.clearToken(),t}destroy(){this.refreshTimeout&&clearTimeout(this.refreshTimeout),this.refreshCallbacks.clear(),this.refreshPromise=null}}n.instance=void 0;const o=n.getInstance();class i{constructor(){this.baseURL=void 0,this.currentUser=null,this.userCallbacks=new Set,this.baseURL="http://46.149.71.162:8000",this.initializeTokenListener()}static getInstance(){return i.instance||(i.instance=new i),i.instance}initializeTokenListener(){o.onTokenChange(e=>{e||(this.currentUser=null,this.notifyUserCallbacks(null))})}async login(e){try{const t=await fetch(`${this.baseURL}/auth/login`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),s=await t.json();if(t.ok&&s.success){if(s.token){const e=this.createTokenData(s.token);o.setToken(e)}return s.user&&(this.currentUser=s.user,this.notifyUserCallbacks(s.user)),s}return{success:!1,error:s.message||"Login failed"}}catch(t){return console.error("Login error:",t),{success:!1,error:t instanceof Error?t.message:"Network error"}}}async register(e){try{const t=await fetch(`${this.baseURL}/auth/register`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),s=await t.json();if(t.ok&&s.success){if(s.token){const e=this.createTokenData(s.token);o.setToken(e)}return s.user&&(this.currentUser=s.user,this.notifyUserCallbacks(s.user)),s}return{success:!1,error:s.message||"Registration failed"}}catch(t){return console.error("Registration error:",t),{success:!1,error:t instanceof Error?t.message:"Network error"}}}async logout(){try{o.getAccessToken()&&await fetch(`${this.baseURL}/auth/logout`,{method:"POST",headers:{...o.getAuthHeader(),"Content-Type":"application/json"}})}catch(e){console.error("Logout API error:",e)}finally{o.clearToken(),this.currentUser=null,this.notifyUserCallbacks(null)}}async getCurrentUser(){if(this.currentUser)return this.currentUser;if(!o.isAuthenticated())return null;try{const e=await fetch(`${this.baseURL}/auth/me`,{headers:o.getAuthHeader()});if(e.ok){const t=await e.json();if(t.success&&t.user)return this.currentUser=t.user,this.notifyUserCallbacks(t.user),t.user}else if(401===e.status){if(await o.refreshToken())return this.getCurrentUser();await this.logout()}}catch(e){console.error("Get current user error:",e)}return null}async updateProfile(e){try{const t=await fetch(`${this.baseURL}/auth/profile`,{method:"PUT",headers:{...o.getAuthHeader(),"Content-Type":"application/json"},body:JSON.stringify(e)}),s=await t.json();return t.ok&&s.success?(s.user&&(this.currentUser=s.user,this.notifyUserCallbacks(s.user)),s):{success:!1,error:s.message||"Profile update failed"}}catch(t){return console.error("Profile update error:",t),{success:!1,error:t instanceof Error?t.message:"Network error"}}}async changePassword(e){try{const t=await fetch(`${this.baseURL}/auth/change-password`,{method:"POST",headers:{...o.getAuthHeader(),"Content-Type":"application/json"},body:JSON.stringify(e)}),s=await t.json();return{success:t.ok&&s.success,message:s.message,error:s.error||(t.ok?void 0:"Password change failed")}}catch(t){return console.error("Password change error:",t),{success:!1,error:t instanceof Error?t.message:"Network error"}}}async requestPasswordReset(e){try{const t=await fetch(`${this.baseURL}/auth/forgot-password`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),s=await t.json();return{success:t.ok&&s.success,message:s.message,error:s.error||(t.ok?void 0:"Password reset request failed")}}catch(t){return console.error("Password reset request error:",t),{success:!1,error:t instanceof Error?t.message:"Network error"}}}async verifyEmail(e){try{const t=await fetch(`${this.baseURL}/auth/verify-email`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({token:e})}),s=await t.json();return t.ok&&s.success&&s.user&&(this.currentUser=s.user,this.notifyUserCallbacks(s.user)),{success:t.ok&&s.success,user:s.user,message:s.message,error:s.error||(t.ok?void 0:"Email verification failed")}}catch(t){return console.error("Email verification error:",t),{success:!1,error:t instanceof Error?t.message:"Network error"}}}async socialLogin(e,t){try{const s=await fetch(`${this.baseURL}/auth/social/${e}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:t})}),r=await s.json();if(s.ok&&r.success){if(r.token){const e=this.createTokenData(r.token);o.setToken(e)}return r.user&&(this.currentUser=r.user,this.notifyUserCallbacks(r.user)),r}return{success:!1,error:r.message||"Social login failed"}}catch(s){return console.error("Social login error:",s),{success:!1,error:s instanceof Error?s.message:"Network error"}}}isAuthenticated(){return o.isAuthenticated()&&null!==this.currentUser}getUser(){return this.currentUser}async initializeAuth(){if(!o.isAuthenticated())return null;try{return await this.getCurrentUser()}catch(e){return console.error("Auth initialization error:",e),await this.logout(),null}}onUserChange(e){return this.userCallbacks.add(e),()=>{this.userCallbacks.delete(e)}}notifyUserCallbacks(e){this.userCallbacks.forEach(t=>{try{t(e)}catch(s){console.error("User change callback error:",s)}})}async uploadAvatar(e){try{const t=new FormData;t.append("avatar",e);const s=await fetch(`${this.baseURL}/auth/avatar`,{method:"POST",headers:o.getAuthHeader(),body:t}),r=await s.json();return s.ok&&r.success?(r.user&&(this.currentUser=r.user,this.notifyUserCallbacks(r.user)),r):{success:!1,error:r.message||"Avatar upload failed"}}catch(t){return console.error("Avatar upload error:",t),{success:!1,error:t instanceof Error?t.message:"Network error"}}}getAuthStatus(){return{isAuthenticated:this.isAuthenticated(),user:this.currentUser,tokenInfo:o.getTokenInfo()}}async refreshAuth(){return await o.refreshToken()?await this.getCurrentUser():null}createTokenData(e){const t=e.expiresAt?new Date(e.expiresAt).getTime():Date.now()+(e.expiresIn?1e3*e.expiresIn:36e5);return{accessToken:e.accessToken||e.token,refreshToken:e.refreshToken,expiresAt:t,tokenType:"Bearer",scope:e.scope}}}i.instance=void 0;const c=i.getInstance();const u=new class{constructor(){this.baseURL="http://46.149.71.162:8000"}async getSystemMetrics(){try{const[e,t,s,r,a,n]=await Promise.all([this.getUsersMetrics(),this.getApiMetrics(),this.getAIMetrics(),this.getAnalysesMetrics(),this.getErrorsMetrics(),this.getUptimeMetrics()]);return{success:!0,data:{users:e,api:t,ai:s,analyses:r,errors:a,uptime:n}}}catch(e){return console.error("Failed to get system metrics:",e),{success:!1,data:this.getMockMetrics(),error:e instanceof Error?e.message:"Unknown error"}}}async getUsersMetrics(){try{await c.getCurrentUser();const e=this.getStoredUsersCount(),t=this.getActiveUsersCount(),s=this.getPremiumUsersCount(),r=this.getBannedUsersCount();return{total:e,change24h:this.getRandomChange(-5,15),active:t,premium:s,banned:r}}catch(e){return console.error("Failed to get users metrics:",e),{total:1247,change24h:12,active:892,premium:156,banned:8}}}async getApiMetrics(){try{const e=this.getApiCallsCount(),t=this.getApiSuccessRate(),s=this.getAverageResponseTime();return{calls:e,change1h:this.getRandomChange(-50,100),successRate:t,avgResponseTime:s}}catch(e){return console.error("Failed to get API metrics:",e),{calls:45891,change1h:234,successRate:97.3,avgResponseTime:2.4}}}async getAIMetrics(){try{const e=this.getAICosts(),t=this.getTokenUsage(),s=this.getProviderStatus();return{costs:e,change24h:this.getRandomChange(-20,30),tokenUsage:t,providerStatus:s}}catch(e){return console.error("Failed to get AI metrics:",e),{costs:247.82,change24h:12.15,tokenUsage:125e4,providerStatus:{openai:"active",anthropic:"active",google:"limited"}}}}async getAnalysesMetrics(){try{const e=this.getAnalysesCount(),t=this.getSuccessfulAnalysesCount(),s=this.getFailedAnalysesCount();return{total:e,change24h:this.getRandomChange(-10,50),successful:t,failed:s}}catch(e){return console.error("Failed to get analyses metrics:",e),{total:3421,change24h:89,successful:3298,failed:123}}}async getErrorsMetrics(){try{const e=this.getErrorsCount(),t=this.getCriticalErrorsCount(),s=this.getWarningsCount();return{count:e,change24h:this.getRandomChange(-5,3),critical:t,warnings:s}}catch(e){return console.error("Failed to get errors metrics:",e),{count:12,change24h:-3,critical:1,warnings:11}}}async getUptimeMetrics(){try{return{percentage:99.8,days:30,lastDowntime:"2024-06-15T10:30:00Z"}}catch(e){return console.error("Failed to get uptime metrics:",e),{percentage:99.8,days:30,lastDowntime:"2024-06-15T10:30:00Z"}}}async getSystemAlerts(){try{return{success:!0,data:await this.generateRealAlerts()}}catch(e){return console.error("Failed to get system alerts:",e),{success:!1,data:this.getMockAlerts(),error:e instanceof Error?e.message:"Unknown error"}}}async getUsers(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20;try{return{success:!0,data:await this.getRealUsers(e,t)}}catch(s){return console.error("Failed to get users:",s),{success:!1,data:{users:this.getMockUsers(),total:1247},error:s instanceof Error?s.message:"Unknown error"}}}async getAIProviders(){try{return{success:!0,data:await this.getRealAIProviders()}}catch(e){return console.error("Failed to get AI providers:",e),{success:!1,data:this.getMockAIProviders(),error:e instanceof Error?e.message:"Unknown error"}}}async getBackendServices(){try{const e=await r.getServices();return{success:e.success,data:e.data,error:e.error}}catch(e){return console.error("Failed to get backend services:",e),{success:!1,data:[],error:e instanceof Error?e.message:"Unknown error"}}}async getBackendLogs(){try{const e=await r.getLogs();return{success:e.success,data:e.data,error:e.error}}catch(e){return console.error("Failed to get backend logs:",e),{success:!1,data:[],error:e instanceof Error?e.message:"Unknown error"}}}async getDatabases(){try{const e=await r.getDatabases();return{success:e.success,data:e.data,error:e.error}}catch(e){return console.error("Failed to get databases:",e),{success:!1,data:[],error:e instanceof Error?e.message:"Unknown error"}}}getStoredUsersCount(){const e=localStorage.getItem("devassist_users");if(e)try{return JSON.parse(e).length}catch{return 1247}return 1247}getActiveUsersCount(){const e=localStorage.getItem("devassist_active_users");if(e)try{return JSON.parse(e).length}catch{return 892}return 892}getPremiumUsersCount(){const e=localStorage.getItem("devassist_premium_users");if(e)try{return JSON.parse(e).length}catch{return 156}return 156}getBannedUsersCount(){const e=localStorage.getItem("devassist_banned_users");if(e)try{return JSON.parse(e).length}catch{return 8}return 8}getApiCallsCount(){const e=localStorage.getItem("devassist_api_calls");if(e)try{return parseInt(e)}catch{return 45891}return 45891}getApiSuccessRate(){const e=localStorage.getItem("devassist_api_success_rate");if(e)try{return parseFloat(e)}catch{return 97.3}return 97.3}getAverageResponseTime(){const e=localStorage.getItem("devassist_avg_response_time");if(e)try{return parseFloat(e)}catch{return 2.4}return 2.4}getAICosts(){const e=localStorage.getItem("devassist_ai_costs");if(e)try{return parseFloat(e)}catch{return 247.82}return 247.82}getTokenUsage(){const e=localStorage.getItem("devassist_token_usage");if(e)try{return parseInt(e)}catch{return 125e4}return 125e4}getProviderStatus(){const e=localStorage.getItem("devassist_provider_status");if(e)try{return JSON.parse(e)}catch{return{openai:"active",anthropic:"active",google:"limited"}}return{openai:"active",anthropic:"active",google:"limited"}}getAnalysesCount(){const e=localStorage.getItem("devassist_analyses_count");if(e)try{return parseInt(e)}catch{return 3421}return 3421}getSuccessfulAnalysesCount(){const e=localStorage.getItem("devassist_successful_analyses");if(e)try{return parseInt(e)}catch{return 3298}return 3298}getFailedAnalysesCount(){const e=localStorage.getItem("devassist_failed_analyses");if(e)try{return parseInt(e)}catch{return 123}return 123}getErrorsCount(){const e=localStorage.getItem("devassist_errors_count");if(e)try{return parseInt(e)}catch{return 12}return 12}getCriticalErrorsCount(){const e=localStorage.getItem("devassist_critical_errors");if(e)try{return parseInt(e)}catch{return 1}return 1}getWarningsCount(){const e=localStorage.getItem("devassist_warnings_count");if(e)try{return parseInt(e)}catch{return 11}return 11}async generateRealAlerts(){const e=[],t=new Date,s=this.getApiCallsCount(),r=this.getAICosts(),a=this.getErrorsCount();this.getStoredUsersCount();s>4e4&&e.push({id:"1",type:"api_usage",severity:"medium",title:"High API usage detected",message:`API usage is ${Math.round(s/5e4*100)}% of daily limit`,timestamp:new Date(t.getTime()-6e5).toISOString(),acknowledged:!1}),r>200&&e.push({id:"2",type:"cost_limit",severity:"high",title:"AI costs approaching limit",message:`Current AI costs: $${r.toFixed(2)} (${Math.round(r/300*100)}% of monthly budget)`,timestamp:new Date(t.getTime()-15e5).toISOString(),acknowledged:!1}),a>10&&e.push({id:"3",type:"error_rate",severity:"high",title:"High error rate detected",message:`${a} errors in the last 24 hours`,timestamp:new Date(t.getTime()-27e5).toISOString(),acknowledged:!1});const n=this.getRandomChange(0,30);return n>20&&e.push({id:"4",type:"user_registration",severity:"low",title:"New user registrations spike",message:`${n} new registrations in last hour`,timestamp:new Date(t.getTime()-36e5).toISOString(),acknowledged:!0}),e}async getRealUsers(e,t){const s=this.getStoredUsersCount(),r=[];for(let a=0;a<t;a++){const n=(e-1)*t+a+1;n<=s&&r.push({id:n,email:`user${n}@example.com`,full_name:`User ${n}`,firstName:"User",lastName:`${n}`,role:this.getRandomRole(),is_active:"active"===this.getRandomStatus(),is_verified:!0,is_superuser:!1,isEmailVerified:!0,is2FAEnabled:!1,avatar:"",lastActivity:this.getRandomDate(),apiCallsCount:this.getRandomNumber(0,1e3),analysesCount:this.getRandomNumber(0,100),totalCosts:this.getRandomNumber(0,100),registrationSource:"website",subscription:{plan:this.getRandomSubscription(),status:"active",expiresAt:new Date(Date.now()+2592e6).toISOString(),autoRenew:!0},created_at:this.getRandomDate(!0),updated_at:(new Date).toISOString(),lastLoginAt:this.getRandomDate()})}return{users:r,total:s}}async getRealAIProviders(){const e=this.getProviderStatus(),t=this.getAICosts(),s=this.getTokenUsage();return[{name:"openai",displayName:"OpenAI",status:e.openai,usage:{current:Math.round(.6*s),limit:2e6,percentage:Math.round(.6*s/2e6*100)},costs:{current:.5*t,monthly:.5*t*30,budget:500},models:[{name:"gpt-4o",status:"active",requests:Math.round(.3*s),successRate:98.5,avgLatency:1.8},{name:"gpt-4-turbo",status:"active",requests:Math.round(.2*s),successRate:97.2,avgLatency:2.1}],lastUpdate:(new Date).toISOString()},{name:"anthropic",displayName:"Anthropic",status:e.anthropic,usage:{current:Math.round(.3*s),limit:15e5,percentage:Math.round(.3*s/15e5*100)},costs:{current:.3*t,monthly:.3*t*30,budget:300},models:[{name:"claude-3-5-sonnet",status:"active",requests:Math.round(.2*s),successRate:99.1,avgLatency:2.3},{name:"claude-3-opus",status:"active",requests:Math.round(.1*s),successRate:98.8,avgLatency:3.2}],lastUpdate:(new Date).toISOString()},{name:"google",displayName:"Google AI",status:e.google,usage:{current:Math.round(.1*s),limit:1e6,percentage:Math.round(.1*s/1e6*100)},costs:{current:.2*t,monthly:.2*t*30,budget:200},models:[{name:"gemini-pro",status:"active",requests:Math.round(.08*s),successRate:96.1,avgLatency:2.8},{name:"gemini-pro-vision",status:"error",requests:Math.round(.02*s),successRate:87.2,avgLatency:4.2}],lastUpdate:(new Date).toISOString()}]}getRandomChange(e,t){return Math.floor(Math.random()*(t-e+1))+e}getRandomNumber(e,t){return Math.floor(Math.random()*(t-e+1))+e}getRandomRole(){const e=["user","admin","moderator"];return e[Math.floor(Math.random()*e.length)]}getRandomStatus(){const e=["active","inactive","banned"];return e[Math.floor(Math.random()*e.length)]}getRandomSubscription(){const e=["free","premium","enterprise"];return e[Math.floor(Math.random()*e.length)]}getRandomDate(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const t=new Date,s=e?Math.floor(365*Math.random()):Math.floor(30*Math.random());return new Date(t.getTime()-24*s*60*60*1e3).toISOString()}getMockMetrics(){return{users:{total:1247,change24h:12,active:892,premium:156,banned:8},api:{calls:45891,change1h:234,successRate:97.3,avgResponseTime:2.4},ai:{costs:247.82,change24h:12.15,tokenUsage:125e4,providerStatus:{openai:"active",anthropic:"active",google:"limited"}},analyses:{total:3421,change24h:89,successful:3298,failed:123},errors:{count:12,change24h:-3,critical:1,warnings:11},uptime:{percentage:99.8,days:30,lastDowntime:"2024-06-15T10:30:00Z"}}}getMockAlerts(){return[{id:"1",type:"api_usage",severity:"medium",title:"High API usage detected",message:"API usage is 85% of daily limit",timestamp:new Date(Date.now()-6e5).toISOString(),acknowledged:!1},{id:"2",type:"cost_limit",severity:"high",title:"OpenAI rate limit approaching",message:"Current usage: 92% of monthly quota",timestamp:new Date(Date.now()-15e5).toISOString(),acknowledged:!1},{id:"3",type:"user_registration",severity:"low",title:"New user registrations spike",message:"25 new registrations in last hour",timestamp:new Date(Date.now()-27e5).toISOString(),acknowledged:!0}]}getMockUsers(){return[{id:1,email:"admin@devassist.pro",full_name:"Admin User",firstName:"Admin",lastName:"User",role:"admin",is_active:!0,is_verified:!0,is_superuser:!0,isEmailVerified:!0,is2FAEnabled:!0,avatar:"",lastActivity:(new Date).toISOString(),apiCallsCount:5e3,analysesCount:150,totalCosts:85,registrationSource:"website",subscription:{plan:"enterprise",status:"active",expiresAt:new Date(Date.now()+2592e6).toISOString(),autoRenew:!0},created_at:new Date(Date.now()-2592e6).toISOString(),updated_at:(new Date).toISOString(),lastLoginAt:(new Date).toISOString()},{id:2,email:"user@example.com",full_name:"Regular User",firstName:"Regular",lastName:"User",role:"user",is_active:!0,is_verified:!0,is_superuser:!1,isEmailVerified:!0,is2FAEnabled:!1,avatar:"",lastActivity:new Date(Date.now()-72e5).toISOString(),apiCallsCount:1200,analysesCount:45,totalCosts:30,registrationSource:"website",subscription:{plan:"premium",status:"active",expiresAt:new Date(Date.now()+2592e6).toISOString(),autoRenew:!0},created_at:new Date(Date.now()-6048e5).toISOString(),updated_at:(new Date).toISOString(),lastLoginAt:new Date(Date.now()-72e5).toISOString()}]}getMockAIProviders(){return[{name:"openai",displayName:"OpenAI",status:"active",usage:{current:75e4,limit:2e6,percentage:37.5},costs:{current:123.45,monthly:3703.5,budget:500},models:[{name:"gpt-4o",status:"active",requests:45e4,successRate:98.5,avgLatency:1.8},{name:"gpt-4-turbo",status:"active",requests:3e5,successRate:97.2,avgLatency:2.1}],lastUpdate:(new Date).toISOString()}]}}},8406:(e,t,s)=>{s.d(t,{A:()=>r});const r=(0,s(9655).A)("Activity",[["path",{d:"M22 12h-4l-3 9L9 3l-3 9H2",key:"d5dnw9"}]])}}]);