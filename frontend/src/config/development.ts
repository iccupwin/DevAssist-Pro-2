/**
 * Development Configuration
 * ‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!
 * üîí –í production –≤—Å–µ mock –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã
 * üö´ Test users –∏ mock auth –æ—Ç–∫–ª—é—á–µ–Ω—ã –≤ production —Ä–µ–∂–∏–º–µ
 * ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
 */

// Development-only test users - PRODUCTION –ë–õ–û–ö–ò–†–û–í–ê–ù–´
const DEV_TEST_USERS_INTERNAL = [
  {
    email: 'admin@test.local',
    password: 'dev_admin_2024',
    role: 'admin' as const,
    profile: {
      id: 1,
      email: 'admin@test.local',
      full_name: 'Test Admin',
      firstName: 'Test',
      lastName: 'Admin',
      role: 'admin' as const,
      avatar: '',
      isEmailVerified: true,
      is2FAEnabled: false,
      is_active: true,
      is_verified: true,
      is_superuser: true,
      subscription: {
        plan: 'Professional',
        status: 'active' as const,
        expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),
      },
      preferences: {
        language: 'ru',
        theme: 'system' as const,
        notifications: {
          email: true,
          push: true,
        },
      },
      created_at: '2024-01-15T00:00:00Z',
      updated_at: new Date().toISOString(),
      lastLoginAt: new Date().toISOString(),
    }
  },
  {
    email: 'user@test.local',
    password: 'dev_user_2024',
    role: 'user' as const,
    profile: {
      id: 2,
      email: 'user@test.local',
      full_name: 'Test User',
      firstName: 'Test',
      lastName: 'User',
      role: 'user' as const,
      avatar: '',
      isEmailVerified: true,
      is2FAEnabled: false,
      is_active: true,
      is_verified: true,
      is_superuser: false,
      subscription: {
        plan: 'Free',
        status: 'active' as const,
        expiresAt: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),
      },
      preferences: {
        language: 'ru',
        theme: 'system' as const,
        notifications: {
          email: true,
          push: false,
        },
      },
      created_at: '2024-01-15T00:00:00Z',
      updated_at: new Date().toISOString(),
      lastLoginAt: new Date().toISOString(),
    }
  }
];

// SECURITY: –ë–ª–æ–∫–∏—Ä—É–µ–º test users –≤ production
export const DEV_TEST_USERS = process.env.NODE_ENV === 'production' ? [] : DEV_TEST_USERS_INTERNAL;

// Development configuration - PRODUCTION –ë–ï–ó–û–ü–ê–°–ù–û
export const DEV_CONFIG = {
  // Mock API —Ä–µ–∂–∏–º —Ç–æ–ª—å–∫–æ –¥–ª—è development –ò —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º mock —Ä–µ–∂–∏–º–æ–º
  USE_MOCK_AUTH: process.env.NODE_ENV === 'development' && process.env.REACT_APP_ENABLE_MOCK_AUTH === 'true',
  
  // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å dev credentials –≤ UI —Ç–æ–ª—å–∫–æ –≤ development
  SHOW_DEV_CREDENTIALS: process.env.NODE_ENV === 'development' && process.env.REACT_APP_SHOW_DEV_CREDENTIALS === 'true',
  
  // Test mode flags —Ç–æ–ª—å–∫–æ –¥–ª—è development
  ENABLE_AUTH_DEBUG: process.env.NODE_ENV === 'development' && process.env.REACT_APP_ENABLE_AUTH_DEBUG === 'true',
  
  // –ê–≤—Ç–æ–ª–æ–≥–∏–Ω –¥–ª—è development (–æ—Ç–∫–ª—é—á–µ–Ω –≤ production)
  AUTO_LOGIN_EMAIL: process.env.NODE_ENV === 'development' ? process.env.REACT_APP_AUTO_LOGIN_EMAIL || null : null,
} as const;

/**
 * SECURITY WARNING:
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ credentials —Ç–æ–ª—å–∫–æ –¥–ª—è development!
 * –í production —ç—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ü–û–õ–ù–û–°–¢–¨–Æ –ë–õ–û–ö–ò–†–û–í–ê–ù–´ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è real backend auth.
 */
if (process.env.NODE_ENV === 'production') {
  console.warn('üîí PRODUCTION MODE: Development credentials and mock auth are DISABLED');
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ production
  if (DEV_TEST_USERS.length > 0) {
    console.error('‚ùå SECURITY ERROR: Test users detected in production!');
    throw new Error('Test users must be blocked in production mode');
  }
  
  if (DEV_CONFIG.USE_MOCK_AUTH) {
    console.error('‚ùå SECURITY ERROR: Mock auth enabled in production!');
    throw new Error('Mock authentication must be disabled in production mode');
  }
}