/**
 * CriteriaDisplay - –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã 10 –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –∞–Ω–∞–ª–∏–∑–∞ –ö–ü
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ —Å –≤–µ—Å–æ–≤—ã–º–∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞–º–∏, –æ—Ü–µ–Ω–∫–∞–º–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º
 */

import React, { useState } from 'react';
import { 
  TrendingUp, 
  TrendingDown, 
  Minus,
  ChevronDown,
  ChevronUp,
  Info,
  Star,
  CheckCircle,
  AlertTriangle,
  XCircle,
  Target,
  BarChart3
} from 'lucide-react';

interface CriteriaScore {
  name: string;
  description: string;
  weight: number;
  score: number;
}

interface CriteriaDetails {
  technical_compliance: CriteriaScore;
  functional_completeness: CriteriaScore;
  cost_effectiveness: CriteriaScore;
  timeline_realism: CriteriaScore;
  vendor_reliability: CriteriaScore;
  solution_quality?: CriteriaScore;
  innovation_approach?: CriteriaScore;
  risk_management?: CriteriaScore;
  support_maintenance?: CriteriaScore;
  flexibility_adaptability?: CriteriaScore;
}

interface CriteriaDisplayProps {
  criteriaScores: Record<string, number>;
  criteriaDetails?: CriteriaDetails;
  weightedCalculation?: Record<string, any>;
  overallScore: number;
  className?: string;
}

export const CriteriaDisplay: React.FC<CriteriaDisplayProps> = ({
  criteriaScores,
  criteriaDetails,
  weightedCalculation,
  overallScore,
  className = ''
}) => {
  const [expandedCriteria, setExpandedCriteria] = useState<string | null>(null);
  const [showAllCriteria, setShowAllCriteria] = useState(false);

  // –°–∏—Å—Ç–µ–º–∞ 10 –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ —Å –∏–∫–æ–Ω–∫–∞–º–∏ –∏ —Ü–≤–µ—Ç–∞–º–∏
  const criteriaConfig = [
    {
      key: 'technical_compliance',
      name: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ',
      shortName: '–¢–µ—Ö–Ω–∏–∫–∞',
      icon: 'üîß',
      color: 'blue',
      weight: 30,
      description: '–ù–∞—Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¢–ó?'
    },
    {
      key: 'functional_completeness',
      name: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–ª–Ω–æ—Ç–∞',
      shortName: '–§—É–Ω–∫—Ü–∏–∏',
      icon: 'üìã',
      color: 'green',
      weight: 30,
      description: '–ù–∞—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã —Ç—Ä–µ–±—É–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏?'
    },
    {
      key: 'cost_effectiveness',
      name: '–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
      shortName: '–≠–∫–æ–Ω–æ–º–∏–∫–∞',
      icon: 'üí∞',
      color: 'yellow',
      weight: 20,
      description: '–ù–∞—Å–∫–æ–ª—å–∫–æ –∞–¥–µ–∫–≤–∞—Ç–Ω–∞ —Ü–µ–Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä—ã–Ω–∫—É –∏ –±—é–¥–∂–µ—Ç—É?'
    },
    {
      key: 'timeline_realism',
      name: '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç—å —Å—Ä–æ–∫–æ–≤',
      shortName: '–°—Ä–æ–∫–∏',
      icon: '‚è∞',
      color: 'purple',
      weight: 10,
      description: '–ù–∞—Å–∫–æ–ª—å–∫–æ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ —Å—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞–±–æ—Ç?'
    },
    {
      key: 'vendor_reliability',
      name: '–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
      shortName: '–ü–æ—Å—Ç–∞–≤—â–∏–∫',
      icon: 'üè¢',
      color: 'indigo',
      weight: 10,
      description: '–û–ø—ã—Ç, —Ä–µ–ø—É—Ç–∞—Ü–∏—è –∏ —Ä–µ—Å—É—Ä—Å—ã –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞.'
    },
    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏
    {
      key: 'solution_quality',
      name: '–ö–∞—á–µ—Å—Ç–≤–æ —Ä–µ—à–µ–Ω–∏—è',
      shortName: '–ö–∞—á–µ—Å—Ç–≤–æ',
      icon: '‚≠ê',
      color: 'orange',
      weight: 0,
      description: '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –∫–æ–¥-—Ä–µ–≤—å—é, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'
    },
    {
      key: 'innovation_approach',
      name: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ—Å—Ç—å –ø–æ–¥—Ö–æ–¥–∞',
      shortName: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏',
      icon: 'üöÄ',
      color: 'pink',
      weight: 0,
      description: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –º–µ—Ç–æ–¥–∏–∫'
    },
    {
      key: 'risk_management',
      name: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞–º–∏',
      shortName: '–†–∏—Å–∫–∏',
      icon: 'üõ°Ô∏è',
      color: 'red',
      weight: 0,
      description: '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤'
    },
    {
      key: 'support_maintenance',
      name: '–°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      shortName: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
      icon: 'üéß',
      color: 'teal',
      weight: 0,
      description: '–£—Å–ª–æ–≤–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ—Å–ª–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è'
    },
    {
      key: 'flexibility_adaptability',
      name: '–ì–∏–±–∫–æ—Å—Ç—å –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å',
      shortName: '–ì–∏–±–∫–æ—Å—Ç—å',
      icon: 'üîÑ',
      color: 'cyan',
      weight: 0,
      description: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–Ω–µ—Å–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏'
    }
  ];

  // –§–∏–ª—å—Ç—Ä—É–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏: –æ—Å–Ω–æ–≤–Ω—ã–µ –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ - –ø–æ —Ñ–ª–∞–≥—É
  const mainCriteria = criteriaConfig.filter(c => c.weight > 0);
  const additionalCriteria = criteriaConfig.filter(c => c.weight === 0 && criteriaScores[c.key] !== undefined);
  const visibleCriteria = showAllCriteria ? [...mainCriteria, ...additionalCriteria] : mainCriteria;

  const getScoreColor = (score: number) => {
    if (score >= 85) return 'text-green-600 bg-green-100';
    if (score >= 70) return 'text-green-600 bg-green-50';
    if (score >= 55) return 'text-yellow-600 bg-yellow-50';
    if (score >= 40) return 'text-orange-600 bg-orange-50';
    return 'text-red-600 bg-red-50';
  };

  const getScoreIcon = (score: number) => {
    if (score >= 85) return <CheckCircle className="w-4 h-4 text-green-600" />;
    if (score >= 70) return <TrendingUp className="w-4 h-4 text-green-600" />;
    if (score >= 55) return <Minus className="w-4 h-4 text-yellow-600" />;
    if (score >= 40) return <TrendingDown className="w-4 h-4 text-orange-600" />;
    return <XCircle className="w-4 h-4 text-red-600" />;
  };

  const getScoreLabel = (score: number) => {
    if (score >= 85) return '–û—Ç–ª–∏—á–Ω–æ';
    if (score >= 70) return '–•–æ—Ä–æ—à–æ';
    if (score >= 55) return '–°—Ä–µ–¥–Ω–µ';
    if (score >= 40) return '–ù–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–≥–æ';
    return '–ü–ª–æ—Ö–æ';
  };

  const toggleCriteria = (key: string) => {
    setExpandedCriteria(expandedCriteria === key ? null : key);
  };

  return (
    <div className={`space-y-6 ${className}`}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-center justify-between">
        <div className="flex items-center gap-3">
          <Target className="w-6 h-6 text-blue-600" />
          <h3 className="text-xl font-bold text-gray-900">
            –û—Ü–µ–Ω–∫–∞ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
          </h3>
        </div>
        <div className="text-right">
          <div className="text-2xl font-bold text-blue-600">{overallScore}/100</div>
          <div className="text-sm text-gray-500">–û–±—â–∏–π –±–∞–ª–ª</div>
        </div>
      </div>

      {/* –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-gray-50 rounded-lg">
        <div className="text-center">
          <div className="text-lg font-semibold text-gray-900">
            {visibleCriteria.filter(c => (criteriaScores[c.key] || 0) >= 80).length}
          </div>
          <div className="text-sm text-green-600">–í—ã—Å–æ–∫–∏–µ –æ—Ü–µ–Ω–∫–∏</div>
        </div>
        <div className="text-center">
          <div className="text-lg font-semibold text-gray-900">
            {visibleCriteria.filter(c => {
              const score = criteriaScores[c.key] || 0;
              return score >= 60 && score < 80;
            }).length}
          </div>
          <div className="text-sm text-yellow-600">–°—Ä–µ–¥–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏</div>
        </div>
        <div className="text-center">
          <div className="text-lg font-semibold text-gray-900">
            {visibleCriteria.filter(c => (criteriaScores[c.key] || 0) < 60).length}
          </div>
          <div className="text-sm text-red-600">–ù–∏–∑–∫–∏–µ –æ—Ü–µ–Ω–∫–∏</div>
        </div>
        <div className="text-center">
          <div className="text-lg font-semibold text-gray-900">
            {Math.round(visibleCriteria.reduce((sum, c) => sum + (criteriaScores[c.key] || 0), 0) / visibleCriteria.length)}
          </div>
          <div className="text-sm text-blue-600">–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª</div>
        </div>
      </div>

      {/* –ö—Ä–∏—Ç–µ—Ä–∏–∏ */}
      <div className="space-y-3">
        {visibleCriteria.map((criteria) => {
          const score = criteriaScores[criteria.key] || 0;
          const details = criteriaDetails?.[criteria.key];
          const weightedCalc = weightedCalculation?.[criteria.key];
          const isExpanded = expandedCriteria === criteria.key;

          return (
            <div
              key={criteria.key}
              className="border border-gray-200 rounded-lg overflow-hidden bg-white shadow-sm hover:shadow-md transition-shadow"
            >
              <div
                className="p-4 cursor-pointer"
                onClick={() => toggleCriteria(criteria.key)}
              >
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-3">
                    <div className="text-xl">{criteria.icon}</div>
                    <div>
                      <div className="font-semibold text-gray-900">
                        {criteria.name}
                        {criteria.weight > 0 && (
                          <span className="ml-2 text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded-full">
                            {criteria.weight}%
                          </span>
                        )}
                      </div>
                      <div className="text-sm text-gray-600">
                        {criteria.description}
                      </div>
                    </div>
                  </div>

                  <div className="flex items-center gap-3">
                    <div className={`flex items-center gap-2 px-3 py-2 rounded-lg ${getScoreColor(score)}`}>
                      {getScoreIcon(score)}
                      <span className="font-semibold">{score}</span>
                      <span className="text-xs">{getScoreLabel(score)}</span>
                    </div>
                    {isExpanded ? (
                      <ChevronUp className="w-5 h-5 text-gray-400" />
                    ) : (
                      <ChevronDown className="w-5 h-5 text-gray-400" />
                    )}
                  </div>
                </div>

                {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
                <div className="mt-3">
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div
                      className={`h-2 rounded-full transition-all duration-300 ${
                        score >= 80 ? 'bg-green-500' :
                        score >= 60 ? 'bg-yellow-500' :
                        score >= 40 ? 'bg-orange-500' :
                        'bg-red-500'
                      }`}
                      style={{ width: `${score}%` }}
                    />
                  </div>
                </div>
              </div>

              {/* –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              {isExpanded && (
                <div className="px-4 pb-4 border-t border-gray-100 bg-gray-50">
                  <div className="mt-4 space-y-3">
                    
                    {/* –î–µ—Ç–∞–ª–∏ –∫—Ä–∏—Ç–µ—Ä–∏—è */}
                    {details && (
                      <div>
                        <h5 className="font-medium text-gray-900 mb-2">–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h5>
                        <div className="text-sm text-gray-600 space-y-1">
                          <div><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {details.description}</div>
                          {details.weight > 0 && (
                            <div><strong>–í–µ—Å –≤ –æ–±—â–µ–π –æ—Ü–µ–Ω–∫–µ:</strong> {details.weight}%</div>
                          )}
                        </div>
                      </div>
                    )}

                    {/* –†–∞—Å—á–µ—Ç –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ */}
                    {weightedCalc && (
                      <div>
                        <h5 className="font-medium text-gray-900 mb-2">–†–∞—Å—á–µ—Ç –æ—Ü–µ–Ω–∫–∏</h5>
                        <div className="bg-white p-3 rounded border text-sm">
                          <div className="grid grid-cols-3 gap-4">
                            <div>
                              <span className="text-gray-600">–ë–∞–ª–ª—ã:</span>
                              <span className="ml-2 font-medium">{weightedCalc.score}/100</span>
                            </div>
                            <div>
                              <span className="text-gray-600">–í–µ—Å:</span>
                              <span className="ml-2 font-medium">{weightedCalc.weight}%</span>
                            </div>
                            <div>
                              <span className="text-gray-600">–í–∫–ª–∞–¥:</span>
                              <span className="ml-2 font-medium text-blue-600">
                                {weightedCalc.weighted_value?.toFixed(1) || 0} –±–∞–ª–ª–æ–≤
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>
                    )}

                    {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—é */}
                    <div>
                      <h5 className="font-medium text-gray-900 mb-2">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h5>
                      <div className="text-sm text-gray-600">
                        {score >= 80 ? (
                          <div className="text-green-700 bg-green-50 p-2 rounded">
                            ‚úÖ –ö—Ä–∏—Ç–µ—Ä–∏–π –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
                          </div>
                        ) : score >= 60 ? (
                          <div className="text-yellow-700 bg-yellow-50 p-2 rounded">
                            ‚ö†Ô∏è –ï—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
                          </div>
                        ) : (
                          <div className="text-red-700 bg-red-50 p-2 rounded">
                            ‚ùå –¢—Ä–µ–±—É–µ—Ç —Å–µ—Ä—å–µ–∑–Ω–æ–π –¥–æ—Ä–∞–±–æ—Ç–∫–∏
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
              )}
            </div>
          );
        })}
      </div>

      {/* –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ */}
      {additionalCriteria.length > 0 && (
        <div className="text-center">
          <button
            onClick={() => setShowAllCriteria(!showAllCriteria)}
            className="inline-flex items-center gap-2 px-4 py-2 text-sm font-medium text-blue-600 hover:text-blue-700 hover:bg-blue-50 rounded-lg transition-colors"
          >
            <BarChart3 className="w-4 h-4" />
            {showAllCriteria ? '–°–∫—Ä—ã—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏' : `–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ (+${additionalCriteria.length})`}
          </button>
        </div>
      )}

      {/* –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞ */}
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
        <div className="flex items-center gap-2 mb-2">
          <Info className="w-5 h-5 text-blue-600" />
          <h4 className="font-medium text-blue-900">–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞</h4>
        </div>
        <p className="text-sm text-blue-800">
          –û–±—â–∏–π –±–∞–ª–ª <strong>{overallScore}/100</strong> —Ä–∞—Å—Å—á–∏—Ç–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∑–≤–µ—à–µ–Ω–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫ –ø–æ {mainCriteria.length} –æ—Å–Ω–æ–≤–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.
          {overallScore >= 80 && " –û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫ –ø—Ä–∏–Ω—è—Ç–∏—é."}
          {overallScore >= 60 && overallScore < 80 && " –•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è."}
          {overallScore < 60 && " –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∏–∂–µ –æ–∂–∏–¥–∞–Ω–∏–π, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è."}
        </p>
      </div>
    </div>
  );
};