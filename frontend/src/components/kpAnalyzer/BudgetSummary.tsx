/**
 * Executive Budget Summary Component - DevAssist Pro
 * üéØ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–æ–≤ –¢–ó –∏ –ö–ü —Å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è–º–∏
 * 
 * –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
 * - –í–∏–∑—É–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–æ–≤ –¢–ó –∏ –ö–ü
 * - –†–∞—Å—á–µ—Ç –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π
 * - –¶–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–∞ (–∑–µ–ª–µ–Ω—ã–π/–∂–µ–ª—Ç—ã–π/–∫—Ä–∞—Å–Ω—ã–π)
 * - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞–ª—é—Ç (RUB, USD, EUR, KGS, KZT)
 * - –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
 */

import React from 'react';
import { TrendingUp, TrendingDown, AlertCircle, CheckCircle, Minus } from 'lucide-react';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤–∞–ª—é—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
interface CurrencyAmount {
  amount: number;
  currency: string;
  formatted: string;
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –±—é–¥–∂–µ—Ç–∞
interface BudgetData {
  tz_budget?: CurrencyAmount;
  kp_budget?: CurrencyAmount;
  deviation_amount?: number;
  deviation_percentage?: number;
  status?: 'excellent' | 'good' | 'warning' | 'critical';
}

interface BudgetSummaryProps {
  budgetData: BudgetData;
  className?: string;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç—ã
const formatCurrency = (amount: number, currency: string): string => {
  const currencySymbols: Record<string, string> = {
    'RUB': '‚ÇΩ',
    'RUB.': '‚ÇΩ',
    '—Ä—É–±': '‚ÇΩ',
    '—Ä—É–±–ª–µ–π': '‚ÇΩ',
    'USD': '$',
    'EUR': '‚Ç¨',
    'KGS': '—Å–æ–º',
    'KZT': '‚Ç∏',
    '—Ç–µ–Ω–≥–µ': '‚Ç∏'
  };

  const symbol = currencySymbols[currency.toUpperCase()] || currency;
  
  return new Intl.NumberFormat('ru-RU', {
    minimumFractionDigits: 0,
    maximumFractionDigits: 0
  }).format(amount) + ' ' + symbol;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
const getDeviationStatus = (deviationPercentage: number): 'excellent' | 'good' | 'warning' | 'critical' => {
  const absDeviation = Math.abs(deviationPercentage);
  
  if (absDeviation <= 5) return 'excellent';
  if (absDeviation <= 15) return 'good';
  if (absDeviation <= 30) return 'warning';
  return 'critical';
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞
const getStatusColor = (status: string) => {
  switch (status) {
    case 'excellent': return {
      bg: 'bg-green-50',
      border: 'border-green-200',
      text: 'text-green-800',
      icon: 'text-green-600',
      label: '–û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ'
    };
    case 'good': return {
      bg: 'bg-blue-50',
      border: 'border-blue-200', 
      text: 'text-blue-800',
      icon: 'text-blue-600',
      label: '–•–æ—Ä–æ—à–µ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ'
    };
    case 'warning': return {
      bg: 'bg-yellow-50',
      border: 'border-yellow-200',
      text: 'text-yellow-800', 
      icon: 'text-yellow-600',
      label: '–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è'
    };
    case 'critical': return {
      bg: 'bg-red-50',
      border: 'border-red-200',
      text: 'text-red-800',
      icon: 'text-red-600',
      label: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ'
    };
    default: return {
      bg: 'bg-gray-50',
      border: 'border-gray-200',
      text: 'text-gray-800',
      icon: 'text-gray-600',
      label: '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'
    };
  }
};

const BudgetSummary: React.FC<BudgetSummaryProps> = ({ 
  budgetData,
  className = "" 
}) => {
  // –†–∞—Å—á–µ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã
  const calculateDeviation = () => {
    if (!budgetData.tz_budget || !budgetData.kp_budget) {
      return { amount: 0, percentage: 0 };
    }

    const tzAmount = budgetData.tz_budget.amount;
    const kpAmount = budgetData.kp_budget.amount;
    
    const deviationAmount = kpAmount - tzAmount;
    const deviationPercentage = tzAmount > 0 ? (deviationAmount / tzAmount) * 100 : 0;
    
    return {
      amount: deviationAmount,
      percentage: deviationPercentage
    };
  };

  const deviation = {
    amount: budgetData.deviation_amount ?? calculateDeviation().amount,
    percentage: budgetData.deviation_percentage ?? calculateDeviation().percentage
  };

  const status = budgetData.status || getDeviationStatus(deviation.percentage);
  const statusColors = getStatusColor(status);

  // –ò–∫–æ–Ω–∫–∞ –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
  const DeviationIcon = () => {
    if (Math.abs(deviation.percentage) <= 2) return <Minus className="h-5 w-5" />;
    if (deviation.percentage > 0) return <TrendingUp className="h-5 w-5" />;
    return <TrendingDown className="h-5 w-5" />;
  };

  // –°—Ç–∞—Ç—É—Å–Ω–∞—è –∏–∫–æ–Ω–∫–∞
  const StatusIcon = () => {
    switch (status) {
      case 'excellent': case 'good': return <CheckCircle className="h-6 w-6" />;
      default: return <AlertCircle className="h-6 w-6" />;
    }
  };

  return (
    <div className={`bg-white rounded-xl shadow-lg border p-6 mb-8 ${className}`}>
      <div className="text-center mb-6">
        <h2 className="text-2xl font-bold text-gray-900 mb-2">
          –ò–°–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –°–í–û–î–ö–ê –ü–û –ë–Æ–î–ñ–ï–¢–£
        </h2>
        <p className="text-gray-600">
          –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã—Ö –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞—Ç—Ä–∞—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É
        </p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
        {/* –ë—é–¥–∂–µ—Ç –¢–ó */}
        <div className="bg-blue-50 p-6 rounded-lg border border-blue-200">
          <div className="text-center">
            <div className="text-sm font-medium text-blue-600 mb-2">
              –ë–Æ–î–ñ–ï–¢ –ü–û –¢–ó
            </div>
            <div className="text-3xl font-bold text-blue-800 mb-2">
              {budgetData.tz_budget?.formatted || 
               (budgetData.tz_budget ? 
                 formatCurrency(budgetData.tz_budget.amount, budgetData.tz_budget.currency) : 
                 '–ù–µ —É–∫–∞–∑–∞–Ω')}
            </div>
            <div className="text-xs text-blue-600">
              –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã
            </div>
          </div>
        </div>

        {/* –ë—é–¥–∂–µ—Ç –ö–ü */}
        <div className="bg-purple-50 p-6 rounded-lg border border-purple-200">
          <div className="text-center">
            <div className="text-sm font-medium text-purple-600 mb-2">
              –ë–Æ–î–ñ–ï–¢ –ü–û –ö–ü
            </div>
            <div className="text-3xl font-bold text-purple-800 mb-2">
              {budgetData.kp_budget?.formatted || 
               (budgetData.kp_budget ? 
                 formatCurrency(budgetData.kp_budget.amount, budgetData.kp_budget.currency) : 
                 '–ù–µ —É–∫–∞–∑–∞–Ω')}
            </div>
            <div className="text-xs text-purple-600">
              –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
            </div>
          </div>
        </div>

        {/* –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ */}
        <div className={`p-6 rounded-lg border ${statusColors.bg} ${statusColors.border}`}>
          <div className="text-center">
            <div className={`text-sm font-medium mb-2 ${statusColors.text}`}>
              –û–¢–ö–õ–û–ù–ï–ù–ò–ï
            </div>
            <div className={`text-3xl font-bold mb-2 flex items-center justify-center gap-2 ${statusColors.text}`}>
              <DeviationIcon />
              {deviation.percentage.toFixed(1)}%
            </div>
            <div className={`text-xs ${statusColors.text}`}>
              {Math.abs(deviation.amount) > 0 && budgetData.kp_budget ? 
                formatCurrency(Math.abs(deviation.amount), budgetData.kp_budget.currency) : 
                '–í –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã'}
            </div>
          </div>
        </div>
      </div>

      {/* –°—Ç–∞—Ç—É—Å –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
      <div className={`p-4 rounded-lg ${statusColors.bg} ${statusColors.border} border`}>
        <div className="flex items-center justify-center gap-3 mb-3">
          <div className={statusColors.icon}>
            <StatusIcon />
          </div>
          <div className={`font-semibold ${statusColors.text}`}>
            {statusColors.label}
          </div>
        </div>
        
        <div className="text-center">
          <div className={`text-sm ${statusColors.text}`}>
            {status === 'excellent' && '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –±—é–¥–∂–µ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–ª–∞–Ω–∏—Ä—É–µ–º—ã–º –∑–∞—Ç—Ä–∞—Ç–∞–º. –û—Ç–ª–∏—á–Ω—ã–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è.'}
            {status === 'good' && '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –±—é–¥–∂–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–∏–µ–º–ª–µ–º—ã—Ö —Ä–∞–º–∫–∞—Ö –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –æ—Ç –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–≥–æ.'}
            {status === 'warning' && '–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ —Ä–∞–º–∫–∏. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è.'}
            {status === 'critical' && '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–≥–æ –±—é–¥–∂–µ—Ç–∞. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ—Å–º–æ—Ç—Ä –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –¢–ó.'}
          </div>
        </div>
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ */}
      {(budgetData.tz_budget && budgetData.kp_budget) && (
        <div className="mt-4 pt-4 border-t border-gray-200">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-center text-sm">
            <div>
              <div className="font-medium text-gray-600">–≠–∫–æ–Ω–æ–º–∏—è</div>
              <div className={`font-bold ${deviation.amount < 0 ? 'text-green-600' : 'text-gray-400'}`}>
                {deviation.amount < 0 ? formatCurrency(Math.abs(deviation.amount), budgetData.kp_budget.currency) : '0'}
              </div>
            </div>
            <div>
              <div className="font-medium text-gray-600">–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ</div>
              <div className={`font-bold ${deviation.amount > 0 ? 'text-red-600' : 'text-gray-400'}`}>
                {deviation.amount > 0 ? formatCurrency(deviation.amount, budgetData.kp_budget.currency) : '0'}
              </div>
            </div>
            <div>
              <div className="font-medium text-gray-600">–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ</div>
              <div className="font-bold text-blue-600">
                {Math.max(0, 100 - Math.abs(deviation.percentage)).toFixed(0)}%
              </div>
            </div>
            <div>
              <div className="font-medium text-gray-600">–°—Ç–∞—Ç—É—Å</div>
              <div className={`font-bold ${statusColors.text}`}>
                {status === 'excellent' && '‚úÖ'}
                {status === 'good' && '‚úì'}
                {status === 'warning' && '‚ö†Ô∏è'}
                {status === 'critical' && '‚ùå'}
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default BudgetSummary;