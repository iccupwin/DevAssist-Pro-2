/**
 * JSPDF Exporter - –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π –≤ PDF
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç jsPDF —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π UTF-8 –∏ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
 */

import React, { useState } from 'react';
import { jsPDF } from 'jspdf';
import { saveAs } from 'file-saver';
import { FileDown, Loader } from 'lucide-react';

// –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
const CYRILLIC_TEST = '–ê–Ω–∞–ª–∏–∑ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è - —Ç–µ—Å—Ç –∫–∏—Ä–∏–ª–ª–∏—Ü—ã: –ê–ë–í–ì–î–ï–Å–ñ–ó–ò–ô–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–™–´–¨–≠–Æ–Ø –∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è 1234567890';

interface JSPDFExporterProps {
  analysisData: any;
  filename?: string;
  className?: string;
  children?: React.ReactNode;
}

const JSPDFExporter: React.FC<JSPDFExporterProps> = ({
  analysisData,
  filename,
  className = '',
  children
}) => {
  const [isGenerating, setIsGenerating] = useState(false);

  const generatePDF = async () => {
    if (!analysisData) {
      console.error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ PDF');
      return;
    }

    setIsGenerating(true);

    try {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π PDF –¥–æ–∫—É–º–µ–Ω—Ç
      const doc = new jsPDF({
        orientation: 'portrait',
        unit: 'mm',
        format: 'a4'
      });

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à—Ä–∏—Ñ—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
      doc.setFont('helvetica');
      
      let yPos = 20;
      const pageHeight = 297; // A4 height in mm
      const margin = 20;
      const lineHeight = 7;

      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
      const checkNewPage = (requiredSpace: number = 15) => {
        if (yPos + requiredSpace > pageHeight - margin) {
          doc.addPage();
          yPos = margin;
        }
      };

      // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å –∫–∏—Ä–∏–ª–ª–∏—Ü–µ–π
      const addTextSafe = (text: string, x: number, y: number, options?: any) => {
        try {
          // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤ UTF-8
          const utf8Text = unescape(encodeURIComponent(text));
          doc.text(utf8Text, x, y, options);
        } catch (error) {
          console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞:', error);
          // Fallback - –ø—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –∫–∞–∫ –µ—Å—Ç—å
          doc.text(text, x, y, options);
        }
      };

      // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞
      doc.setFontSize(22);
      doc.setTextColor(40, 116, 240); // –°–∏–Ω–∏–π —Ü–≤–µ—Ç
      addTextSafe('DevAssist Pro v2', margin, yPos);
      yPos += 10;

      doc.setFontSize(16);
      doc.setTextColor(0, 0, 0); // –ß–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç
      addTextSafe('–û—Ç—á–µ—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è', margin, yPos);
      yPos += lineHeight * 2;

      // –¢–µ—Å—Ç –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
      checkNewPage(20);
      doc.setFontSize(12);
      doc.setTextColor(0, 100, 200);
      addTextSafe('üß™ –¢–ï–°–¢ –ö–ò–†–ò–õ–õ–ò–¶–´:', margin, yPos);
      yPos += lineHeight;
      
      doc.setFontSize(10);
      doc.setTextColor(0, 0, 0);
      // –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —Å—Ç—Ä–æ–∫–∏
      const testLines = doc.splitTextToSize(CYRILLIC_TEST, 170);
      testLines.forEach((line: string) => {
        addTextSafe(line, margin, yPos);
        yPos += lineHeight;
      });
      yPos += lineHeight;

      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ
      checkNewPage(30);
      doc.setDrawColor(200, 200, 200);
      doc.rect(margin, yPos - 5, 170, 25);
      
      doc.setFontSize(12);
      doc.setTextColor(0, 0, 0);
      addTextSafe('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ:', margin + 5, yPos + 5);
      yPos += lineHeight * 2;

      const docInfo = [
        `–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date().toLocaleDateString('ru-RU', { 
          year: 'numeric', 
          month: 'long', 
          day: 'numeric',
          hour: '2-digit',
          minute: '2-digit'
        })}`,
        `–î–æ–∫—É–º–µ–Ω—Ç: ${analysisData.documentName || '–ù–µ —É–∫–∞–∑–∞–Ω'}`,
        `–ö–æ–º–ø–∞–Ω–∏—è: ${analysisData.companyName || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`,
        `AI –ú–æ–¥–µ–ª—å: ${analysisData.aiModel || 'claude-3-haiku-20240307'}`
      ];

      doc.setFontSize(10);
      docInfo.forEach(info => {
        addTextSafe(info, margin + 5, yPos);
        yPos += lineHeight;
      });
      yPos += lineHeight;

      // –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞
      checkNewPage(25);
      doc.setFillColor(240, 248, 255);
      doc.rect(margin, yPos - 5, 170, 20, 'F');
      
      doc.setFontSize(14);
      doc.setTextColor(30, 64, 175);
      addTextSafe('üìä –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê –ü–†–û–ï–ö–¢–ê', margin + 5, yPos + 5);
      yPos += lineHeight * 2;

      doc.setFontSize(20);
      doc.setTextColor(analysisData.overallScore >= 80 ? 34 : analysisData.overallScore >= 60 ? 245 : 239, 
                       analysisData.overallScore >= 80 ? 197 : analysisData.overallScore >= 60 ? 158 : 68,
                       analysisData.overallScore >= 80 ? 94 : analysisData.overallScore >= 60 ? 11 : 68);
      addTextSafe(`${analysisData.overallScore || 0}/100 –±–∞–ª–ª–æ–≤`, margin + 5, yPos);
      yPos += lineHeight * 2;

      doc.setFontSize(12);
      doc.setTextColor(0, 0, 0);
      const recommendation = analysisData.overallScore >= 80 ? '‚úÖ –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø –ö –ü–†–ò–ù–Ø–¢–ò–Æ' :
                            analysisData.overallScore >= 60 ? '‚ö†Ô∏è –ü–†–ò–ù–Ø–¢–¨ –° –û–ì–û–í–û–†–ö–ê–ú–ò' :
                            '‚ùå –ù–ï –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø';
      addTextSafe(recommendation, margin + 5, yPos);
      yPos += lineHeight * 2;

      // –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
      if (analysisData.financials?.totalBudget) {
        checkNewPage(20);
        doc.setFontSize(12);
        doc.setTextColor(0, 0, 0);
        addTextSafe('üí∞ –§–ò–ù–ê–ù–°–û–í–´–ô –ê–ù–ê–õ–ò–ó', margin, yPos);
        yPos += lineHeight * 2;

        doc.setFontSize(10);
        const budget = analysisData.financials.totalBudget;
        const budgetText = `–û–±—â–∏–π –±—é–¥–∂–µ—Ç: ${typeof budget.amount === 'number' ? 
          budget.amount.toLocaleString('ru-RU') : '–ù–µ —É–∫–∞–∑–∞–Ω'} ${budget.symbol || '‚ÇΩ'}`;
        addTextSafe(budgetText, margin + 5, yPos);
        yPos += lineHeight;

        if (analysisData.financials.currencies?.length > 0) {
          addTextSafe(`–í–∞–ª—é—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ: ${analysisData.financials.currencies.length}`, margin + 5, yPos);
          yPos += lineHeight;
        }
        yPos += lineHeight;
      }

      // –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
      if (analysisData.executiveSummary?.keyStrengths?.length > 0) {
        checkNewPage(20 + analysisData.executiveSummary.keyStrengths.length * lineHeight);
        doc.setFontSize(12);
        doc.setTextColor(34, 197, 94);
        addTextSafe('‚úÖ –°–ò–õ–¨–ù–´–ï –°–¢–û–†–û–ù–´', margin, yPos);
        yPos += lineHeight * 2;

        doc.setFontSize(10);
        doc.setTextColor(0, 0, 0);
        analysisData.executiveSummary.keyStrengths.forEach((strength: string, index: number) => {
          const strengthText = `‚Ä¢ ${strength}`;
          const lines = doc.splitTextToSize(strengthText, 165);
          lines.forEach((line: string) => {
            addTextSafe(line, margin + 5, yPos);
            yPos += lineHeight;
          });
        });
        yPos += lineHeight;
      }

      // –°–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã
      if (analysisData.executiveSummary?.criticalWeaknesses?.length > 0) {
        checkNewPage(20 + analysisData.executiveSummary.criticalWeaknesses.length * lineHeight);
        doc.setFontSize(12);
        doc.setTextColor(239, 68, 68);
        addTextSafe('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ù–ï–î–û–°–¢–ê–¢–ö–ò', margin, yPos);
        yPos += lineHeight * 2;

        doc.setFontSize(10);
        doc.setTextColor(0, 0, 0);
        analysisData.executiveSummary.criticalWeaknesses.forEach((weakness: string) => {
          const weaknessText = `‚Ä¢ ${weakness}`;
          const lines = doc.splitTextToSize(weaknessText, 165);
          lines.forEach((line: string) => {
            addTextSafe(line, margin + 5, yPos);
            yPos += lineHeight;
          });
        });
        yPos += lineHeight;
      }

      // –ò—Ç–æ–≥–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è
      checkNewPage(30);
      doc.setFillColor(255, 247, 237);
      doc.rect(margin, yPos - 5, 170, 25, 'F');
      
      doc.setFontSize(12);
      doc.setTextColor(146, 64, 14);
      addTextSafe('üéØ –ò–¢–û–ì–û–í–ê–Ø –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø', margin + 5, yPos + 5);
      yPos += lineHeight * 2;

      doc.setFontSize(10);
      doc.setTextColor(0, 0, 0);
      const recommendationText = analysisData.executiveSummary?.recommendation || 
        '–ù–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏–Ω—è—Ç—å –≤–∑–≤–µ—à–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º –≤—ã—è–≤–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤.';
      
      const recLines = doc.splitTextToSize(recommendationText, 160);
      recLines.forEach((line: string) => {
        addTextSafe(line, margin + 5, yPos);
        yPos += lineHeight;
      });

      // –ü–æ–¥–≤–∞–ª –¥–æ–∫—É–º–µ–Ω—Ç–∞
      const totalPages = doc.getNumberOfPages();
      for (let i = 1; i <= totalPages; i++) {
        doc.setPage(i);
        doc.setFontSize(8);
        doc.setTextColor(128, 128, 128);
        addTextSafe('DevAssist Pro v2 - –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π', margin, pageHeight - 15);
        addTextSafe(`–°—Ç—Ä–∞–Ω–∏—Ü–∞ ${i} –∏–∑ ${totalPages}`, 170, pageHeight - 15);
        addTextSafe(`–°–æ–∑–¥–∞–Ω–æ: ${new Date().toLocaleDateString('ru-RU')}`, margin, pageHeight - 10);
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º PDF
      const finalFilename = filename || `DevAssist_Pro_KP_Analysis_${Date.now()}.pdf`;
      doc.save(finalFilename);

      console.log('PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–∏—Ä–∏–ª–ª–∏—Ü—ã');

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PDF:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF —Ñ–∞–π–ª–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.');
    } finally {
      setIsGenerating(false);
    }
  };

  return (
    <button
      onClick={generatePDF}
      disabled={isGenerating || !analysisData}
      className={`inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white bg-green-600 hover:bg-green-700 rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 ${className}`}
    >
      {isGenerating ? (
        <>
          <Loader className="w-4 h-4 mr-2 animate-spin" />
          –°–æ–∑–¥–∞–Ω–∏–µ PDF...
        </>
      ) : (
        children || (
          <>
            <FileDown className="w-4 h-4 mr-2" />
            –≠–∫—Å–ø–æ—Ä—Ç PDF (jsPDF)
          </>
        )
      )}
    </button>
  );
};

export default JSPDFExporter;