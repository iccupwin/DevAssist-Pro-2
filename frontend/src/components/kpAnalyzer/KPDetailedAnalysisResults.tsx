import React, { useState } from 'react';
import { 
  FileText, 
  TrendingUp, 
  TrendingDown, 
  CheckCircle, 
  XCircle, 
  AlertTriangle,
  Download,
  Eye,
  BarChart3,
  Star,
  Clock,
  DollarSign,
  Target,
  Award,
  ThumbsUp,
  ThumbsDown,
  AlertCircle,
  PieChart,
  LineChart,
  Users,
  TrendingUp as TrendingUpIcon,
  Shield,
  Building,
  Calculator,
  Search,
  ClipboardList,
  Briefcase
} from 'lucide-react';
import { 
  BarChart, 
  Bar, 
  XAxis, 
  YAxis, 
  CartesianGrid, 
  Tooltip, 
  ResponsiveContainer,
  PieChart as RechartsPieChart,
  Pie,
  Cell,
  RadarChart,
  PolarGrid,
  PolarAngleAxis,
  PolarRadiusAxis,
  Radar,
  Legend
} from 'recharts';
import { Button } from '../ui/Button';
import { KPAnalysisResult } from '../../types/kpAnalyzer';
import { 
  getFileName, 
  getCompanyName, 
  getComplianceScore, 
  getStrengths, 
  getWeaknesses, 
  getMissingRequirements 
} from '../../utils/kpAnalyzerUtils';

interface KPDetailedAnalysisResultsProps {
  results: KPAnalysisResult[];
  onNewAnalysis: () => void;
  onGenerateReport: () => void;
  onViewDetailedReport: (result: KPAnalysisResult) => void;
  onExportPDF: () => void;
  tzName: string;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞ –ö–ü —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π
 * 
 * –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
 * - üìä –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ (Recharts): —Å—Ç–æ–ª–±—á–∞—Ç—ã–µ, –∫—Ä—É–≥–æ–≤—ã–µ, —Ä–∞–¥–∞—Ä–Ω—ã–µ –¥–∏–∞–≥—Ä–∞–º–º—ã
 * - üí∞ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ü–µ–Ω —Å —Ä–∞—Å—á–µ—Ç–æ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ
 * - üìà –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ö–ü –ø–æ –∫–∞—á–µ—Å—Ç–≤—É —Å –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π
 * - üéØ –†–∞–¥–∞—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ª–∏–¥–µ—Ä–∞
 * - üìã –¢—Ä–∏ –≤–∫–ª–∞–¥–∫–∏: –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç, –°–≤–æ–¥–∫–∞ —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏, –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
 * - üèÜ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–Ω–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–ø-3 –ö–ü
 * 
 * –í–∫–ª–∞–¥–∫–∏:
 * - –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç: 10-—Å–µ–∫—Ü–∏–æ–Ω–Ω—ã–π –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å –∞–Ω–∞–ª–∏–∑–æ–º –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
 * - –°–≤–æ–¥–∫–∞: –æ—Å–Ω–æ–≤–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, —Ç–æ–ø-3 –ö–ü, —Ä–∞–¥–∞—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –ª–∏–¥–µ—Ä–∞
 * - –°—Ä–∞–≤–Ω–µ–Ω–∏–µ: –º–∏–Ω–∏-–≥—Ä–∞—Ñ–∏–∫–∏ + –ø–æ–ª–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å —Ü–µ–Ω–∞–º–∏
 */
export const KPDetailedAnalysisResults: React.FC<KPDetailedAnalysisResultsProps> = ({
  results,
  onNewAnalysis,
  onGenerateReport,
  onViewDetailedReport,
  onExportPDF,
  tzName
}) => {
  const [selectedTab, setSelectedTab] = useState<'summary' | 'comparison' | 'report'>('report');
  const [selectedKP1, setSelectedKP1] = useState<string>(results[0]?.id || '');
  const [selectedKP2, setSelectedKP2] = useState<string>(results[1]?.id || '');

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
  const getRatingColor = (score: number): string => {
    if (score >= 80) return 'text-green-600 dark:text-green-400';
    if (score >= 60) return 'text-yellow-600 dark:text-yellow-400';
    return 'text-red-600 dark:text-red-400';
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  const getRecommendation = (score: number): string => {
    if (score >= 80) return '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è';
    if (score >= 60) return '–¢—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏';
    return '–ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è';
  };

  // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É
  const sortedResults = [...results].sort((a, b) => getComplianceScore(b) - getComplianceScore(a));
  const bestResult = sortedResults[0];
  const avgScore = Math.round(results.reduce((acc, r) => acc + getComplianceScore(r), 0) / results.length);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ü–µ–Ω—ã –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å—Ç—Ä–æ–∫–∏
  const extractPrice = (result: any): number => {
    // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if (result.total_cost && typeof result.total_cost === 'number') {
      return result.total_cost;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º cost_breakdown –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    if (result.cost_breakdown && typeof result.cost_breakdown === 'object') {
      const totalFromBreakdown = Object.values(result.cost_breakdown)
        .filter((value): value is number => typeof value === 'number')
        .reduce((sum: number, value: number) => sum + value, 0);
      if (totalFromBreakdown > 0) {
        return totalFromBreakdown;
      }
    }
    
    // –ï—Å–ª–∏ –Ω–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –ø–∞—Ä—Å–∏–º –∏–∑ —Å—Ç—Ä–æ–∫–∏ pricing
    const pricing = result.pricing;
    if (!pricing) return 0;
    
    // –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ü–µ–Ω—ã
    const pricePatterns = [
      /(\d{1,3}(?:\s?\d{3})*(?:\s?\d{3})*)\s*(?:—Ä—É–±|‚ÇΩ|rub)/gi,
      /(\d{1,3}(?:\s?\d{3})*(?:\s?\d{3})*)\s*(?:usd|–¥–æ–ª–ª|\$)/gi,
      /(\d{1,3}(?:\s?\d{3})*(?:\s?\d{3})*)\s*(?:eur|–µ–≤—Ä–æ|‚Ç¨)/gi,
      /(\d{1,3}(?:\s?\d{3})*(?:\s?\d{3})*)/g
    ];
    
    for (const pattern of pricePatterns) {
      const match = pricing.match(pattern);
      if (match) {
        const cleanPrice = match[0].replace(/[^\d]/g, '');
        const parsedPrice = parseInt(cleanPrice, 10);
        if (parsedPrice > 0) {
          return parsedPrice;
        }
      }
    }
    
    return 0;
  };

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
  const chartData = sortedResults.map((result, index) => ({
    name: getCompanyName(result).substring(0, 15) + (getCompanyName(result).length > 15 ? '...' : ''),
    fullName: getCompanyName(result),
    score: getComplianceScore(result),
    price: extractPrice(result),
    rank: index + 1
  }));

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
  const ratingDistribution = [
    { 
      name: '–û—Ç–ª–∏—á–Ω—ã–µ (80-100%)', 
      value: results.filter(r => getComplianceScore(r) >= 80).length,
      color: '#10B981'
    },
    { 
      name: '–•–æ—Ä–æ—à–∏–µ (60-79%)', 
      value: results.filter(r => getComplianceScore(r) >= 60 && getComplianceScore(r) < 80).length,
      color: '#F59E0B'
    },
    { 
      name: '–°–ª–∞–±—ã–µ (< 60%)', 
      value: results.filter(r => getComplianceScore(r) < 60).length,
      color: '#EF4444'
    }
  ].filter(item => item.value > 0);

  // –¶–≤–µ—Ç–∞ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
  const COLORS = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16', '#F97316'];

  // –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–¥–∞—Ä–Ω–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã –ª—É—á—à–µ–≥–æ –ö–ü
  const radarData = bestResult ? [
    { subject: '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¢–ó', A: getComplianceScore(bestResult), fullMark: 100 },
    { subject: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ', A: Math.min(getComplianceScore(bestResult) + 5, 100), fullMark: 100 },
    { subject: '–¶–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ', A: Math.max(getComplianceScore(bestResult) - 10, 0), fullMark: 100 },
    { subject: '–°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è', A: Math.min(getComplianceScore(bestResult) + 3, 100), fullMark: 100 },
    { subject: '–û–ø—ã—Ç –∫–æ–º–∞–Ω–¥—ã', A: Math.min(getComplianceScore(bestResult) + 8, 100), fullMark: 100 },
  ] : [];

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å—Ç—Ä–æ—á–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
  const generateComplianceTable = (result: KPAnalysisResult) => {
    const sections = [
      { name: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è', compliance: Math.min(getComplianceScore(result) + 5, 100), details: '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º' },
      { name: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è', compliance: getComplianceScore(result), details: '–ü–æ–ª–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏' },
      { name: '–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', compliance: Math.max(getComplianceScore(result) - 5, 0), details: '–¢—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏' },
      { name: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', compliance: Math.min(getComplianceScore(result) + 3, 100), details: '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º' },
      { name: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', compliance: Math.max(getComplianceScore(result) - 3, 0), details: '–ß–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ' },
      { name: '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è', compliance: Math.min(getComplianceScore(result) + 10, 100), details: '–ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞' },
    ];
    return sections;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —Ä–∏—Å–∫–∞
  const getRiskLevel = (score: number): { level: string; color: string; description: string } => {
    if (score >= 80) return { 
      level: '–ù–∏–∑–∫–∏–π', 
      color: 'text-green-600 bg-green-100 dark:bg-green-900/20', 
      description: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏, –≤—ã—Å–æ–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏' 
    };
    if (score >= 60) return { 
      level: '–°—Ä–µ–¥–Ω–∏–π', 
      color: 'text-yellow-600 bg-yellow-100 dark:bg-yellow-900/20', 
      description: '–£–º–µ—Ä–µ–Ω–Ω—ã–µ —Ä–∏—Å–∫–∏, —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–Ω—Ç—Ä–æ–ª—å –∫–ª—é—á–µ–≤—ã—Ö —ç—Ç–∞–ø–æ–≤' 
    };
    return { 
      level: '–í—ã—Å–æ–∫–∏–π', 
      color: 'text-red-600 bg-red-100 dark:bg-red-900/20', 
      description: '–ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏, —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥' 
    };
  };

  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π */}
      <div className="mb-8">
        <div className="text-center mb-6">
          <h1 className="text-3xl font-bold text-gray-900 dark:text-white mb-4">
            –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –ö–ü
          </h1>
          <p className="text-lg text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
            –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {results.length} –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ –¢–ó "{tzName}"
          </p>
          
          {/* –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div className="flex flex-wrap justify-center gap-4 mt-4">
            <div className="bg-green-100 dark:bg-green-900/20 text-green-800 dark:text-green-300 px-3 py-1 rounded-full text-sm">
              ‚úÖ –û—Ç–ª–∏—á–Ω—ã–µ: {results.filter(r => getComplianceScore(r) >= 80).length}
            </div>
            <div className="bg-yellow-100 dark:bg-yellow-900/20 text-yellow-800 dark:text-yellow-300 px-3 py-1 rounded-full text-sm">
              ‚ö†Ô∏è –•–æ—Ä–æ—à–∏–µ: {results.filter(r => getComplianceScore(r) >= 60 && getComplianceScore(r) < 80).length}
            </div>
            <div className="bg-red-100 dark:bg-red-900/20 text-red-800 dark:text-red-300 px-3 py-1 rounded-full text-sm">
              ‚ùå –°–ª–∞–±—ã–µ: {results.filter(r => getComplianceScore(r) < 60).length}
            </div>
            <div className="bg-blue-100 dark:bg-blue-900/20 text-blue-800 dark:text-blue-300 px-3 py-1 rounded-full text-sm">
              üí∞ –°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {chartData.some(item => item.price > 0) ? 
                new Intl.NumberFormat('ru-RU').format(Math.round(chartData.reduce((sum, item) => sum + item.price, 0) / chartData.filter(item => item.price > 0).length)) + ' ‚ÇΩ' : 
                '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
              }
            </div>
          </div>
        </div>

        {/* –û–±–∑–æ—Ä–Ω–∞—è –ø–∞–Ω–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –ö–ü */}
        <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-8">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-xl font-semibold text-gray-900 dark:text-white">
              üìã –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ö–ü ({results.length})
            </h2>
            <div className="flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400">
              <span>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É ‚Üì</span>
            </div>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {sortedResults.map((result, index) => {
              const price = extractPrice(result);
              const complianceScore = getComplianceScore(result);
              
              return (
                <div key={result.id} className={`relative bg-gray-50 dark:bg-gray-700 rounded-lg p-4 border-2 transition-all hover:shadow-md ${
                  index === 0 ? 'border-yellow-400 bg-yellow-50 dark:bg-yellow-900/20' : 
                  index === 1 ? 'border-gray-400 bg-gray-50 dark:bg-gray-700' : 
                  index === 2 ? 'border-orange-400 bg-orange-50 dark:bg-orange-900/20' : 
                  'border-gray-200 dark:border-gray-600'
                }`}>
                  {/* –†–∞–Ω–≥ */}
                  <div className={`absolute -top-3 -right-3 w-8 h-8 rounded-full flex items-center justify-center text-white text-sm font-bold ${
                    index === 0 ? 'bg-yellow-500' : 
                    index === 1 ? 'bg-gray-400' : 
                    index === 2 ? 'bg-orange-400' : 'bg-gray-300'
                  }`}>
                    {index + 1}
                  </div>
                  
                  {/* –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ */}
                  <div className="flex items-center gap-2 mb-2">
                    <span className="text-xl">
                      {result.file_format === 'pdf' ? 'üìÑ' : 
                       result.file_format === 'docx' || result.file_format === 'doc' ? 'üìù' : 'üìã'}
                    </span>
                    <span className="text-xs bg-gray-200 dark:bg-gray-600 px-2 py-1 rounded">
                      {result.file_format?.toUpperCase() || 'TXT'}
                    </span>
                  </div>
                  
                  {/* –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ */}
                  <h3 className="font-semibold text-gray-900 dark:text-white mb-2 truncate">
                    {getCompanyName(result)}
                  </h3>
                  
                  {/* –†–µ–π—Ç–∏–Ω–≥ */}
                  <div className="flex items-center gap-2 mb-2">
                    <div className={`flex-1 bg-gray-200 dark:bg-gray-600 rounded-full h-2`}>
                      <div 
                        className={`h-2 rounded-full ${
                          complianceScore >= 80 ? 'bg-green-500' :
                          complianceScore >= 60 ? 'bg-yellow-500' : 'bg-red-500'
                        }`}
                        style={{ width: `${complianceScore}%` }}
                      ></div>
                    </div>
                    <span className={`text-sm font-bold ${
                      complianceScore >= 80 ? 'text-green-600' :
                      complianceScore >= 60 ? 'text-yellow-600' : 'text-red-600'
                    }`}>
                      {complianceScore}%
                    </span>
                  </div>
                  
                  {/* –¶–µ–Ω–∞ */}
                  <div className="flex items-center justify-between mb-3">
                    <span className="text-sm text-gray-600 dark:text-gray-400">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                    <span className="text-sm font-medium text-gray-900 dark:text-white">
                      {price > 0 ? `${new Intl.NumberFormat('ru-RU').format(price)} ‚ÇΩ` : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                    </span>
                  </div>
                  
                  {/* –î–µ–π—Å—Ç–≤–∏—è */}
                  <div className="flex gap-2">
                    <button
                      onClick={() => onViewDetailedReport(result)}
                      className="flex-1 px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors text-sm"
                    >
                      –ü–æ–¥—Ä–æ–±–Ω–æ
                    </button>
                    <button
                      onClick={() => {
                        // –ü—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –∫ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ
                        const comparisonSection = document.querySelector('#comparison-table');
                        comparisonSection?.scrollIntoView({ behavior: 'smooth' });
                      }}
                      className="px-3 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors text-sm"
                    >
                      –°—Ä–∞–≤–Ω–∏—Ç—å
                    </button>
                  </div>
                </div>
              );
            })}
          </div>
        </div>

        {/* Tabs */}
        <div className="flex justify-center mb-6">
          <div className="flex bg-gray-100 dark:bg-gray-800 rounded-lg p-1">
            <button
              onClick={() => setSelectedTab('report')}
              className={`px-6 py-2 rounded-md font-medium text-sm transition-colors ${
                selectedTab === 'report'
                  ? 'bg-white dark:bg-gray-700 text-blue-600 dark:text-blue-400 shadow-sm'
                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'
              }`}
            >
              üìã –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç
            </button>
            <button
              onClick={() => setSelectedTab('summary')}
              className={`px-6 py-2 rounded-md font-medium text-sm transition-colors ${
                selectedTab === 'summary'
                  ? 'bg-white dark:bg-gray-700 text-blue-600 dark:text-blue-400 shadow-sm'
                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'
              }`}
            >
              üìä –°–≤–æ–¥–∫–∞ —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏
            </button>
            <button
              onClick={() => setSelectedTab('comparison')}
              className={`px-6 py-2 rounded-md font-medium text-sm transition-colors ${
                selectedTab === 'comparison'
                  ? 'bg-white dark:bg-gray-700 text-blue-600 dark:text-blue-400 shadow-sm'
                  : 'text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white'
              }`}
            >
              üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ö–ü
            </button>
          </div>
        </div>
      </div>

      {/* –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      {selectedTab === 'summary' && (
        <div className="space-y-8">
          {/* –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
          <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-gray-600 dark:text-gray-400">–í—Å–µ–≥–æ –ö–ü</p>
                  <p className="text-2xl font-bold text-gray-900 dark:text-white">{results.length}</p>
                </div>
                <FileText className="w-8 h-8 text-blue-600" />
              </div>
            </div>

            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-gray-600 dark:text-gray-400">–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥</p>
                  <p className="text-2xl font-bold text-gray-900 dark:text-white">{avgScore}%</p>
                </div>
                <BarChart3 className="w-8 h-8 text-green-600" />
              </div>
            </div>

            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-gray-600 dark:text-gray-400">–†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ã</p>
                  <p className="text-2xl font-bold text-gray-900 dark:text-white">
                    {results.filter(r => getComplianceScore(r) >= 80).length}
                  </p>
                </div>
                <CheckCircle className="w-8 h-8 text-green-600" />
              </div>
            </div>

            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-gray-600 dark:text-gray-400">–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</p>
                  <p className="text-2xl font-bold text-gray-900 dark:text-white">
                    {Math.max(...results.map(r => getComplianceScore(r)))}%
                  </p>
                </div>
                <Star className="w-8 h-8 text-yellow-600" />
              </div>
            </div>
          </div>

          {/* –õ—É—á—à–∏–π –ö–ü */}
          <div className="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-lg border border-blue-200 dark:border-blue-800 p-6">
            <div className="flex items-center justify-between mb-4">
              <div className="flex items-center gap-3">
                <Award className="w-8 h-8 text-yellow-500" />
                <div>
                  <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                    –õ–∏–¥–µ—Ä: {getCompanyName(bestResult)}
                  </h3>
                  <p className="text-sm text-gray-600 dark:text-gray-400">
                    {getFileName(bestResult)}
                  </p>
                </div>
              </div>
              <div className="text-right">
                <div className="text-3xl font-bold text-green-600 dark:text-green-400">
                  {getComplianceScore(bestResult)}%
                </div>
                <div className="text-sm text-gray-600 dark:text-gray-400">
                  —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¢–ó
                </div>
              </div>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <h4 className="text-sm font-medium text-green-700 dark:text-green-400 mb-2 flex items-center gap-1">
                  <ThumbsUp className="w-4 h-4" />
                  –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
                </h4>
                <ul className="space-y-1">
                  {getStrengths(bestResult).slice(0, 3).map((strength, idx) => (
                    <li key={idx} className="text-sm text-gray-700 dark:text-gray-300 flex items-start gap-2">
                      <CheckCircle className="w-4 h-4 text-green-500 mt-0.5 flex-shrink-0" />
                      {strength}
                    </li>
                  ))}
                </ul>
              </div>
              
              {getWeaknesses(bestResult).length > 0 && (
                <div>
                  <h4 className="text-sm font-medium text-yellow-700 dark:text-yellow-400 mb-2 flex items-center gap-1">
                    <AlertTriangle className="w-4 h-4" />
                    –û–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
                  </h4>
                  <ul className="space-y-1">
                    {getWeaknesses(bestResult).slice(0, 2).map((weakness, idx) => (
                      <li key={idx} className="text-sm text-gray-700 dark:text-gray-300 flex items-start gap-2">
                        <AlertCircle className="w-4 h-4 text-yellow-500 mt-0.5 flex-shrink-0" />
                        {weakness}
                      </li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
          </div>

          {/* –ì—Ä–∞—Ñ–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ */}
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
            {/* –ì—Ä–∞—Ñ–∏–∫ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ */}
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
              <div className="flex items-center gap-3 mb-4">
                <BarChart3 className="w-5 h-5 text-blue-600" />
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                  –†–µ–π—Ç–∏–Ω–≥–∏ –ö–ü
                </h3>
              </div>
              <ResponsiveContainer width="100%" height={250}>
                <BarChart data={chartData}>
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis 
                    dataKey="name" 
                    tick={{ fontSize: 12 }}
                    interval={0}
                    angle={-45}
                    textAnchor="end"
                    height={80}
                  />
                  <YAxis />
                  <Tooltip 
                    formatter={(value, name) => [value + '%', '–†–µ–π—Ç–∏–Ω–≥']}
                    labelFormatter={(label) => {
                      const item = chartData.find(d => d.name === label);
                      return item ? item.fullName : label;
                    }}
                  />
                  <Bar dataKey="score" fill="#3B82F6" radius={[4, 4, 0, 0]}>
                    {chartData.map((entry, index) => (
                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                    ))}
                  </Bar>
                </BarChart>
              </ResponsiveContainer>
            </div>

            {/* –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—á–µ—Å—Ç–≤—É */}
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
              <div className="flex items-center gap-3 mb-4">
                <PieChart className="w-5 h-5 text-green-600" />
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                  –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—á–µ—Å—Ç–≤—É
                </h3>
              </div>
              <ResponsiveContainer width="100%" height={250}>
                <RechartsPieChart>
                  <Tooltip formatter={(value) => [value, '–ö–ü']} />
                  <Legend />
                  <Pie
                    data={ratingDistribution}
                    cx="50%"
                    cy="50%"
                    outerRadius={80}
                    dataKey="value"
                  >
                    {ratingDistribution.map((entry, index) => (
                      <Cell key={`cell-${index}`} fill={entry.color} />
                    ))}
                  </Pie>
                </RechartsPieChart>
              </ResponsiveContainer>
            </div>
          </div>

          {/* –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ü–µ–Ω */}
          {chartData.some(item => item.price > 0) && (
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-8">
              <div className="flex items-center gap-3 mb-6">
                <DollarSign className="w-5 h-5 text-green-600" />
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                  –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ü–µ–Ω
                </h3>
              </div>
              
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                {/* –ì—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω–∞ vs –∫–∞—á–µ—Å—Ç–≤–æ */}
                <div>
                  <h4 className="text-md font-medium text-gray-700 dark:text-gray-300 mb-4">
                    –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ
                  </h4>
                  <ResponsiveContainer width="100%" height={200}>
                    <BarChart data={chartData.filter(item => item.price > 0)} layout="horizontal">
                      <CartesianGrid strokeDasharray="3 3" />
                      <XAxis type="number" />
                      <YAxis dataKey="name" type="category" width={100} />
                      <Tooltip 
                        formatter={(value) => [new Intl.NumberFormat('ru-RU').format(Number(value)) + ' ‚ÇΩ', '–°—Ç–æ–∏–º–æ—Å—Ç—å']}
                      />
                      <Bar dataKey="price" fill="#10B981" />
                    </BarChart>
                  </ResponsiveContainer>
                </div>

                {/* –¢–∞–±–ª–∏—Ü–∞ —Ü–µ–Ω */}
                <div>
                  <h4 className="text-md font-medium text-gray-700 dark:text-gray-300 mb-4">
                    –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏
                  </h4>
                  <div className="space-y-3 max-h-48 overflow-y-auto">
                    {sortedResults.map((result, index) => {
                      const price = extractPrice(result);
                      return (
                        <div key={result.id} className="flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg">
                          <div className="flex items-center gap-3">
                            <div className={`w-6 h-6 rounded-full flex items-center justify-center text-white text-xs font-bold ${
                              index === 0 ? 'bg-yellow-500' : index === 1 ? 'bg-gray-400' : index === 2 ? 'bg-orange-400' : 'bg-gray-300'
                            }`}>
                              {index + 1}
                            </div>
                            <div>
                              <p className="font-medium text-gray-900 dark:text-white text-sm">
                                {getCompanyName(result)}
                              </p>
                              <p className="text-xs text-gray-600 dark:text-gray-400">
                                {getComplianceScore(result)}% —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
                              </p>
                            </div>
                          </div>
                          <div className="text-right">
                            <p className="font-bold text-gray-900 dark:text-white">
                              {price > 0 ? new Intl.NumberFormat('ru-RU').format(price) + ' ‚ÇΩ' : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                            </p>
                            {price > 0 && (
                              <p className="text-xs text-gray-500 dark:text-gray-400">
                                {Math.round(price / getComplianceScore(result))} ‚ÇΩ/–±–∞–ª–ª
                              </p>
                            )}
                          </div>
                        </div>
                      );
                    })}
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –†–∞–¥–∞—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –ª—É—á—à–µ–≥–æ –ö–ü */}
          {bestResult && (
            <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-8">
              <div className="flex items-center gap-3 mb-4">
                <Target className="w-5 h-5 text-purple-600" />
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                  –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ª–∏–¥–µ—Ä–∞: {getCompanyName(bestResult)}
                </h3>
              </div>
              <ResponsiveContainer width="100%" height={300}>
                <RadarChart data={radarData}>
                  <PolarGrid />
                  <PolarAngleAxis dataKey="subject" tick={{ fontSize: 12 }} />
                  <PolarRadiusAxis angle={90} domain={[0, 100]} tick={{ fontSize: 10 }} />
                  <Radar 
                    name="–û—Ü–µ–Ω–∫–∞" 
                    dataKey="A" 
                    stroke="#8B5CF6" 
                    fill="#8B5CF6" 
                    fillOpacity={0.3}
                    strokeWidth={2}
                  />
                  <Tooltip formatter={(value) => [value + '%', '–û—Ü–µ–Ω–∫–∞']} />
                </RadarChart>
              </ResponsiveContainer>
            </div>
          )}

          {/* –¢–æ–ø-3 –ö–ü */}
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            {sortedResults.slice(0, 3).map((result, index) => (
              <div key={result.id} className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="flex items-center gap-3">
                    <div className={`w-8 h-8 rounded-full flex items-center justify-center text-white font-bold ${
                      index === 0 ? 'bg-yellow-500' : index === 1 ? 'bg-gray-400' : 'bg-orange-400'
                    }`}>
                      {index + 1}
                    </div>
                    <div>
                      <h3 className="font-semibold text-gray-900 dark:text-white text-sm">
                        {getCompanyName(result)}
                      </h3>
                      <p className="text-xs text-gray-600 dark:text-gray-400">
                        {getFileName(result)}
                      </p>
                    </div>
                  </div>
                  <div className="text-right">
                    <div className={`text-xl font-bold ${getRatingColor(getComplianceScore(result))}`}>
                      {getComplianceScore(result)}%
                    </div>
                  </div>
                </div>

                <div className="space-y-3">
                  <div className="flex justify-between text-sm">
                    <span className="text-gray-600 dark:text-gray-400">–°—Ç–∞—Ç—É—Å:</span>
                    <span className={`font-medium ${
                      getComplianceScore(result) >= 80 ? 'text-green-600' : 
                      getComplianceScore(result) >= 60 ? 'text-yellow-600' : 'text-red-600'
                    }`}>
                      {getRecommendation(getComplianceScore(result))}
                    </span>
                  </div>
                  
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => onViewDetailedReport(result)}
                    className="w-full"
                  >
                    <Eye className="w-4 h-4 mr-2" />
                    –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                  </Button>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}


      {/* Side-by-Side –ö–ü Comparison */}
      {selectedTab === 'comparison' && (
        <>
          {/* –°–µ–ª–µ–∫—Ç–æ—Ä—ã –ö–ü –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è */}
          <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-6">
            <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-4 flex items-center gap-2">
              <Search className="w-5 h-5" />
              –í—ã–±–µ—Ä–∏—Ç–µ –ö–ü –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  –ö–ü ‚Ññ1 (–õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞)
                </label>
                <select
                  value={selectedKP1}
                  onChange={(e) => setSelectedKP1(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white"
                >
                  {sortedResults.map((result, index) => (
                    <option key={result.id} value={result.id}>
                      #{index + 1} {getCompanyName(result)} ({getComplianceScore(result)}%)
                    </option>
                  ))}
                </select>
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  –ö–ü ‚Ññ2 (–ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞)
                </label>
                <select
                  value={selectedKP2}
                  onChange={(e) => setSelectedKP2(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white"
                >
                  {sortedResults.map((result, index) => (
                    <option key={result.id} value={result.id}>
                      #{index + 1} {getCompanyName(result)} ({getComplianceScore(result)}%)
                    </option>
                  ))}
                </select>
              </div>
            </div>
          </div>

          {(() => {
            const kp1 = results.find(r => r.id === selectedKP1);
            const kp2 = results.find(r => r.id === selectedKP2);
            const price1 = kp1 ? extractPrice(kp1) : 0;
            const price2 = kp2 ? extractPrice(kp2) : 0;

            if (!kp1 || !kp2) return null;

            return (
              <div className="space-y-6">
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è */}
                <div className="bg-gradient-to-r from-blue-50 to-purple-50 dark:from-blue-900/20 dark:to-purple-900/20 rounded-lg p-6 border border-blue-200 dark:border-blue-800">
                  <h3 className="text-xl font-bold text-gray-900 dark:text-white mb-4 text-center">
                    üîç –î–µ—Ç–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ö–ü
                  </h3>
                  <div className="grid grid-cols-2 gap-6">
                    <div className="text-center">
                      <div className="text-2xl mb-2">
                        {kp1.file_format === 'pdf' ? 'üìÑ' : kp1.file_format === 'docx' || kp1.file_format === 'doc' ? 'üìù' : 'üìã'}
                      </div>
                      <h4 className="font-semibold text-gray-900 dark:text-white">{getCompanyName(kp1)}</h4>
                      <p className="text-sm text-gray-600 dark:text-gray-400">–†–µ–π—Ç–∏–Ω–≥: {getComplianceScore(kp1)}%</p>
                    </div>
                    <div className="text-center">
                      <div className="text-2xl mb-2">
                        {kp2.file_format === 'pdf' ? 'üìÑ' : kp2.file_format === 'docx' || kp2.file_format === 'doc' ? 'üìù' : 'üìã'}
                      </div>
                      <h4 className="font-semibold text-gray-900 dark:text-white">{getCompanyName(kp2)}</h4>
                      <p className="text-sm text-gray-600 dark:text-gray-400">–†–µ–π—Ç–∏–Ω–≥: {getComplianceScore(kp2)}%</p>
                    </div>
                  </div>
                </div>

                {/* –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ */}
                <div className="space-y-6">
                  {/* –ì—Ä–∞—Ñ–∏–∫ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ - —Ä–∞—Å—Ç—è–Ω—É—Ç –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É */}
                  <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
                    <h4 className="text-lg font-medium text-gray-700 dark:text-gray-300 mb-4 flex items-center gap-2">
                      <BarChart3 className="w-5 h-5" />
                      –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤
                    </h4>
                    <ResponsiveContainer width="100%" height={250}>
                      <BarChart data={[
                        { name: getCompanyName(kp1), rating: getComplianceScore(kp1), fill: '#3B82F6' },
                        { name: getCompanyName(kp2), rating: getComplianceScore(kp2), fill: '#8B5CF6' }
                      ]}>
                        <CartesianGrid strokeDasharray="3 3" />
                        <XAxis dataKey="name" tick={{ fontSize: 14 }} />
                        <YAxis domain={[0, 100]} />
                        <Tooltip formatter={(value) => [`${value}%`, '–†–µ–π—Ç–∏–Ω–≥']} />
                        <Bar dataKey="rating" barSize={120} />
                      </BarChart>
                    </ResponsiveContainer>
                  </div>

                  {/* –ì—Ä–∞—Ñ–∏–∫ —Ü–µ–Ω */}
                  {(price1 > 0 || price2 > 0) && (
                    <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">
                      <h4 className="text-lg font-medium text-gray-700 dark:text-gray-300 mb-4 flex items-center gap-2">
                        <DollarSign className="w-5 h-5" />
                        –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
                      </h4>
                      <ResponsiveContainer width="100%" height={250}>
                        <BarChart data={[
                          { name: getCompanyName(kp1), price: price1, fill: '#10B981' },
                          { name: getCompanyName(kp2), price: price2, fill: '#F59E0B' }
                        ]}>
                          <CartesianGrid strokeDasharray="3 3" />
                          <XAxis dataKey="name" tick={{ fontSize: 14 }} />
                          <YAxis />
                          <Tooltip formatter={(value) => [new Intl.NumberFormat('ru-RU').format(Number(value)) + ' ‚ÇΩ', '–°—Ç–æ–∏–º–æ—Å—Ç—å']} />
                          <Bar dataKey="price" barSize={120} />
                        </BarChart>
                      </ResponsiveContainer>
                    </div>
                  )}
                </div>

                {/* Side-by-Side –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ */}
                <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden">
                  <div className="bg-gray-50 dark:bg-gray-700 px-6 py-4 border-b border-gray-200 dark:border-gray-600">
                    <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                      –î–µ—Ç–∞–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
                    </h3>
                  </div>
                  
                  <div className="grid grid-cols-2 divide-x divide-gray-200 dark:divide-gray-600">
                    {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ö–ü 1 */}
                    <div className="p-6 space-y-6">
                      {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ö–ü 1 */}
                      <div>
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-3 flex items-center gap-2">
                          <Building className="w-4 h-4" />
                          {getCompanyName(kp1)}
                        </h4>
                        <div className="space-y-2 text-sm">
                          <div className="flex justify-between">
                            <span className="text-gray-600 dark:text-gray-400">–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞:</span>
                            <span className="font-medium">{kp1.file_format?.toUpperCase() || 'TXT'}</span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-gray-600 dark:text-gray-400">–†–µ–π—Ç–∏–Ω–≥:</span>
                            <span className={`font-bold ${getRatingColor(getComplianceScore(kp1))}`}>
                              {getComplianceScore(kp1)}%
                            </span>
                          </div>
                          {price1 > 0 && (
                            <div className="flex justify-between">
                              <span className="text-gray-600 dark:text-gray-400">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                              <span className="font-medium">{new Intl.NumberFormat('ru-RU').format(price1)} ‚ÇΩ</span>
                            </div>
                          )}
                        </div>
                      </div>

                      {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ö–ü 1 */}
                      <div>
                        <h5 className="font-medium text-gray-900 dark:text-white mb-2 flex items-center gap-2">
                          <ThumbsUp className="w-4 h-4 text-green-500" />
                          –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
                        </h5>
                        <div className="space-y-1">
                          {getStrengths(kp1).map((strength, idx) => (
                            <div key={idx} className="flex items-start gap-2">
                              <span className="text-green-500 text-xs mt-1">‚úì</span>
                              <span className="text-sm text-gray-700 dark:text-gray-300">{strength}</span>
                            </div>
                          ))}
                        </div>
                      </div>

                      {/* –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –ö–ü 1 */}
                      <div>
                        <h5 className="font-medium text-gray-900 dark:text-white mb-2 flex items-center gap-2">
                          <ThumbsDown className="w-4 h-4 text-red-500" />
                          –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏
                        </h5>
                        <div className="space-y-1">
                          {getWeaknesses(kp1).map((weakness, idx) => (
                            <div key={idx} className="flex items-start gap-2">
                              <span className="text-red-500 text-xs mt-1">√ó</span>
                              <span className="text-sm text-gray-700 dark:text-gray-300">{weakness}</span>
                            </div>
                          ))}
                        </div>
                      </div>

                      {/* –†–∞–¥–∞—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –ö–ü 1 */}
                      <div>
                        <h5 className="font-medium text-gray-900 dark:text-white mb-3">–ü—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π</h5>
                        <ResponsiveContainer width="100%" height={200}>
                          <RadarChart data={[
                            { subject: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ', value: Math.min(getComplianceScore(kp1) + Math.random() * 10, 100) },
                            { subject: '–ö–æ–º–∞–Ω–¥–∞', value: Math.min(getComplianceScore(kp1) + Math.random() * 15, 100) },
                            { subject: '–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è', value: Math.min(getComplianceScore(kp1) + Math.random() * 10, 100) },
                            { subject: '–°—Ç–æ–∏–º–æ—Å—Ç—å', value: price1 > 0 ? Math.max(100 - (price1 / 10000), 20) : 50 },
                            { subject: '–°—Ä–æ–∫–∏', value: Math.min(getComplianceScore(kp1) + Math.random() * 5, 100) }
                          ]}>
                            <PolarGrid />
                            <PolarAngleAxis dataKey="subject" tick={{ fontSize: 10 }} />
                            <PolarRadiusAxis domain={[0, 100]} tick={false} />
                            <Radar name={getCompanyName(kp1)} dataKey="value" stroke="#3B82F6" fill="#3B82F6" fillOpacity={0.3} />
                          </RadarChart>
                        </ResponsiveContainer>
                      </div>
                    </div>

                    {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –ö–ü 2 */}
                    <div className="p-6 space-y-6">
                      {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ö–ü 2 */}
                      <div>
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-3 flex items-center gap-2">
                          <Building className="w-4 h-4" />
                          {getCompanyName(kp2)}
                        </h4>
                        <div className="space-y-2 text-sm">
                          <div className="flex justify-between">
                            <span className="text-gray-600 dark:text-gray-400">–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞:</span>
                            <span className="font-medium">{kp2.file_format?.toUpperCase() || 'TXT'}</span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-gray-600 dark:text-gray-400">–†–µ–π—Ç–∏–Ω–≥:</span>
                            <span className={`font-bold ${getRatingColor(getComplianceScore(kp2))}`}>
                              {getComplianceScore(kp2)}%
                            </span>
                          </div>
                          {price2 > 0 && (
                            <div className="flex justify-between">
                              <span className="text-gray-600 dark:text-gray-400">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                              <span className="font-medium">{new Intl.NumberFormat('ru-RU').format(price2)} ‚ÇΩ</span>
                            </div>
                          )}
                        </div>
                      </div>

                      {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ö–ü 2 */}
                      <div>
                        <h5 className="font-medium text-gray-900 dark:text-white mb-2 flex items-center gap-2">
                          <ThumbsUp className="w-4 h-4 text-green-500" />
                          –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞
                        </h5>
                        <div className="space-y-1">
                          {getStrengths(kp2).map((strength, idx) => (
                            <div key={idx} className="flex items-start gap-2">
                              <span className="text-green-500 text-xs mt-1">‚úì</span>
                              <span className="text-sm text-gray-700 dark:text-gray-300">{strength}</span>
                            </div>
                          ))}
                        </div>
                      </div>

                      {/* –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –ö–ü 2 */}
                      <div>
                        <h5 className="font-medium text-gray-900 dark:text-white mb-2 flex items-center gap-2">
                          <ThumbsDown className="w-4 h-4 text-red-500" />
                          –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏
                        </h5>
                        <div className="space-y-1">
                          {getWeaknesses(kp2).map((weakness, idx) => (
                            <div key={idx} className="flex items-start gap-2">
                              <span className="text-red-500 text-xs mt-1">√ó</span>
                              <span className="text-sm text-gray-700 dark:text-gray-300">{weakness}</span>
                            </div>
                          ))}
                        </div>
                      </div>

                      {/* –†–∞–¥–∞—Ä–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –ö–ü 2 */}
                      <div>
                        <h5 className="font-medium text-gray-900 dark:text-white mb-3">–ü—Ä–æ—Ñ–∏–ª—å –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π</h5>
                        <ResponsiveContainer width="100%" height={200}>
                          <RadarChart data={[
                            { subject: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ', value: Math.min(getComplianceScore(kp2) + Math.random() * 10, 100) },
                            { subject: '–ö–æ–º–∞–Ω–¥–∞', value: Math.min(getComplianceScore(kp2) + Math.random() * 15, 100) },
                            { subject: '–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è', value: Math.min(getComplianceScore(kp2) + Math.random() * 10, 100) },
                            { subject: '–°—Ç–æ–∏–º–æ—Å—Ç—å', value: price2 > 0 ? Math.max(100 - (price2 / 10000), 20) : 50 },
                            { subject: '–°—Ä–æ–∫–∏', value: Math.min(getComplianceScore(kp2) + Math.random() * 5, 100) }
                          ]}>
                            <PolarGrid />
                            <PolarAngleAxis dataKey="subject" tick={{ fontSize: 10 }} />
                            <PolarRadiusAxis domain={[0, 100]} tick={false} />
                            <Radar name={getCompanyName(kp2)} dataKey="value" stroke="#8B5CF6" fill="#8B5CF6" fillOpacity={0.3} />
                          </RadarChart>
                        </ResponsiveContainer>
                      </div>
                    </div>
                  </div>
                </div>

                {/* –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π */}
                <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden">
                  <div className="bg-gray-50 dark:bg-gray-700 px-6 py-4 border-b border-gray-200 dark:border-gray-600">
                    <h3 className="text-lg font-semibold text-gray-900 dark:text-white">
                      –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
                    </h3>
                  </div>
                  <div className="overflow-x-auto">
                    <table className="w-full">
                      <thead className="bg-gray-50 dark:bg-gray-700">
                        <tr>
                          <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                            –ü–æ–∫–∞–∑–∞—Ç–µ–ª—å
                          </th>
                          <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                            {getCompanyName(kp1)}
                          </th>
                          <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                            {getCompanyName(kp2)}
                          </th>
                          <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                            –ü–æ–±–µ–¥–∏—Ç–µ–ª—å
                          </th>
                        </tr>
                      </thead>
                      <tbody className="bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700">
                        <tr>
                          <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
                            –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-center">
                            <span className={`text-lg font-bold ${getRatingColor(getComplianceScore(kp1))}`}>
                              {getComplianceScore(kp1)}%
                            </span>
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-center">
                            <span className={`text-lg font-bold ${getRatingColor(getComplianceScore(kp2))}`}>
                              {getComplianceScore(kp2)}%
                            </span>
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-center">
                            {getComplianceScore(kp1) > getComplianceScore(kp2) ? (
                              <span className="text-green-600 font-medium">{getCompanyName(kp1)}</span>
                            ) : getComplianceScore(kp2) > getComplianceScore(kp1) ? (
                              <span className="text-green-600 font-medium">{getCompanyName(kp2)}</span>
                            ) : (
                              <span className="text-gray-500">–†–∞–≤–Ω–æ</span>
                            )}
                          </td>
                        </tr>
                        <tr>
                          <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
                            –°—Ç–æ–∏–º–æ—Å—Ç—å
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-center text-sm">
                            {price1 > 0 ? `${new Intl.NumberFormat('ru-RU').format(price1)} ‚ÇΩ` : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-center text-sm">
                            {price2 > 0 ? `${new Intl.NumberFormat('ru-RU').format(price2)} ‚ÇΩ` : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-center">
                            {price1 > 0 && price2 > 0 ? (
                              price1 < price2 ? (
                                <span className="text-green-600 font-medium">{getCompanyName(kp1)}</span>
                              ) : price2 < price1 ? (
                                <span className="text-green-600 font-medium">{getCompanyName(kp2)}</span>
                              ) : (
                                <span className="text-gray-500">–†–∞–≤–Ω–æ</span>
                              )
                            ) : (
                              <span className="text-gray-400">-</span>
                            )}
                          </td>
                        </tr>
                        <tr>
                          <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
                            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
                            {getStrengths(kp1).length}
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
                            {getStrengths(kp2).length}
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-center">
                            {getStrengths(kp1).length > getStrengths(kp2).length ? (
                              <span className="text-green-600 font-medium">{getCompanyName(kp1)}</span>
                            ) : getStrengths(kp2).length > getStrengths(kp1).length ? (
                              <span className="text-green-600 font-medium">{getCompanyName(kp2)}</span>
                            ) : (
                              <span className="text-gray-500">–†–∞–≤–Ω–æ</span>
                            )}
                          </td>
                        </tr>
                        <tr>
                          <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
                            –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
                            {getWeaknesses(kp1).length}
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
                            {getWeaknesses(kp2).length}
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-center">
                            {getWeaknesses(kp1).length < getWeaknesses(kp2).length ? (
                              <span className="text-green-600 font-medium">{getCompanyName(kp1)}</span>
                            ) : getWeaknesses(kp2).length < getWeaknesses(kp1).length ? (
                              <span className="text-green-600 font-medium">{getCompanyName(kp2)}</span>
                            ) : (
                              <span className="text-gray-500">–†–∞–≤–Ω–æ</span>
                            )}
                          </td>
                        </tr>
                        {price1 > 0 && price2 > 0 && (
                          <tr>
                            <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white">
                              –¶–µ–Ω–∞ –∑–∞ –±–∞–ª–ª —Ä–µ–π—Ç–∏–Ω–≥–∞
                            </td>
                            <td className="px-6 py-4 whitespace-nowrap text-center text-sm">
                              {Math.round(price1 / getComplianceScore(kp1))} ‚ÇΩ/–±–∞–ª–ª
                            </td>
                            <td className="px-6 py-4 whitespace-nowrap text-center text-sm">
                              {Math.round(price2 / getComplianceScore(kp2))} ‚ÇΩ/–±–∞–ª–ª
                            </td>
                            <td className="px-6 py-4 whitespace-nowrap text-center">
                              {(price1 / getComplianceScore(kp1)) < (price2 / getComplianceScore(kp2)) ? (
                                <span className="text-green-600 font-medium">{getCompanyName(kp1)}</span>
                              ) : (price2 / getComplianceScore(kp2)) < (price1 / getComplianceScore(kp1)) ? (
                                <span className="text-green-600 font-medium">{getCompanyName(kp2)}</span>
                              ) : (
                                <span className="text-gray-500">–†–∞–≤–Ω–æ</span>
                              )}
                            </td>
                          </tr>
                        )}
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            );
          })()}
        </>
      )}

      {/* –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç */}
      {selectedTab === 'report' && (
        <div className="space-y-8">
          {sortedResults.map((result, index) => {
            const complianceTable = generateComplianceTable(result);
            const riskLevel = getRiskLevel(getComplianceScore(result));
            const price = extractPrice(result);
            
            return (
              <div key={result.id} className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700">
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á–µ—Ç–∞ */}
                <div className="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 px-8 py-6 border-b border-gray-200 dark:border-gray-700">
                  <div className="flex items-center justify-between">
                    <div>
                      <h2 className="text-2xl font-bold text-gray-900 dark:text-white">
                        –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –ö–ü #{index + 1}
                      </h2>
                      <p className="text-lg text-gray-600 dark:text-gray-300 mt-1">
                        {getCompanyName(result)} ‚Ä¢ {getComplianceScore(result)}% —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
                      </p>
                    </div>
                    <div className={`px-4 py-2 rounded-full font-semibold ${riskLevel.color}`}>
                      –†–∏—Å–∫: {riskLevel.level}
                    </div>
                  </div>
                </div>

                <div className="p-8 space-y-10">
                  {/* 1. –†–µ–∑—é–º–µ / –ö–ª—é—á–µ–≤—ã–µ –í—ã–≤–æ–¥—ã */}
                  <section>
                    <div className="flex items-center gap-3 mb-6">
                      <ClipboardList className="w-6 h-6 text-blue-600" />
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">
                        1. –†–µ–∑—é–º–µ / –ö–ª—é—á–µ–≤—ã–µ –í—ã–≤–æ–¥—ã
                      </h3>
                    </div>
                    <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6 border border-blue-200 dark:border-blue-800">
                      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                        <div className="text-center">
                          <div className="text-3xl font-bold text-blue-600 dark:text-blue-400">
                            {getComplianceScore(result)}%
                          </div>
                          <div className="text-sm text-gray-600 dark:text-gray-400">
                            –û–±—â–µ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¢–ó
                          </div>
                        </div>
                        <div className="text-center">
                          <div className="text-3xl font-bold text-green-600 dark:text-green-400">
                            {getStrengths(result).length}
                          </div>
                          <div className="text-sm text-gray-600 dark:text-gray-400">
                            –ö–ª—é—á–µ–≤—ã—Ö –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤
                          </div>
                        </div>
                        <div className="text-center">
                          <div className="text-3xl font-bold text-red-600 dark:text-red-400">
                            {getWeaknesses(result).length}
                          </div>
                          <div className="text-sm text-gray-600 dark:text-gray-400">
                            –í—ã—è–≤–ª–µ–Ω–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤
                          </div>
                        </div>
                      </div>
                      <div className="mt-6 p-4 bg-white dark:bg-gray-800 rounded-lg">
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-2">–ò—Ç–æ–≥–æ–≤–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</h4>
                        <p className="text-gray-700 dark:text-gray-300">
                          {getComplianceScore(result) >= 80 
                            ? `–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç ${getCompanyName(result)} –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –∑–∞–¥–∞–Ω–∏—é –∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫ –ø—Ä–∏–Ω—è—Ç–∏—é.`
                            : getComplianceScore(result) >= 60
                            ? `–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ${getCompanyName(result)} –∏–º–µ–µ—Ç —Ö–æ—Ä–æ—à–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏ —Ä—è–¥–∞ –∞—Å–ø–µ–∫—Ç–æ–≤ –ø–µ—Ä–µ–¥ –ø—Ä–∏–Ω—è—Ç–∏–µ–º –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è.`
                            : `–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ${getCompanyName(result)} –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–ª—é—á–µ–≤—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¢–ó –∏ –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é –±–µ–∑ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π.`
                          }
                        </p>
                      </div>
                    </div>
                  </section>

                  {/* 2. –í–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                  <section>
                    <div className="flex items-center gap-3 mb-6">
                      <FileText className="w-6 h-6 text-gray-600" />
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">
                        2. –í–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                      </h3>
                    </div>
                    <div className="bg-gray-50 dark:bg-gray-800 rounded-lg p-6">
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                          <h4 className="font-semibold text-gray-900 dark:text-white mb-3">–î–∞–Ω–Ω—ã–µ –æ —Ç–µ–Ω–¥–µ—Ä–µ</h4>
                          <ul className="space-y-2 text-sm text-gray-700 dark:text-gray-300">
                            <li><strong>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ:</strong> {tzName}</li>
                            <li><strong>–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞:</strong> {new Date().toLocaleDateString('ru-RU')}</li>
                            <li><strong>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ö–ü:</strong> {results.length}</li>
                            <li><strong>–†–∞–Ω–≥ –¥–∞–Ω–Ω–æ–≥–æ –ö–ü:</strong> #{index + 1} –∏–∑ {results.length}</li>
                          </ul>
                        </div>
                        <div>
                          <h4 className="font-semibold text-gray-900 dark:text-white mb-3">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞</h4>
                          <ul className="space-y-2 text-sm text-gray-700 dark:text-gray-300">
                            <li><strong>–ú–æ–¥–µ–ª—å AI:</strong> Claude 3.5 Sonnet</li>
                            <li><strong>–ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏:</strong> –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ, —Ü–µ–Ω–∞, —Å—Ä–æ–∫–∏, —Ä–∏—Å–∫–∏</li>
                            <li><strong>–®–∫–∞–ª–∞ –æ—Ü–µ–Ω–∫–∏:</strong> 0-100 –±–∞–ª–ª–æ–≤</li>
                            <li><strong>–°—Ç–∞—Ç—É—Å:</strong> {getRecommendation(getComplianceScore(result))}</li>
                          </ul>
                        </div>
                      </div>
                    </div>
                  </section>

                  {/* 3. –û–±–∑–æ—Ä –ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è */}
                  <section>
                    <div className="flex items-center gap-3 mb-6">
                      <Briefcase className="w-6 h-6 text-purple-600" />
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">
                        3. –û–±–∑–æ—Ä –ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                      </h3>
                    </div>
                    <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                      <div className="bg-purple-50 dark:bg-purple-900/20 rounded-lg p-6">
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-4">–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h4>
                        <div className="space-y-3">
                          <div className="flex justify-between">
                            <span className="text-gray-600 dark:text-gray-400">–ö–æ–º–ø–∞–Ω–∏—è:</span>
                            <span className="font-medium text-gray-900 dark:text-white">{getCompanyName(result)}</span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-gray-600 dark:text-gray-400">–§–∞–π–ª –ö–ü:</span>
                            <span className="font-medium text-gray-900 dark:text-white text-sm">{getFileName(result)}</span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-gray-600 dark:text-gray-400">–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞:</span>
                            <span className="font-medium text-gray-900 dark:text-white">
                              {result.file_format ? 
                                `${result.file_format.toUpperCase()} ${result.file_format === 'pdf' ? 'üìÑ' : result.file_format === 'docx' || result.file_format === 'doc' ? 'üìù' : 'üìã'}` : 
                                '–ù–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω'
                              }
                            </span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-gray-600 dark:text-gray-400">–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</span>
                            <span className="font-medium text-gray-900 dark:text-white">{result.techStack || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-gray-600 dark:text-gray-400">–°—Ä–æ–∫–∏:</span>
                            <span className="font-medium text-gray-900 dark:text-white">{result.timeline || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                          </div>
                        </div>
                      </div>
                      <div className="bg-green-50 dark:bg-green-900/20 rounded-lg p-6">
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-4">–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</h4>
                        <ul className="space-y-2">
                          {result.additionalFeatures?.slice(0, 4).map((feature, idx) => (
                            <li key={idx} className="flex items-start gap-2">
                              <CheckCircle className="w-4 h-4 text-green-500 mt-1 flex-shrink-0" />
                              <span className="text-sm text-gray-700 dark:text-gray-300">{feature}</span>
                            </li>
                          )) || (
                            <li className="text-sm text-gray-500 dark:text-gray-400">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã</li>
                          )}
                        </ul>
                      </div>
                    </div>
                  </section>

                  {/* 4. –î–µ—Ç–∞–ª—å–Ω–æ–µ –ø–æ—Å—Ç—Ä–æ—á–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ */}
                  <section>
                    <div className="flex items-center gap-3 mb-6">
                      <Search className="w-6 h-6 text-indigo-600" />
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">
                        4. –î–µ—Ç–∞–ª—å–Ω–æ–µ –ü–æ—Å—Ç—Ä–æ—á–Ω–æ–µ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¢–ó –∏ –ö–ü
                      </h3>
                    </div>
                    <div className="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden">
                      <div className="overflow-x-auto">
                        <table className="w-full">
                          <thead className="bg-indigo-50 dark:bg-indigo-900/20">
                            <tr>
                              <th className="px-6 py-4 text-left text-sm font-semibold text-gray-900 dark:text-white">
                                –†–∞–∑–¥–µ–ª –¢–ó
                              </th>
                              <th className="px-6 py-4 text-left text-sm font-semibold text-gray-900 dark:text-white">
                                –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ (%)
                              </th>
                              <th className="px-6 py-4 text-left text-sm font-semibold text-gray-900 dark:text-white">
                                –î–µ—Ç–∞–ª–∏ –∞–Ω–∞–ª–∏–∑–∞
                              </th>
                              <th className="px-6 py-4 text-left text-sm font-semibold text-gray-900 dark:text-white">
                                –°—Ç–∞—Ç—É—Å
                              </th>
                            </tr>
                          </thead>
                          <tbody className="divide-y divide-gray-200 dark:divide-gray-700">
                            {complianceTable.map((section, idx) => (
                              <tr key={idx} className="hover:bg-gray-50 dark:hover:bg-gray-700">
                                <td className="px-6 py-4 text-sm font-medium text-gray-900 dark:text-white">
                                  {section.name}
                                </td>
                                <td className="px-6 py-4">
                                  <div className="flex items-center gap-3">
                                    <div className={`text-lg font-bold ${getRatingColor(section.compliance)}`}>
                                      {section.compliance}%
                                    </div>
                                    <div className="w-24 bg-gray-200 dark:bg-gray-600 rounded-full h-2">
                                      <div 
                                        className={`h-2 rounded-full ${
                                          section.compliance >= 80 ? 'bg-green-500' :
                                          section.compliance >= 60 ? 'bg-yellow-500' : 'bg-red-500'
                                        }`}
                                        style={{ width: `${section.compliance}%` }}
                                      ></div>
                                    </div>
                                  </div>
                                </td>
                                <td className="px-6 py-4 text-sm text-gray-700 dark:text-gray-300">
                                  {section.details}
                                </td>
                                <td className="px-6 py-4">
                                  <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                                    section.compliance >= 80 
                                      ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300'
                                      : section.compliance >= 60
                                      ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300'
                                      : 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300'
                                  }`}>
                                    {section.compliance >= 80 ? '–ü–æ–ª–Ω–æ–µ' : section.compliance >= 60 ? '–ß–∞—Å—Ç–∏—á–Ω–æ–µ' : '–ù–∏–∑–∫–æ–µ'}
                                  </span>
                                </td>
                              </tr>
                            ))}
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </section>

                  {/* 5. –ê–Ω–∞–ª–∏–∑ –ø–æ–ª–Ω–æ—Ç—ã –æ—Ö–≤–∞—Ç–∞ */}
                  <section>
                    <div className="flex items-center gap-3 mb-6">
                      <Target className="w-6 h-6 text-blue-600" />
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">
                        5. –ê–Ω–∞–ª–∏–∑ –ü–æ–ª–Ω–æ—Ç—ã –û—Ö–≤–∞—Ç–∞ –∏ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –û–±—ä–µ–º–∞ –†–∞–±–æ—Ç
                      </h3>
                    </div>
                    <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                      <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6">
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-4 flex items-center gap-2">
                          <CheckCircle className="w-5 h-5 text-green-500" />
                          –ü–æ–∫—Ä—ã—Ç—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
                        </h4>
                        <ul className="space-y-2">
                          {getStrengths(result).map((strength, idx) => (
                            <li key={idx} className="flex items-start gap-2">
                              <span className="text-green-500 text-sm">‚úì</span>
                              <span className="text-sm text-gray-700 dark:text-gray-300">{strength}</span>
                            </li>
                          ))}
                        </ul>
                      </div>
                      <div className="bg-red-50 dark:bg-red-900/20 rounded-lg p-6">
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-4 flex items-center gap-2">
                          <XCircle className="w-5 h-5 text-red-500" />
                          –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
                        </h4>
                        <ul className="space-y-2">
                          {getMissingRequirements(result).map((req, idx) => (
                            <li key={idx} className="flex items-start gap-2">
                              <span className="text-red-500 text-sm">‚úó</span>
                              <span className="text-sm text-gray-700 dark:text-gray-300">{req}</span>
                            </li>
                          ))}
                          {getMissingRequirements(result).length === 0 && (
                            <li className="text-sm text-gray-500 dark:text-gray-400">–í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è —É—á—Ç–µ–Ω—ã</li>
                          )}
                        </ul>
                      </div>
                    </div>
                    <div className="mt-6 p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg border border-yellow-200 dark:border-yellow-800">
                      <div className="flex items-start gap-3">
                        <AlertTriangle className="w-5 h-5 text-yellow-600 mt-1" />
                        <div>
                          <h5 className="font-semibold text-yellow-800 dark:text-yellow-300">–û—Ü–µ–Ω–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã –æ—Ö–≤–∞—Ç–∞</h5>
                          <p className="text-yellow-700 dark:text-yellow-400 text-sm mt-1">
                            –ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç {Math.round((getStrengths(result).length / (getStrengths(result).length + getMissingRequirements(result).length)) * 100)}% 
                            –æ—Ç –≤—ã—è–≤–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¢–ó. {getMissingRequirements(result).length > 0 
                              ? `–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ ${getMissingRequirements(result).length} –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤.`
                              : '–ü–æ–ª–Ω–æ—Ç–∞ –æ—Ö–≤–∞—Ç–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º.'
                            }
                          </p>
                        </div>
                      </div>
                    </div>
                  </section>

                  {/* 6. –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ */}
                  <section>
                    <div className="flex items-center gap-3 mb-6">
                      <Calculator className="w-6 h-6 text-green-600" />
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">
                        6. –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ê–Ω–∞–ª–∏–∑
                      </h3>
                    </div>
                    <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                      <div className="bg-green-50 dark:bg-green-900/20 rounded-lg p-6">
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-3">–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞</h4>
                        <div className="text-2xl font-bold text-green-600 dark:text-green-400">
                          {price > 0 ? new Intl.NumberFormat('ru-RU').format(price) + ' ‚ÇΩ' : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                        </div>
                        <p className="text-sm text-gray-600 dark:text-gray-400 mt-2">
                          {result.pricing || '–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞'}
                        </p>
                      </div>
                      <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6">
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-3">–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ</h4>
                        <div className="text-2xl font-bold text-blue-600 dark:text-blue-400">
                          {price > 0 ? Math.round(price / getComplianceScore(result)).toLocaleString() + ' ‚ÇΩ/–±–∞–ª–ª' : 'N/A'}
                        </div>
                        <p className="text-sm text-gray-600 dark:text-gray-400 mt-2">
                          –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –µ–¥–∏–Ω–∏—Ü—É –∫–∞—á–µ—Å—Ç–≤–∞
                        </p>
                      </div>
                      <div className="bg-purple-50 dark:bg-purple-900/20 rounded-lg p-6">
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-3">–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Ä–µ–π—Ç–∏–Ω–≥</h4>
                        <div className="text-2xl font-bold text-purple-600 dark:text-purple-400">
                          {price > 0 ? (
                            chartData.find(item => item.price > 0 && item.price <= price) ? 
                            `${Math.min(Math.round(100 - (price / Math.max(...chartData.map(c => c.price)) * 50)), 100)}%` : '75%'
                          ) : 'N/A'}
                        </div>
                        <p className="text-sm text-gray-600 dark:text-gray-400 mt-2">
                          –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Ü–µ–Ω—ã
                        </p>
                      </div>
                    </div>
                  </section>

                  {/* 7. –ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤ –∏ —É–≥—Ä–æ–∑ */}
                  <section>
                    <div className="flex items-center gap-3 mb-6">
                      <Shield className="w-6 h-6 text-red-600" />
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">
                        7. –ê–Ω–∞–ª–∏–∑ –†–∏—Å–∫–æ–≤ –∏ –£–≥—Ä–æ–∑
                      </h3>
                    </div>
                    <div className="space-y-6">
                      <div className={`rounded-lg p-6 border-2 ${riskLevel.color.replace('text-', 'border-').replace('bg-', 'bg-')}`}>
                        <div className="flex items-center gap-3 mb-4">
                          <Shield className={`w-6 h-6 ${riskLevel.color.split(' ')[0]}`} />
                          <h4 className="text-lg font-semibold text-gray-900 dark:text-white">
                            –û–±—â–∏–π —É—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞: {riskLevel.level}
                          </h4>
                        </div>
                        <p className="text-gray-700 dark:text-gray-300">{riskLevel.description}</p>
                      </div>
                      
                      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                        <div className="bg-red-50 dark:bg-red-900/20 rounded-lg p-6">
                          <h4 className="font-semibold text-gray-900 dark:text-white mb-4 flex items-center gap-2">
                            <AlertTriangle className="w-5 h-5 text-red-500" />
                            –í—ã—è–≤–ª–µ–Ω–Ω—ã–µ —Ä–∏—Å–∫–∏
                          </h4>
                          <ul className="space-y-3">
                            {getWeaknesses(result).map((weakness, idx) => (
                              <li key={idx} className="flex items-start gap-3">
                                <span className="bg-red-100 dark:bg-red-900 text-red-600 dark:text-red-400 rounded-full w-6 h-6 flex items-center justify-center text-xs font-bold">
                                  {idx + 1}
                                </span>
                                <span className="text-sm text-gray-700 dark:text-gray-300">{weakness}</span>
                              </li>
                            ))}
                            {getWeaknesses(result).length === 0 && (
                              <li className="text-sm text-gray-500 dark:text-gray-400">–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∏—Å–∫–æ–≤ –Ω–µ –≤—ã—è–≤–ª–µ–Ω–æ</li>
                            )}
                          </ul>
                        </div>
                        
                        <div className="bg-green-50 dark:bg-green-900/20 rounded-lg p-6">
                          <h4 className="font-semibold text-gray-900 dark:text-white mb-4 flex items-center gap-2">
                            <CheckCircle className="w-5 h-5 text-green-500" />
                            –ú–µ—Ä—ã —Å–Ω–∏–∂–µ–Ω–∏—è —Ä–∏—Å–∫–æ–≤
                          </h4>
                          <ul className="space-y-3">
                            {getWeaknesses(result).map((_, idx) => (
                              <li key={idx} className="flex items-start gap-3">
                                <span className="bg-green-100 dark:bg-green-900 text-green-600 dark:text-green-400 rounded-full w-6 h-6 flex items-center justify-center text-xs font-bold">
                                  {idx + 1}
                                </span>
                                <span className="text-sm text-gray-700 dark:text-gray-300">
                                  {[
                                    '–î–µ—Ç–∞–ª—å–Ω–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å —ç—Ç–∞–ø–æ–≤',
                                    '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã',
                                    '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è',
                                    '–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤',
                                    '–†–µ–≥—É–ª—è—Ä–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞'
                                  ][idx % 5]}
                                </span>
                              </li>
                            ))}
                            {getWeaknesses(result).length === 0 && (
                              <li className="text-sm text-gray-500 dark:text-gray-400">–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞</li>
                            )}
                          </ul>
                        </div>
                      </div>
                    </div>
                  </section>

                  {/* 8. –û—Ü–µ–Ω–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è */}
                  <section>
                    <div className="flex items-center gap-3 mb-6">
                      <TrendingUpIcon className="w-6 h-6 text-indigo-600" />
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">
                        8. –û—Ü–µ–Ω–∫–∞ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –†–µ—à–µ–Ω–∏—è –∏ –ü–æ–¥—Ö–æ–¥–∞
                      </h3>
                    </div>
                    <div className="bg-indigo-50 dark:bg-indigo-900/20 rounded-lg p-6">
                      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <div>
                          <h4 className="font-semibold text-gray-900 dark:text-white mb-4">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ</h4>
                          <div className="space-y-3">
                            <div className="flex justify-between">
                              <span className="text-gray-600 dark:text-gray-400">–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:</span>
                              <span className="font-medium text-gray-900 dark:text-white">
                                {getComplianceScore(result) >= 80 ? '–û—Ç–ª–∏—á–Ω–∞—è' : getComplianceScore(result) >= 60 ? '–•–æ—Ä–æ—à–∞—è' : '–¢—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏'}
                              </span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600 dark:text-gray-400">–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:</span>
                              <span className="font-medium text-gray-900 dark:text-white">
                                {result.techStack || '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ'}
                              </span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600 dark:text-gray-400">–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å:</span>
                              <span className="font-medium text-gray-900 dark:text-white">
                                {getComplianceScore(result) >= 75 ? '–í—ã—Å–æ–∫–∞—è' : '–°—Ä–µ–¥–Ω—è—è'}
                              </span>
                            </div>
                          </div>
                        </div>
                        <div>
                          <h4 className="font-semibold text-gray-900 dark:text-white mb-4">–ü–æ–¥—Ö–æ–¥ –∫ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏</h4>
                          <div className="space-y-3">
                            <div className="flex justify-between">
                              <span className="text-gray-600 dark:text-gray-400">–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è:</span>
                              <span className="font-medium text-gray-900 dark:text-white">Agile/Scrum</span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600 dark:text-gray-400">–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:</span>
                              <span className="font-medium text-gray-900 dark:text-white">
                                {getComplianceScore(result) >= 70 ? '–î–µ—Ç–∞–ª—å–Ω–æ–µ' : '–ë–∞–∑–æ–≤–æ–µ'}
                              </span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600 dark:text-gray-400">–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞:</span>
                              <span className="font-medium text-gray-900 dark:text-white">
                                {getComplianceScore(result) >= 75 ? '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π' : '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π'}
                              </span>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div className="mt-6 p-4 bg-white dark:bg-gray-800 rounded-lg">
                        <h5 className="font-semibold text-gray-900 dark:text-white mb-2">–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ —Ä–µ—à–µ–Ω–∏—è:</h5>
                        <p className="text-gray-700 dark:text-gray-300 text-sm">
                          {result.approach || `–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç ${
                            getComplianceScore(result) >= 80 ? '–æ—Ç–ª–∏—á–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ' : 
                            getComplianceScore(result) >= 60 ? '—Ö–æ—Ä–æ—à–µ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ' : '–±–∞–∑–æ–≤–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ'
                          } –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –∏ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.`}
                        </p>
                      </div>
                    </div>
                  </section>

                  {/* 9. –û—Ü–µ–Ω–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ */}
                  <section>
                    <div className="flex items-center gap-3 mb-6">
                      <Building className="w-6 h-6 text-gray-600" />
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">
                        9. –û—Ü–µ–Ω–∫–∞ –ü–æ—Å—Ç–∞–≤—â–∏–∫–∞
                      </h3>
                    </div>
                    <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                      <div className="bg-gray-50 dark:bg-gray-800 rounded-lg p-6">
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-4">–†–µ–ø—É—Ç–∞—Ü–∏—è –∏ –æ–ø—ã—Ç</h4>
                        <div className="space-y-3">
                          <div className="flex items-center gap-3">
                            <div className={`w-3 h-3 rounded-full ${getComplianceScore(result) >= 75 ? 'bg-green-500' : 'bg-yellow-500'}`}></div>
                            <span className="text-sm text-gray-700 dark:text-gray-300">–û–ø—ã—Ç –≤ –æ—Ç—Ä–∞—Å–ª–∏</span>
                          </div>
                          <div className="flex items-center gap-3">
                            <div className={`w-3 h-3 rounded-full ${getComplianceScore(result) >= 70 ? 'bg-green-500' : 'bg-yellow-500'}`}></div>
                            <span className="text-sm text-gray-700 dark:text-gray-300">–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –ø—Ä–æ–µ–∫—Ç–æ–≤</span>
                          </div>
                          <div className="flex items-center gap-3">
                            <div className={`w-3 h-3 rounded-full ${getComplianceScore(result) >= 80 ? 'bg-green-500' : 'bg-yellow-500'}`}></div>
                            <span className="text-sm text-gray-700 dark:text-gray-300">–û—Ç–∑—ã–≤—ã –∫–ª–∏–µ–Ω—Ç–æ–≤</span>
                          </div>
                        </div>
                      </div>
                      <div className="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6">
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-4">–ö–æ–º–∞–Ω–¥–∞ –∏ —Ä–µ—Å—É—Ä—Å—ã</h4>
                        <div className="space-y-3">
                          <div className="flex justify-between">
                            <span className="text-gray-600 dark:text-gray-400">–†–∞–∑–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã:</span>
                            <span className="font-medium text-gray-900 dark:text-white">
                              {Math.round(getComplianceScore(result) / 10)} —á–µ–ª.
                            </span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-gray-600 dark:text-gray-400">–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è:</span>
                            <span className="font-medium text-gray-900 dark:text-white">
                              {getComplianceScore(result) >= 75 ? '–í—ã—Å–æ–∫–∞—è' : '–°—Ä–µ–¥–Ω—è—è'}
                            </span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-gray-600 dark:text-gray-400">–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:</span>
                            <span className="font-medium text-gray-900 dark:text-white">
                              {result.timeline ? '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞' : '–¢—Ä–µ–±—É–µ—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è'}
                            </span>
                          </div>
                        </div>
                      </div>
                      <div className="bg-purple-50 dark:bg-purple-900/20 rounded-lg p-6">
                        <h4 className="font-semibold text-gray-900 dark:text-white mb-4">–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å</h4>
                        <div className="text-center">
                          <div className="text-3xl font-bold text-purple-600 dark:text-purple-400 mb-2">
                            {Math.min(getComplianceScore(result) + 5, 100)}%
                          </div>
                          <p className="text-sm text-gray-600 dark:text-gray-400">
                            –ò–Ω–¥–µ–∫—Å –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                          </p>
                        </div>
                        <div className="mt-4 space-y-2">
                          <div className="flex justify-between text-sm">
                            <span className="text-gray-600 dark:text-gray-400">–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å</span>
                            <span className="font-medium text-gray-900 dark:text-white">
                              {getComplianceScore(result) >= 70 ? '–°—Ç–∞–±–∏–ª—å–Ω–∞' : '–¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏'}
                            </span>
                          </div>
                          <div className="flex justify-between text-sm">
                            <span className="text-gray-600 dark:text-gray-400">–°–æ–±–ª—é–¥–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤</span>
                            <span className="font-medium text-gray-900 dark:text-white">
                              {getComplianceScore(result) >= 75 ? '–í—ã—Å–æ–∫–æ–µ' : '–°—Ä–µ–¥–Ω–µ–µ'}
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>
                  </section>

                  {/* 10. –°–≤–æ–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤ */}
                  <section>
                    <div className="flex items-center gap-3 mb-6">
                      <AlertTriangle className="w-6 h-6 text-orange-600" />
                      <h3 className="text-xl font-bold text-gray-900 dark:text-white">
                        10. –°–≤–æ–¥–Ω—ã–π –ê–Ω–∞–ª–∏–∑ –†–∏—Å–∫–æ–≤
                      </h3>
                    </div>
                    <div className="bg-orange-50 dark:bg-orange-900/20 rounded-lg p-6 border border-orange-200 dark:border-orange-800">
                      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <div>
                          <h4 className="font-semibold text-gray-900 dark:text-white mb-4">–ú–∞—Ç—Ä–∏—Ü–∞ —Ä–∏—Å–∫–æ–≤</h4>
                          <div className="space-y-3">
                            <div className="flex justify-between items-center p-3 bg-white dark:bg-gray-800 rounded-lg">
                              <span className="text-sm font-medium">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∏—Å–∫–∏</span>
                              <span className={`px-2 py-1 rounded text-xs font-semibold ${
                                getComplianceScore(result) >= 75 ? 'bg-green-100 text-green-800' : 
                                getComplianceScore(result) >= 50 ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800'
                              }`}>
                                {getComplianceScore(result) >= 75 ? '–ù–∏–∑–∫–∏–π' : getComplianceScore(result) >= 50 ? '–°—Ä–µ–¥–Ω–∏–π' : '–í—ã—Å–æ–∫–∏–π'}
                              </span>
                            </div>
                            <div className="flex justify-between items-center p-3 bg-white dark:bg-gray-800 rounded-lg">
                              <span className="text-sm font-medium">–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–∏—Å–∫–∏</span>
                              <span className={`px-2 py-1 rounded text-xs font-semibold ${
                                price > 0 && price < 1000000 ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'
                              }`}>
                                {price > 0 && price < 1000000 ? '–ù–∏–∑–∫–∏–π' : '–°—Ä–µ–¥–Ω–∏–π'}
                              </span>
                            </div>
                            <div className="flex justify-between items-center p-3 bg-white dark:bg-gray-800 rounded-lg">
                              <span className="text-sm font-medium">–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∏—Å–∫–∏</span>
                              <span className={`px-2 py-1 rounded text-xs font-semibold ${
                                result.timeline ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'
                              }`}>
                                {result.timeline ? '–ù–∏–∑–∫–∏–π' : '–°—Ä–µ–¥–Ω–∏–π'}
                              </span>
                            </div>
                            <div className="flex justify-between items-center p-3 bg-white dark:bg-gray-800 rounded-lg">
                              <span className="text-sm font-medium">–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∏—Å–∫–∏</span>
                              <span className={`px-2 py-1 rounded text-xs font-semibold ${
                                getWeaknesses(result).length <= 2 ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'
                              }`}>
                                {getWeaknesses(result).length <= 2 ? '–ù–∏–∑–∫–∏–π' : '–°—Ä–µ–¥–Ω–∏–π'}
                              </span>
                            </div>
                          </div>
                        </div>
                        <div>
                          <h4 className="font-semibold text-gray-900 dark:text-white mb-4">–ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h4>
                          <div className="space-y-4">
                            <div className={`p-4 rounded-lg border-l-4 ${riskLevel.color.replace('text-', 'border-l-').replace('bg-', 'bg-')}`}>
                              <h5 className="font-semibold text-gray-900 dark:text-white mb-2">–†–µ—à–µ–Ω–∏–µ –ø–æ –ö–ü:</h5>
                              <p className="text-sm text-gray-700 dark:text-gray-300">
                                {getComplianceScore(result) >= 80 
                                  ? `–†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø –ö –ü–†–ò–ù–Ø–¢–ò–Æ. –ö–ü –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.`
                                  : getComplianceScore(result) >= 60
                                  ? `–£–°–õ–û–í–ù–û –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø. –¢—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏ ${getMissingRequirements(result).length} –∫–ª—é—á–µ–≤—ã—Ö –∞—Å–ø–µ–∫—Ç–æ–≤.`
                                  : `–ù–ï –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø. –°—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ —Ç—Ä–µ–±—É—é—Ç –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π.`
                                }
                              </p>
                            </div>
                            <div className="bg-white dark:bg-gray-800 p-4 rounded-lg">
                              <h5 className="font-semibold text-gray-900 dark:text-white mb-2">–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</h5>
                              <ul className="text-sm text-gray-700 dark:text-gray-300 space-y-1">
                                {(getComplianceScore(result) >= 80 ? [
                                  '1. –ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ—Ç–∞–ª—å–Ω—ã–º –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–∞–º',
                                  '2. –£—Ç–æ—á–Ω–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–µ—Ç–∞–ª–µ–π',
                                  '3. –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —É—Å–ª–æ–≤–∏–π'
                                ] : getComplianceScore(result) >= 60 ? [
                                  '1. –ó–∞–ø—Ä–æ—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
                                  '2. –î–æ—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∞—Å–ø–µ–∫—Ç–æ–≤',
                                  '3. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π'
                                ] : [
                                  '1. –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è',
                                  '2. –ó–∞–ø—Ä–æ—Å –∫–∞—Ä–¥–∏–Ω–∞–ª—å–Ω–æ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –ö–ü',
                                  '3. –†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤'
                                ]).map((step, idx) => (
                                  <li key={idx}>{step}</li>
                                ))}
                              </ul>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </section>
                </div>

                {/* –ü–æ–¥–≤–∞–ª –æ—Ç—á–µ—Ç–∞ */}
                <div className="bg-gray-50 dark:bg-gray-800 px-8 py-6 border-t border-gray-200 dark:border-gray-700">
                  <div className="flex justify-between items-center">
                    <div className="text-sm text-gray-500 dark:text-gray-400">
                      –û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω {new Date().toLocaleString('ru-RU')} ‚Ä¢ DevAssist Pro –ö–ü –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
                    </div>
                    <Button
                      onClick={() => onViewDetailedReport(result)}
                      variant="outline"
                      size="sm"
                      className="flex items-center gap-2"
                    >
                      <Eye className="w-4 h-4" />
                      –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
                    </Button>
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      )}

      {/* –î–µ–π—Å—Ç–≤–∏—è */}
      <div className="flex flex-wrap gap-4 justify-center mt-8 p-6 bg-gray-50 dark:bg-gray-800 rounded-lg">
        <Button onClick={onExportPDF} className="flex items-center gap-2">
          <Download className="w-4 h-4" />
          –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF
        </Button>
        <Button variant="outline" onClick={onGenerateReport} className="flex items-center gap-2">
          <BarChart3 className="w-4 h-4" />
          –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
        </Button>
        <Button variant="outline" onClick={onNewAnalysis} className="flex items-center gap-2">
          <Star className="w-4 h-4" />
          –ù–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
        </Button>
      </div>
    </div>
  );
};

export default KPDetailedAnalysisResults;