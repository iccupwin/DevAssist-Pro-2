import type { Meta, StoryObj } from '@storybook/react';
import LoadingSpinner from './LoadingSpinner';

const meta: Meta<typeof LoadingSpinner> = {
  title: 'UI/LoadingSpinner',
  component: LoadingSpinner,
  parameters: {
    layout: 'centered',
    docs: {
      description: {
        component: `
# LoadingSpinner Component

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è DevAssist Pro —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.

## –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
- üéØ –¢—Ä–∏ —Ä–∞–∑–º–µ—Ä–∞: small, medium, large
- üìù –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏
- üé® –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–µ —Å—Ç–∏–ª–∏ —á–µ—Ä–µ–∑ className
- üîÑ –ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
- üåó –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–º–Ω–æ–π –∏ —Å–≤–µ—Ç–ª–æ–π —Ç–µ–º—ã
- ‚ôø Accessibility –ø–æ–¥–¥–µ—Ä–∂–∫–∞

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –º–æ–¥—É–ª—è—Ö DevAssist Pro
- **–ö–ü –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä**: –ò–Ω–¥–∏–∫–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∞–π–ª–æ–≤
- **–¢–ó –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä**: –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- **–û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤**: –†–∞—Å—á–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
- **–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫**: –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π
- **–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π**: –ü–æ–∏—Å–∫ –∏ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
- **–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è**: –ü—Ä–æ—Ü–µ—Å—Å –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É
        `,
      },
    },
  },
  argTypes: {
    size: {
      control: { type: 'select' },
      options: ['sm', 'md', 'lg'],
      description: '–†–∞–∑–º–µ—Ä —Å–ø–∏–Ω–Ω–µ—Ä–∞',
    },
    text: {
      control: { type: 'text' },
      description: '–¢–µ–∫—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏',
    },
    className: {
      control: { type: 'text' },
      description: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ CSS –∫–ª–∞—Å—Å—ã',
    },
  },
};

export default meta;
type Story = StoryObj<typeof meta>;

// –ë–∞–∑–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã
export const Small: Story = {
  args: {
    size: 'sm',
  },
};

export const Medium: Story = {
  args: {
    size: 'md',
  },
};

export const Large: Story = {
  args: {
    size: 'lg',
  },
};

// –° —Ç–µ–∫—Å—Ç–æ–º
export const WithText: Story = {
  args: {
    size: 'md',
    text: '–ó–∞–≥—Ä—É–∑–∫–∞...',
  },
};

export const AnalyzeText: Story = {
  args: {
    size: 'lg',
    text: '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ö–ü...',
  },
};

export const ProcessingText: Story = {
  args: {
    size: 'md',
    text: '–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã',
  },
};

// –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–æ–¥—É–ª—è—Ö DevAssist Pro
export const KPAnalyzerLoading: Story = {
  render: () => (
    <div className="space-y-8 p-6">
      <h3 className="text-lg font-semibold mb-4">–ö–ü –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä - –°–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏</h3>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤</h4>
          <LoadingSpinner size="sm" text="–ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã..." />
        </div>
        
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</h4>
          <LoadingSpinner size="md" text="–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¢–ó –∏ –ö–ü..." />
        </div>
        
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞</h4>
          <LoadingSpinner size="md" text="–§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç..." />
        </div>
        
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–≠–∫—Å–ø–æ—Ä—Ç PDF</h4>
          <LoadingSpinner size="sm" text="–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ PDF..." />
        </div>
      </div>
    </div>
  ),
  parameters: {
    layout: 'padded',
  },
};

export const TZGeneratorLoading: Story = {
  render: () => (
    <div className="space-y-8 p-6">
      <h3 className="text-lg font-semibold mb-4">–¢–ó –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä - –°–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏</h3>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤</h4>
          <LoadingSpinner size="sm" text="–ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω—ã..." />
        </div>
        
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–ò–ò –≥–µ–Ω–µ—Ä–∞—Ü–∏—è</h4>
          <LoadingSpinner size="lg" text="–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¢–ó —Å –ø–æ–º–æ—â—å—é –ò–ò..." />
        </div>
        
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π</h4>
          <LoadingSpinner size="md" text="–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ..." />
        </div>
        
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ</h4>
          <LoadingSpinner size="sm" text="–°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç..." />
        </div>
      </div>
    </div>
  ),
  parameters: {
    layout: 'padded',
  },
};

export const ProjectEvaluationLoading: Story = {
  render: () => (
    <div className="space-y-8 p-6">
      <h3 className="text-lg font-semibold mb-4">–û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ - –°–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏</h3>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–†–∞—Å—á–µ—Ç NPV</h4>
          <LoadingSpinner size="md" text="–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —á–∏—Å—Ç—É—é –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å..." />
        </div>
        
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤</h4>
          <LoadingSpinner size="md" text="–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç–Ω—ã–µ —Ä–∏—Å–∫–∏..." />
        </div>
        
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–°—Ü–µ–Ω–∞—Ä–Ω–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ</h4>
          <LoadingSpinner size="lg" text="–°—Ç—Ä–æ–∏–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Ä–∞–∑–≤–∏—Ç–∏—è..." />
        </div>
        
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞</h4>
          <LoadingSpinner size="md" text="–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç..." />
        </div>
      </div>
    </div>
  ),
  parameters: {
    layout: 'padded',
  },
};

export const AuthenticationLoading: Story = {
  render: () => (
    <div className="space-y-8 p-6">
      <h3 className="text-lg font-semibold mb-4">–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - –°–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏</h3>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h4>
          <LoadingSpinner size="sm" text="–ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ..." />
        </div>
        
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h4>
          <LoadingSpinner size="sm" text="–°–æ–∑–¥–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç..." />
        </div>
        
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h4>
          <LoadingSpinner size="md" text="–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google..." />
        </div>
        
        <div className="border rounded-lg p-4">
          <h4 className="text-sm font-medium mb-3">–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è</h4>
          <LoadingSpinner size="sm" text="–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ..." />
        </div>
      </div>
    </div>
  ),
  parameters: {
    layout: 'padded',
  },
};

// –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
export const FullScreenLoading: Story = {
  render: () => (
    <div className="h-96 w-full bg-gray-50 flex items-center justify-center rounded-lg">
      <LoadingSpinner size="lg" text="–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º DevAssist Pro..." />
    </div>
  ),
  parameters: {
    layout: 'padded',
  },
};

// –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
export const InlineLoading: Story = {
  render: () => (
    <div className="space-y-4 p-6">
      <h3 className="text-lg font-semibold">–°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª–µ–π</h3>
      
      <div className="space-y-2">
        <div className="flex items-center justify-between p-3 border rounded">
          <span>–ö–ü –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä</span>
          <LoadingSpinner size="sm" />
        </div>
        
        <div className="flex items-center justify-between p-3 border rounded">
          <span>–¢–ó –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä</span>
          <span className="text-green-600">‚úì –ì–æ—Ç–æ–≤</span>
        </div>
        
        <div className="flex items-center justify-between p-3 border rounded">
          <span>–û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤</span>
          <LoadingSpinner size="sm" />
        </div>
        
        <div className="flex items-center justify-between p-3 border rounded">
          <span>–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π</span>
          <span className="text-green-600">‚úì –ì–æ—Ç–æ–≤</span>
        </div>
      </div>
    </div>
  ),
  parameters: {
    layout: 'padded',
  },
};

// –¢–µ–º–Ω–∞—è —Ç–µ–º–∞
export const DarkTheme: Story = {
  args: {
    size: 'lg',
    text: '–ó–∞–≥—Ä—É–∑–∫–∞ –≤ —Ç–µ–º–Ω–æ–π —Ç–µ–º–µ...',
    className: 'text-white',
  },
  parameters: {
    backgrounds: { default: 'dark' },
  },
  decorators: [
    (Story: any) => (
      <div className="dark bg-gray-900 p-8 rounded-lg">
        <Story />
      </div>
    ),
  ],
};

// –ö–∞—Å—Ç–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏–Ω–Ω–µ—Ä—ã
export const CustomizedSpinners: Story = {
  render: () => (
    <div className="space-y-8 p-6">
      <h3 className="text-lg font-semibold mb-4">–ö–∞—Å—Ç–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏–Ω–Ω–µ—Ä—ã</h3>
      
      <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
        <div className="text-center">
          <LoadingSpinner size="md" className="text-blue-600" />
          <p className="text-sm mt-2">–°–∏–Ω–∏–π</p>
        </div>
        
        <div className="text-center">
          <LoadingSpinner size="md" className="text-green-600" />
          <p className="text-sm mt-2">–ó–µ–ª–µ–Ω—ã–π</p>
        </div>
        
        <div className="text-center">
          <LoadingSpinner size="md" className="text-purple-600" />
          <p className="text-sm mt-2">–§–∏–æ–ª–µ—Ç–æ–≤—ã–π</p>
        </div>
        
        <div className="text-center">
          <LoadingSpinner size="md" className="text-red-600" />
          <p className="text-sm mt-2">–ö—Ä–∞—Å–Ω—ã–π</p>
        </div>
      </div>
    </div>
  ),
  parameters: {
    layout: 'padded',
  },
};