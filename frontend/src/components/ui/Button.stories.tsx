import type { Meta, StoryObj } from '@storybook/react';
import { action } from '@storybook/addon-actions';
import { Button } from './Button';
import { Play, Download, Settings, Trash2, Plus, Eye } from 'lucide-react';

const meta: Meta<typeof Button> = {
  title: 'UI/Button',
  component: Button,
  parameters: {
    layout: 'centered',
    docs: {
      description: {
        component: `
# Button Component

–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è DevAssist Pro —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π.

## –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
- üé® –ú–Ω–æ–∂–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ (default, destructive, outline, secondary, ghost, link, social)
- üìè –†–∞–∑–ª–∏—á–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã (sm, default, lg, icon)
- üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
- üñºÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏–∫–æ–Ω–æ–∫ –∏–∑ Lucide React
- ‚ôø –ü–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ accessibility
- üåó –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
- üì± –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –º–æ–¥—É–ª—è—Ö DevAssist Pro
- **–ö–ü –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä**: –ö–Ω–æ–ø–∫–∏ –∞–Ω–∞–ª–∏–∑–∞, –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤, —ç–∫—Å–ø–æ—Ä—Ç–∞ –æ—Ç—á–µ—Ç–æ–≤
- **–¢–ó –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä**: –ö–Ω–æ–ø–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤
- **–û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤**: –ö–Ω–æ–ø–∫–∏ —Ä–∞—Å—á–µ—Ç–∞, —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
- **–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫**: –ö–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–π, –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
- **–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π**: –ö–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞, –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
        `,
      },
    },
  },
  argTypes: {
    variant: {
      control: { type: 'select' },
      options: ['default', 'destructive', 'outline', 'secondary', 'ghost', 'link', 'social'],
      description: '–°—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏',
    },
    size: {
      control: { type: 'select' },
      options: ['sm', 'default', 'lg', 'icon'],
      description: '–†–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏',
    },
    isLoading: {
      control: { type: 'boolean' },
      description: '–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏',
    },
    disabled: {
      control: { type: 'boolean' },
      description: '–û—Ç–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫—É',
    },
    fullWidth: {
      control: { type: 'boolean' },
      description: '–†–∞—Å—Ç—è–Ω—É—Ç—å –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É',
    },
    children: {
      control: { type: 'text' },
      description: '–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏',
    },
  },
  args: {
    onClick: action('clicked'),
  },
};

export default meta;
type Story = StoryObj<typeof meta>;

// –ë–∞–∑–æ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
export const Default: Story = {
  args: {
    children: '–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ö–ü',
  },
};

export const Destructive: Story = {
  args: {
    variant: 'destructive',
    children: '–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª',
  },
};

export const Outline: Story = {
  args: {
    variant: 'outline',
    children: '–û—Ç–º–µ–Ω–∏—Ç—å',
  },
};

export const Secondary: Story = {
  args: {
    variant: 'secondary',
    children: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–µ—Ä–Ω–æ–≤–∏–∫',
  },
};

export const Ghost: Story = {
  args: {
    variant: 'ghost',
    children: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
  },
};

export const Link: Story = {
  args: {
    variant: 'link',
    children: '–ü–æ–¥—Ä–æ–±–Ω–µ–µ',
  },
};

export const Social: Story = {
  args: {
    variant: 'social',
    children: '–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google',
  },
};

// –†–∞–∑–º–µ—Ä—ã
export const Small: Story = {
  args: {
    size: 'sm',
    children: '–ú–∞–ª–∞—è –∫–Ω–æ–ø–∫–∞',
  },
};

export const Large: Story = {
  args: {
    size: 'lg',
    children: '–ë–æ–ª—å—à–∞—è –∫–Ω–æ–ø–∫–∞',
  },
};

export const Icon: Story = {
  args: {
    size: 'icon',
    icon: Settings,
    children: '',
  },
};

// –° –∏–∫–æ–Ω–∫–∞–º–∏
export const WithIcon: Story = {
  args: {
    icon: Download,
    children: '–°–∫–∞—á–∞—Ç—å –æ—Ç—á–µ—Ç',
  },
};

export const PlayButton: Story = {
  args: {
    icon: Play,
    children: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑',
    variant: 'default',
  },
};

export const AddButton: Story = {
  args: {
    icon: Plus,
    children: '–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª',
    variant: 'outline',
  },
};

// –°–æ—Å—Ç–æ—è–Ω–∏—è
export const Loading: Story = {
  args: {
    isLoading: true,
    children: '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º...',
  },
};

export const Disabled: Story = {
  args: {
    disabled: true,
    children: '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ',
  },
};

export const FullWidth: Story = {
  args: {
    fullWidth: true,
    children: '–í–æ –≤—Å—é —à–∏—Ä–∏–Ω—É',
  },
  parameters: {
    layout: 'padded',
  },
};

// –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–æ–¥—É–ª—è—Ö DevAssist Pro
export const KPAnalyzerButtons: Story = {
  render: () => (
    <div className="space-y-4 p-6">
      <h3 className="text-lg font-semibold mb-4">–ö–ü –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä - –ö–Ω–æ–ø–∫–∏</h3>
      <div className="flex flex-wrap gap-2">
        <Button icon={Plus}>–ó–∞–≥—Ä—É–∑–∏—Ç—å –¢–ó</Button>
        <Button icon={Plus} variant="outline">–î–æ–±–∞–≤–∏—Ç—å –ö–ü</Button>
        <Button icon={Play}>–ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑</Button>
        <Button icon={Download} variant="secondary">–≠–∫—Å–ø–æ—Ä—Ç PDF</Button>
        <Button icon={Eye} variant="ghost">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</Button>
        <Button icon={Trash2} variant="destructive" size="sm">–£–¥–∞–ª–∏—Ç—å</Button>
      </div>
    </div>
  ),
  parameters: {
    layout: 'padded',
  },
};

export const TZGeneratorButtons: Story = {
  render: () => (
    <div className="space-y-4 p-6">
      <h3 className="text-lg font-semibold mb-4">–¢–ó –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä - –ö–Ω–æ–ø–∫–∏</h3>
      <div className="flex flex-wrap gap-2">
        <Button>–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¢–ó</Button>
        <Button variant="outline">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω</Button>
        <Button variant="secondary" icon={Download}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —à–∞–±–ª–æ–Ω</Button>
        <Button variant="ghost">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</Button>
        <Button variant="link">–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é</Button>
      </div>
    </div>
  ),
  parameters: {
    layout: 'padded',
  },
};

export const ProjectEvaluationButtons: Story = {
  render: () => (
    <div className="space-y-4 p-6">
      <h3 className="text-lg font-semibold mb-4">–û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ - –ö–Ω–æ–ø–∫–∏</h3>
      <div className="flex flex-wrap gap-2">
        <Button>–†–∞—Å—Å—á–∏—Ç–∞—Ç—å NPV</Button>
        <Button variant="outline">–ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤</Button>
        <Button variant="secondary">–°—Ä–∞–≤–Ω–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã</Button>
        <Button variant="ghost" icon={Settings}>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–∏</Button>
        <Button variant="link">–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è —Ä–∞—Å—á–µ—Ç–∞</Button>
      </div>
    </div>
  ),
  parameters: {
    layout: 'padded',
  },
};

// –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å
export const ResponsiveButtons: Story = {
  render: () => (
    <div className="space-y-4 p-6">
      <h3 className="text-lg font-semibold mb-4">–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏</h3>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2">
        <Button fullWidth>–ú–æ–±–∏–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞</Button>
        <Button fullWidth variant="outline">–ü–ª–∞–Ω—à–µ—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞</Button>
        <Button fullWidth variant="secondary">–î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –∫–Ω–æ–ø–∫–∞</Button>
      </div>
    </div>
  ),
  parameters: {
    layout: 'padded',
    viewport: {
      defaultViewport: 'mobile',
    },
  },
};

// –¢–µ–º–Ω–∞—è —Ç–µ–º–∞
export const DarkTheme: Story = {
  args: {
    children: '–ö–Ω–æ–ø–∫–∞ –≤ —Ç–µ–º–Ω–æ–π —Ç–µ–º–µ',
  },
  parameters: {
    backgrounds: { default: 'dark' },
    docs: {
      story: {
        inline: false,
        height: '100px',
      },
    },
  },
  decorators: [
    (Story: any) => (
      <div className="dark">
        <Story />
      </div>
    ),
  ],
};