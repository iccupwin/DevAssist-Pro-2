/**
 * Enhanced Mock API Service - –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ö–ü –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
 * –°–∏–º—É–ª–∏—Ä—É–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ backend API —Å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏
 */

import { AnalysisResult as OldAnalysisResult, ComplianceAnalysis, KPSummary, PreliminaryRecommendation } from './apiClient';
import { 
  KPSummaryData, 
  ComparisonAIResult as ComparisonResult, 
  RecommendationResult,
  KPAnalysisResult,
  KPAnalysisProgress as AnalysisProgress 
} from '../types/kpAnalyzer';

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const generateMockAnalysis = (kpName: string, companyName: string): OldAnalysisResult => {
  const complianceScore = Math.floor(Math.random() * 40) + 60; // 60-100%
  
  const mockCompliance: ComplianceAnalysis = {
    compliance_score: complianceScore,
    missing_requirements: [
      '–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
      '–°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
      '–ü–ª–∞–Ω —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
    ].slice(0, Math.floor(Math.random() * 3)),
    additional_features: [
      '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—á–µ—Ç—ã',
      '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏',
      '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π'
    ].slice(0, Math.floor(Math.random() * 3)),
    sections: [
      { name: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ', compliance: complianceScore + Math.random() * 10 - 5, details: '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –∑–∞–º–µ—á–∞–Ω–∏—è–º–∏' },
      { name: '–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å', compliance: complianceScore + Math.random() * 10 - 5, details: '–ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–∫—Ä—ã–≤–∞–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è' },
      { name: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', compliance: complianceScore + Math.random() * 10 - 5, details: '–ë–∞–∑–æ–≤—ã–µ –º–µ—Ä—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã' },
    ]
  };

  const mockRecommendation: PreliminaryRecommendation = {
    strength: [
      '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ',
      '–û–ø—ã—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤',
      '–î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã'
    ].slice(0, Math.floor(Math.random() * 3) + 1),
    weakness: [
      '–í—ã—Å–æ–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏',
      '–î–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
      '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
    ].slice(0, Math.floor(Math.random() * 2)),
    summary: `${companyName} –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç ${complianceScore > 80 ? '–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ' : '–ø—Ä–∏–µ–º–ª–µ–º–æ–µ'} —Ä–µ—à–µ–Ω–∏–µ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ–º ${complianceScore}% —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –¢–ó.`
  };

  return {
    tz_name: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –≤–µ–±-–ø–æ—Ä—Ç–∞–ª–∞',
    kp_name: kpName,
    company_name: companyName,
    tech_stack: 'React, Node.js, PostgreSQL, Docker',
    pricing: `${Math.floor(Math.random() * 500 + 800)} —Ç—ã—Å. —Ä—É–±.`,
    timeline: `${Math.floor(Math.random() * 3 + 2)} –º–µ—Å—è—Ü–∞`,
    comparison_result: mockCompliance,
    preliminary_recommendation: mockRecommendation,
    ratings: {
      technical: Math.floor(Math.random() * 3) + 3,
      price: Math.floor(Math.random() * 3) + 3,
      timeline: Math.floor(Math.random() * 3) + 3,
      experience: Math.floor(Math.random() * 3) + 3,
    },
    comments: {
      technical: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Ä–µ—à–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º',
      price: '–¶–µ–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ä–µ–¥–Ω–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ —Ä—ã–Ω–∫–∞',
      timeline: '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Å—Ä–æ–∫–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏',
      experience: '–ö–æ–º–∞–Ω–¥–∞ –∏–º–µ–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –æ–ø—ã—Ç',
    }
  };
};

const mockCompanies = [
  '–û–û–û "–¢–µ—Ö–Ω–æ–°–æ—Ñ—Ç"',
  '–û–û–û "–î–∏–¥–∂–∏—Ç–∞–ª–ü—Ä–æ"',
  '–û–û–û "–ò–Ω—Ñ–æ–°–∏—Å—Ç–µ–º—ã"',
  '–û–û–û "–ö–æ–¥–õ–∞–±"',
  '–û–û–û "–í–µ–±–°—Ç—É–¥–∏—è"',
];

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–≥–æ API
const MOCK_DELAY_MIN = 1500; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
const MOCK_DELAY_MAX = 3000; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞

// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏ –∑–∞–¥–µ—Ä–∂–∫–∏ API
const simulateApiDelay = (min = MOCK_DELAY_MIN, max = MOCK_DELAY_MAX): Promise<void> => {
  const delay = Math.random() * (max - min) + min;
  return new Promise(resolve => setTimeout(resolve, delay));
};

// Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
const MOCK_TECH_STACKS = [
  'React, Node.js, PostgreSQL, Docker',
  'Vue.js, Python, MongoDB, Kubernetes',
  'Angular, .NET Core, SQL Server, Azure',
  'React Native, Spring Boot, MySQL, AWS',
  'Flutter, Django, Redis, GCP',
  'Next.js, FastAPI, PostgreSQL, Docker Swarm',
  'Laravel, Vue.js, MySQL, DigitalOcean',
  'Symfony, React, PostgreSQL, Heroku'
];

// Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
const generateMockPricing = (): string => {
  const basePrice = Math.floor(Math.random() * 8000000) + 2000000; // –û—Ç 2 –¥–æ 10 –º–ª–Ω
  const format = Math.random() > 0.5 ? '—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞' : '–ø–æ—á–∞—Å–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞';
  
  if (format === '—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞') {
    return `${basePrice.toLocaleString('ru-RU')} —Ä—É–±. —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞`;
  } else {
    const hourlyRate = Math.floor(Math.random() * 3000) + 2000; // –û—Ç 2000 –¥–æ 5000 —Ä—É–±/—á–∞—Å
    const hours = Math.floor(basePrice / hourlyRate);
    return `${hourlyRate.toLocaleString('ru-RU')} —Ä—É–±/—á–∞—Å (~${hours} —á–∞—Å–æ–≤)`;
  }
};

// Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ä–æ–∫–æ–≤
const MOCK_TIMELINES = [
  '3 –º–µ—Å—è—Ü–∞',
  '4-5 –º–µ—Å—è—Ü–µ–≤',
  '6 –º–µ—Å—è—Ü–µ–≤',
  '8-10 –º–µ—Å—è—Ü–µ–≤',
  '12 –º–µ—Å—è—Ü–µ–≤',
  '18 –º–µ—Å—è—Ü–µ–≤',
  '2-3 —ç—Ç–∞–ø–∞ –ø–æ 4 –º–µ—Å—è—Ü–∞',
  '5 —Å–ø—Ä–∏–Ω—Ç–æ–≤ –ø–æ 6 –Ω–µ–¥–µ–ª—å'
];

// Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø—ã—Ç–∞
const generateMockExperience = (): string => {
  const projects = Math.floor(Math.random() * 50) + 10;
  const years = Math.floor(Math.random() * 15) + 3;
  const teamSize = Math.floor(Math.random() * 20) + 5;
  
  return `${projects} –ø—Ä–æ–µ–∫—Ç–æ–≤ –∑–∞ ${years} –ª–µ—Ç —Ä–∞–±–æ—Ç—ã, –∫–æ–º–∞–Ω–¥–∞ ${teamSize} —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤`;
};

export const mockApiService = {
  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
  async uploadFiles(files: {
    tzFile?: File;
    kpFiles?: File[];
    additionalFiles?: File[];
  }): Promise<{
    success: boolean;
    data: {
      tz_file: { filePath: string; originalName: string } | null;
      kp_files: { filePath: string; originalName: string }[];
      additional_files: { filePath: string; originalName: string }[];
    };
    error?: string;
  }> {
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    return {
      success: true,
      data: {
        tz_file: files.tzFile ? {
          filePath: `/uploads/tz/${files.tzFile.name}`,
          originalName: files.tzFile.name
        } : null,
        kp_files: files.kpFiles?.map(file => ({
          filePath: `/uploads/kp/${file.name}`,
          originalName: file.name
        })) || [],
        additional_files: files.additionalFiles?.map(file => ({
          filePath: `/uploads/additional/${file.name}`,
          originalName: file.name
        })) || []
      }
    };
  },

  // –ê–Ω–∞–ª–∏–∑ –æ–¥–Ω–æ–≥–æ –ö–ü
  async analyzeKP(
    tzFile: string,
    kpFile: string,
    additionalFiles?: string[],
    modelId?: string
  ): Promise<{ success: boolean; data: OldAnalysisResult; error?: string }> {
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏ API
    await new Promise(resolve => setTimeout(resolve, 2000 + Math.random() * 3000));
    
    const kpName = `–ö–ü_${Math.floor(Math.random() * 100)}.pdf`;
    const companyName = mockCompanies[Math.floor(Math.random() * mockCompanies.length)];
    
    return {
      success: true,
      data: generateMockAnalysis(kpName, companyName)
    };
  },

  // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –ö–ü
  async compareAllKP(
    analysisResults: OldAnalysisResult[],
    modelId?: string
  ): Promise<{ success: boolean; data: string; error?: string }> {
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    const sorted = [...analysisResults].sort((a, b) => 
      b.comparison_result.compliance_score - a.comparison_result.compliance_score
    );

    const comparisonText = `
## üìä –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π

### üèÜ –†–µ–π—Ç–∏–Ω–≥ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:

${sorted.map((result, index) => `
**${index + 1}. ${result.company_name}**
- –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¢–ó: ${result.comparison_result.compliance_score}%
- –°—Ç–æ–∏–º–æ—Å—Ç—å: ${result.pricing}
- –°—Ä–æ–∫–∏: ${result.timeline}
- –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: ${result.tech_stack}

*–ö—Ä–∞—Ç–∫–∞—è –æ—Ü–µ–Ω–∫–∞:* ${result.preliminary_recommendation.summary}
`).join('\n')}

### üìã –û–±—â–∏–µ –≤—ã–≤–æ–¥—ã:

- –õ—É—á—à–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: **${sorted[0].company_name}** —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ–º ${sorted[0].comparison_result.compliance_score}%
- –°—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${Math.round(sorted.reduce((sum, r) => sum + parseInt(r.pricing.replace(/\D/g, '')), 0) / sorted.length)} —Ç—ã—Å. —Ä—É–±.
- –°—Ä–µ–¥–Ω–∏–µ —Å—Ä–æ–∫–∏: ${Math.round(sorted.reduce((sum, r) => sum + parseInt(r.timeline.replace(/\D/g, '')), 0) / sorted.length)} –º–µ—Å—è—Ü–µ–≤

### üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:

1. **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞**: –í—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ç—Ä–µ–±—É—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∏
2. **–ë—é–¥–∂–µ—Ç**: –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –±—é–¥–∂–µ—Ç–∞ —Å –ª–∏–¥–∏—Ä—É—é—â–∏–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏
3. **–°—Ä–æ–∫–∏**: –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞–º–æ–∫
    `;

    return {
      success: true,
      data: comparisonText
    };
  },

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
  async generateReport(
    analysisResults: OldAnalysisResult[],
    modelId?: string
  ): Promise<{ success: boolean; data: string; error?: string }> {
    await new Promise(resolve => setTimeout(resolve, 4000));

    const bestResult = analysisResults.reduce((best, current) => 
      current.comparison_result.compliance_score > best.comparison_result.compliance_score ? current : best
    );

    const reportText = `
# üìã –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π

## üéØ –¶–µ–ª—å –∞–Ω–∞–ª–∏–∑–∞
–í—ã–±–æ—Ä –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±-–ø–æ—Ä—Ç–∞–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –∑–∞–¥–∞–Ω–∏—é.

## üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ **${analysisResults.length}** –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –æ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π.

## üèÜ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ —Ä–µ—à–µ–Ω–∏–µ

### ${bestResult.company_name}
- **–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¢–ó:** ${bestResult.comparison_result.compliance_score}%
- **–°—Ç–æ–∏–º–æ—Å—Ç—å:** ${bestResult.pricing}
- **–°—Ä–æ–∫–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:** ${bestResult.timeline}
- **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫:** ${bestResult.tech_stack}

### –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:
${bestResult.preliminary_recommendation.strength.map(s => `- ${s}`).join('\n')}

### –†–∏—Å–∫–∏:
${bestResult.preliminary_recommendation.weakness.map(w => `- ${w}`).join('\n')}

## üìà –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑

### –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏:
1. **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ** (40%)
2. **–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏** (25%)
3. **–°—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è** (20%)
4. **–û–ø—ã—Ç –∫–æ–º–∞–Ω–¥—ã** (15%)

### –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∫–æ–º–ø–∞–Ω–∏—è–º:
${analysisResults.map((result, index) => `
#### ${index + 1}. ${result.company_name}
- –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: ${result.comparison_result.compliance_score}%
- –°—Ç–æ–∏–º–æ—Å—Ç—å: ${result.pricing}
- –°—Ä–æ–∫: ${result.timeline}
- –ó–∞–º–µ—á–∞–Ω–∏—è: ${result.preliminary_recommendation.summary}
`).join('\n')}

## üéØ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

1. **–í—ã–±–æ—Ä –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:** –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è ${bestResult.company_name} –∫–∞–∫ –Ω–∞–∏–±–æ–ª–µ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ø—Ä–æ–µ–∫—Ç–∞.

2. **–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:**
   - –ü—Ä–æ–≤–µ—Å—Ç–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∏–Ω—Ç–µ—Ä–≤—å—é —Å –∫–æ–º–∞–Ω–¥–æ–π
   - –£—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–ø–æ—Ä–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤
   - –°–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å –ø–ª–∞–Ω –ø–æ—ç—Ç–∞–ø–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
   - –ó–∞–∫–ª—é—á–∏—Ç—å –¥–æ–≥–æ–≤–æ—Ä —Å –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏

3. **–ö–æ–Ω—Ç—Ä–æ–ª—å —Ä–∏—Å–∫–æ–≤:**
   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ —Ç–æ—á–∫–∏
   - –ü—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ—Ç—å —à—Ç—Ä–∞—Ñ–Ω—ã–µ —Å–∞–Ω–∫—Ü–∏–∏ –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤
   - –í–∫–ª—é—á–∏—Ç—å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –∫–æ–¥–∞

---
*–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ AI-–∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤*
    `;

    return {
      success: true,
      data: reportText
    };
  },

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
  async checkHealth(): Promise<{ status: string; timestamp: string }> {
    await new Promise(resolve => setTimeout(resolve, 500));
    return {
      status: 'ok',
      timestamp: new Date().toISOString()
    };
  },

  // ============== –ù–û–í–´–ï –ú–ï–¢–û–î–´ –î–õ–Ø –ö–ü –ê–ù–ê–õ–ò–ó–ê–¢–û–†–ê ==============

  /**
   * –°–∏–º—É–ª—è—Ü–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ö–ü
   */
  async extractKPSummaryData(kpText: string, fileName: string): Promise<KPSummaryData> {
    await simulateApiDelay();
    
    const companyIndex = Math.floor(Math.random() * mockCompanies.length);
    const techIndex = Math.floor(Math.random() * MOCK_TECH_STACKS.length);
    const timelineIndex = Math.floor(Math.random() * MOCK_TIMELINES.length);
    
    return {
      company_name: mockCompanies[companyIndex],
      tech_stack: MOCK_TECH_STACKS[techIndex],
      pricing: generateMockPricing(),
      timeline: MOCK_TIMELINES[timelineIndex],
      experience: generateMockExperience(),
      approach: `–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏–π. ${fileName.includes('agile') ? 'Agile/Scrum –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è' : 'Waterfall –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è'} —Å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–º–∏ —Ä–µ—Ç—Ä–æ—Å–ø–µ–∫—Ç–∏–≤–∞–º–∏.`,
      team_structure: `–ö–æ–º–∞–Ω–¥–∞ –≤–∫–ª—é—á–∞–µ—Ç: —Ç–∏–º–ª–∏–¥, ${Math.floor(Math.random() * 3) + 2} frontend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞, ${Math.floor(Math.random() * 3) + 2} backend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞, DevOps –∏–Ω–∂–µ–Ω–µ—Ä, QA —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫, UI/UX –¥–∏–∑–∞–π–Ω–µ—Ä.`,
      guarantees: `–ì–∞—Ä–∞–Ω—Ç–∏—è ${Math.floor(Math.random() * 12) + 12} –º–µ—Å—è—Ü–µ–≤ –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –ü–û, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7, SLA 99.5% –∞–ø—Ç–∞–π–º–∞.`,
      risks: fileName.includes('—Ä–∏—Å–∫') || Math.random() > 0.7 ? 
        '–í—ã—è–≤–ª–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∏—Å–∫–∏ –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞–≥—Ä—É–∑–∫–∏.' :
        '–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∏—Å–∫–∏ –º–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –±–ª–∞–≥–æ–¥–∞—Ä—è –æ–ø—ã—Ç—É –∫–æ–º–∞–Ω–¥—ã –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º.',
      additional_services: Math.random() > 0.5 ? 
        '–í–∫–ª—é—á–µ–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏: —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è, –æ–±—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –º–∏–≥—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö.' :
        '–ë–∞–∑–æ–≤–∞—è –ø–æ—Å—Ç–∞–≤–∫–∞ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥.'
    };
  },

  /**
   * –°–∏–º—É–ª—è—Ü–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¢–ó –∏ –ö–ü
   */
  async compareTzKp(tzText: string, kpText: string, fileName: string): Promise<ComparisonResult> {
    await simulateApiDelay(2000, 4000); // –ë–æ–ª–µ–µ –¥–ª–∏—Ç–µ–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –æ—Ü–µ–Ω–∫–∏
    const compliance = Math.floor(Math.random() * 40) + 60; // 60-100%
    const technical = Math.floor(Math.random() * 35) + 65; // 65-100%
    const commercial = Math.floor(Math.random() * 30) + 70; // 70-100%
    const experience = Math.floor(Math.random() * 25) + 75; // 75-100%
    const timeline = Math.floor(Math.random() * 20) + 80; // 80-100%
    
    // –û–±—â–∏–π –±–∞–ª–ª –∫–∞–∫ weighted average
    const overall_score = Math.round(
      compliance * 0.3 + 
      technical * 0.25 + 
      commercial * 0.2 + 
      experience * 0.15 + 
      timeline * 0.1
    );

    const strengths = [
      '–ü–æ–ª–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º',
      '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫',
      '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø–æ—Å–æ–±–Ω–∞—è —Ü–µ–Ω–∞',
      '–†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Å—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è',
      '–û–ø—ã—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤'
    ].slice(0, Math.floor(Math.random() * 3) + 2);

    const weaknesses = [
      '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–æ –æ–ø–∏—Å–∞–Ω–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º—ã',
      '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–µ—Ç–∞–ª–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é',
      '–ù–µ —É–∫–∞–∑–∞–Ω—ã –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
      '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'
    ].slice(0, Math.floor(Math.random() * 2) + 1);

    const recommendations = [
      '–ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é',
      '–£—Ç–æ—á–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏',
      '–û–±—Å—É–¥–∏—Ç—å –ø–ª–∞–Ω –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö',
      '–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'
    ].slice(0, Math.floor(Math.random() * 2) + 2);

    return {
      overall_score,
      compliance_percentage: compliance,
      technical_score: technical,
      commercial_score: commercial,
      experience_score: experience,
      timeline_score: timeline,
      strengths,
      weaknesses,
      recommendations,
      detailed_analysis: `–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç ${overall_score > 80 ? '–≤—ã—Å–æ–∫–∏–π' : overall_score > 60 ? '—Å—Ä–µ–¥–Ω–∏–π' : '–Ω–∏–∑–∫–∏–π'} —É—Ä–æ–≤–µ–Ω—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¢–ó. ${fileName.includes('–ª—É—á—à') ? '–û—Å–æ–±–µ–Ω–Ω–æ —Å–∏–ª—å–Ω—ã –ø–æ–∑–∏—Ü–∏–∏ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º —Ä–µ—à–µ–Ω–∏–∏.' : '–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ —Ä—è–¥–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –∞—Å–ø–µ–∫—Ç–æ–≤.'}`
    };
  },

  /**
   * –°–∏–º—É–ª—è—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
   */
  async generateKPRecommendation(
    analysisResults: KPAnalysisResult[], 
    tzText: string
  ): Promise<RecommendationResult> {
    await simulateApiDelay(3000, 5000); // –°–∞–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –æ–±—â–µ–º—É –±–∞–ª–ª—É
    const sortedResults = [...analysisResults].sort((a, b) => b.score - a.score);
    const topResult = sortedResults[0];
    const worstResult = sortedResults[sortedResults.length - 1];
    
    const executive_summary = `
–ü—Ä–æ–≤–µ–¥–µ–Ω –∞–Ω–∞–ª–∏–∑ ${analysisResults.length} –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º—É –∑–∞–¥–∞–Ω–∏—é. 
–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∫–∞–∑–∞–ª–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ "${topResult.kpFileName}" —Å –æ–±—â–∏–º –±–∞–ª–ª–æ–º ${topResult.score}%.
–•—É–¥—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É "${worstResult.kpFileName}" - ${worstResult.score}%.
–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –ø–æ –≤—Å–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º: ${Math.round(analysisResults.reduce((sum, r) => sum + r.score, 0) / analysisResults.length)}%.
    `.trim();

    const detailed_comparison = analysisResults.map(result => `
**${result.kpFileName}** (${result.score}%)
- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: ${result.analysis.technical}%
- –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è: ${result.analysis.commercial}%
- –û–ø—ã—Ç –∫–æ–º–∞–Ω–¥—ã: ${result.analysis.experience}%
- –°—Ä–æ–∫–∏: ${result.analysis.timeline || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}%
    `).join('\n');

    const risk_analysis = `
–û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∏—Å–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞:
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–∏—Å–∫–∏: ${Math.random() > 0.5 ? '–°—Ä–µ–¥–Ω–∏–µ' : '–ù–∏–∑–∫–∏–µ'}
- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∏—Å–∫–∏: ${Math.random() > 0.5 ? '–ù–∏–∑–∫–∏–µ' : '–°—Ä–µ–¥–Ω–∏–µ'}
- –ë—é–¥–∂–µ—Ç–Ω—ã–µ —Ä–∏—Å–∫–∏: ${topResult.score > 80 ? '–ù–∏–∑–∫–∏–µ' : '–°—Ä–µ–¥–Ω–∏–µ'}
- –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∏—Å–∫–∏: ${analysisResults.some(r => r.analysis.timeline && r.analysis.timeline > 80) ? '–ù–∏–∑–∫–∏–µ' : '–°—Ä–µ–¥–Ω–∏–µ'}
    `;

    const final_recommendation = topResult.score > 85 
      ? `–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ "${topResult.kpFileName}" –∫–∞–∫ –Ω–∞–∏–±–æ–ª–µ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.`
      : topResult.score > 70
      ? `–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ "${topResult.kpFileName}" —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å —É—Å–ª–æ–≤–∏–µ–º –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –≤—ã—è–≤–ª–µ–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–æ–≤.`
      : `–ù–∏ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–µ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.`;

    return {
      executive_summary,
      detailed_comparison,
      risk_analysis,
      final_recommendation,
      recommended_vendor: topResult.kpFileName,
      confidence_level: topResult.score > 85 ? '–í—ã—Å–æ–∫–∏–π' : topResult.score > 70 ? '–°—Ä–µ–¥–Ω–∏–π' : '–ù–∏–∑–∫–∏–π'
    };
  },

  /**
   * –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ö–ü —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
   */
  async analyzeKPDocument(
    tzText: string,
    kpText: string,
    fileName: string,
    onProgress?: (progress: number) => void
  ): Promise<KPAnalysisResult> {
    // –®–∞–≥ 1: –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (30%)
    onProgress?.(10);
    await simulateApiDelay(1000, 2000);
    onProgress?.(30);
    
    const summaryData = await this.extractKPSummaryData(kpText, fileName);
    
    // –®–∞–≥ 2: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¢–ó (70%)
    onProgress?.(50);
    await simulateApiDelay(1500, 2500);
    onProgress?.(70);
    
    const comparisonResult = await this.compareTzKp(tzText, kpText, fileName);
    
    // –®–∞–≥ 3: –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è (100%)
    onProgress?.(90);
    await simulateApiDelay(500, 1000);
    onProgress?.(100);

    return {
      id: `analysis_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      kpFileName: fileName,
      score: comparisonResult.overall_score,
      extractedData: summaryData,
      analysis: {
        compliance: comparisonResult.compliance_percentage,
        technical: comparisonResult.technical_score,
        commercial: comparisonResult.commercial_score,
        experience: comparisonResult.experience_score,
        timeline: comparisonResult.timeline_score,
        strengths: comparisonResult.strengths,
        weaknesses: comparisonResult.weaknesses,
        recommendations: comparisonResult.recommendations,
        detailedAnalysis: comparisonResult.detailed_analysis
      },
      timestamp: new Date(),
      status: 'completed' as const
    };
  },

  /**
   * –°–∏–º—É–ª—è—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ö–ü
   */
  async analyzeAllKPDocuments(
    tzText: string,
    kpFiles: { text: string; fileName: string }[],
    onProgress?: (progress: AnalysisProgress) => void
  ): Promise<KPAnalysisResult[]> {
    const results: KPAnalysisResult[] = [];
    const totalKPs = kpFiles.length;

    for (let i = 0; i < kpFiles.length; i++) {
      const kpFile = kpFiles[i];
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
      onProgress?.({
        currentKP: kpFile.fileName,
        progress: Math.round((i / totalKPs) * 100),
        totalKPs,
        completedKPs: i,
        isAnalyzing: true
      });

      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –ö–ü —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
      const result = await this.analyzeKPDocument(
        tzText,
        kpFile.text,
        kpFile.fileName,
        (kpProgress: number) => {
          const overallProgress = Math.round(((i + kpProgress / 100) / totalKPs) * 100);
          onProgress?.({
            currentKP: kpFile.fileName,
            progress: overallProgress,
            totalKPs,
            completedKPs: i,
            isAnalyzing: true
          });
        }
      );

      results.push(result);
    }

    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞
    onProgress?.({
      currentKP: '',
      progress: 100,
      totalKPs,
      completedKPs: totalKPs,
      isAnalyzing: false
    });

    return results;
  },

  /**
   * –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
   */
  async extractTextFromFile(file: File): Promise<string> {
    await simulateApiDelay(500, 1500);
    
    const fileName = file.name.toLowerCase();
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º mock –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    if (fileName.includes('—Ç–∑') || fileName.includes('—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ') || fileName.includes('–∑–∞–¥–∞–Ω–∏–µ')) {
      return `
–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

1. –û–ë–©–ò–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.

2. –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø
- –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
- –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å
- API –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏

3. –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø
- Frontend: React.js –∏–ª–∏ Vue.js
- Backend: Node.js, Python (Django/FastAPI) –∏–ª–∏ .NET Core
- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL –∏–ª–∏ MySQL
- Deployment: Docker, Kubernetes
- –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: HTTPS, JWT —Ç–æ–∫–µ–Ω—ã, –∑–∞—â–∏—Ç–∞ –æ—Ç CSRF/XSS

4. –¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò
- –í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –±–æ–ª–µ–µ 3 —Å–µ–∫—É–Ω–¥
- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 1000+ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
- 99.5% uptime

5. –ë–Æ–î–ñ–ï–¢ –ò –°–†–û–ö–ò
–ë—é–¥–∂–µ—Ç: –¥–æ 10 000 000 —Ä—É–±–ª–µ–π
–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: 6-8 –º–µ—Å—è—Ü–µ–≤
      `.trim();
    }
    
    if (fileName.includes('–∫–ø') || fileName.includes('–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ') || fileName.includes('–∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ')) {
      const companyName = mockCompanies[Math.floor(Math.random() * mockCompanies.length)];
      return `
–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç ${companyName}

–û–ü–ò–°–ê–ù–ò–ï –ö–û–ú–ü–ê–ù–ò–ò
${companyName} - –≤–µ–¥—É—â–∞—è IT-–∫–æ–º–ø–∞–Ω–∏—è —Å –æ–ø—ã—Ç–æ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–æ–ª–µ–µ 50 –ø—Ä–æ–µ–∫—Ç–æ–≤.
–ö–æ–º–∞–Ω–¥–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –æ–ø—ã—Ç–Ω—ã—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏ –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤.

–ü–†–ï–î–õ–ê–ì–ê–ï–ú–û–ï –†–ï–®–ï–ù–ò–ï
–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º:
- Frontend: ${MOCK_TECH_STACKS[Math.floor(Math.random() * MOCK_TECH_STACKS.length)]}
- –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–∞—è
- –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ: Docker + Kubernetes

–ö–û–ú–ú–ï–†–ß–ï–°–ö–ò–ï –£–°–õ–û–í–ò–Ø
–°—Ç–æ–∏–º–æ—Å—Ç—å: ${generateMockPricing()}
–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${MOCK_TIMELINES[Math.floor(Math.random() * MOCK_TIMELINES.length)]}

–ì–ê–†–ê–ù–¢–ò–ò
- –ì–∞—Ä–∞–Ω—Ç–∏—è 12 –º–µ—Å—è—Ü–µ–≤
- –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7
- –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤

–û–ü–´–¢ –ö–û–ú–ê–ù–î–´
${generateMockExperience()}
      `.trim();
    }

    // –î–ª—è –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤ - –æ–±—â–∏–π —Ç–µ–∫—Å—Ç
    return `–ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ —Ñ–∞–π–ª–∞: ${file.name}\n\n–≠—Ç–æ mock —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã. –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞.`;
  }
};