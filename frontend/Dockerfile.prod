# Production Dockerfile for DevAssist Pro Frontend
# Multi-stage build for optimized React production bundle

# Stage 1: Build React application
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files for dependency installation
COPY package*.json ./

# Install all dependencies (including devDependencies needed for build)
# Use npm install instead of npm ci for more flexibility with package versions
RUN npm install --silent --no-optional

# Copy source code
COPY . .

# Set production environment variables
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
ENV REACT_APP_API_URL=http://46.149.71.162/api
ENV REACT_APP_WS_URL=ws://46.149.71.162/ws

# Build React application for production
RUN npm run build

# Stage 2: Production server with Nginx
FROM nginx:1.25-alpine AS production

# Copy custom nginx configuration
COPY nginx.frontend.conf /etc/nginx/conf.d/default.conf

# Copy built React app from builder stage
COPY --from=builder /app/build /usr/share/nginx/html

# Create nginx user and set permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]