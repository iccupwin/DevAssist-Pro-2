// Comprehensive test for activity service
// Run this in the browser console after starting the app

// Create test data that matches the ComparisonResult structure
const testComparisonData = [
  {
    id: "comparison_1735123456789",
    results: [
      {
        id: "result_1",
        fileName: "proposal_tech_company_a.pdf",
        companyName: "–¢–µ—Ö–°–æ—Ñ—Ç –û–û–û",
        complianceScore: 85,
        overallRating: 4.2,
        strengths: ["–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –∫—Ä—É–ø–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏", "–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∞—è —Ü–µ–Ω–∞"],
        weaknesses: ["–°–∂–∞—Ç—ã–µ —Å—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"],
        detailedAnalysis: "–•–æ—Ä–æ—à–µ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¢–ó",
        analyzedAt: "2024-12-25T10:30:00Z",
        model: "claude-3-5-sonnet-20241022"
      },
      {
        id: "result_2",
        fileName: "proposal_dev_company_b.pdf", 
        companyName: "–ò–Ω–Ω–æ–î–µ–≤ –°–∏—Å—Ç–µ–º—ã",
        complianceScore: 92,
        overallRating: 4.6,
        strengths: ["–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ä–µ—à–µ–Ω–∏–π", "–°–æ–±–ª—é–¥–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤"],
        weaknesses: ["–í—ã—Å–æ–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å"],
        detailedAnalysis: "–û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤—Å–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º",
        analyzedAt: "2024-12-25T10:31:00Z",
        model: "claude-3-5-sonnet-20241022"
      }
    ],
    ranking: [
      {
        kpId: "result_2",
        rank: 1,
        totalScore: 92,
        summary: "–õ—É—á—à–∏–π –≤—ã–±–æ—Ä –ø–æ –∫–∞—á–µ—Å—Ç–≤—É –∏ —Å—Ä–æ–∫–∞–º"
      },
      {
        kpId: "result_1",
        rank: 2,
        totalScore: 85,
        summary: "–•–æ—Ä–æ—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ü–µ–Ω–∞-–∫–∞—á–µ—Å—Ç–≤–æ"
      }
    ],
    summary: "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ 2 –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –≤–µ–±-–ø–æ—Ä—Ç–∞–ª–∞",
    recommendations: [
      "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –ò–Ω–Ω–æ–î–µ–≤ –°–∏—Å—Ç–µ–º—ã",
      "–†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–Ω–∏–∂–µ–Ω–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏"
    ],
    riskAssessment: "–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ò–Ω–Ω–æ–î–µ–≤ –°–∏—Å—Ç–µ–º—ã",
    bestChoice: "–ò–Ω–Ω–æ–î–µ–≤ –°–∏—Å—Ç–µ–º—ã",
    comparisonMatrix: [
      {
        criterion: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ",
        scores: { "result_1": 85, "result_2": 95 }
      },
      {
        criterion: "–°—Ç–æ–∏–º–æ—Å—Ç—å",
        scores: { "result_1": 90, "result_2": 75 }
      }
    ],
    analyzedAt: "2024-12-25T10:32:00Z",
    model: "claude-3-5-sonnet-20241022",
    recommendation: {
      winner: "–ò–Ω–Ω–æ–î–µ–≤ –°–∏—Å—Ç–µ–º—ã",
      reasoning: "–õ—É—á—à–µ–µ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è —Å—Ä–æ–∫–æ–≤, –≤—ã—Å–æ–∫–æ–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ",
      alternatives: ["–¢–µ—Ö–°–æ—Ñ—Ç –û–û–û"]
    }
  },
  {
    id: "comparison_1735120000000",
    results: [
      {
        id: "result_3",
        fileName: "proposal_mobile_dev.pdf",
        companyName: "–ú–æ–±–∏–¢–µ—Ö –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
        complianceScore: 78,
        overallRating: 3.9,
        strengths: ["–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö"],
        weaknesses: ["–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –æ–ø—ã—Ç —Å –≤–µ–±-—Ä–µ—à–µ–Ω–∏—è–º–∏"],
        detailedAnalysis: "–ß–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º",
        analyzedAt: "2024-12-25T09:15:00Z",
        model: "gpt-4o"
      }
    ],
    ranking: [
      {
        kpId: "result_3",
        rank: 1,
        totalScore: 78,
        summary: "–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"
      }
    ],
    summary: "–ê–Ω–∞–ª–∏–∑ 1 –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
    recommendations: ["–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞"],
    riskAssessment: "–°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫ –∏–∑-–∑–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∞ –æ–ø—ã—Ç–∞",
    bestChoice: "–ú–æ–±–∏–¢–µ—Ö –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
    comparisonMatrix: [],
    analyzedAt: "2024-12-25T09:16:00Z",
    model: "gpt-4o",
    recommendation: {
      winner: "–ú–æ–±–∏–¢–µ—Ö –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
      reasoning: "–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏",
      alternatives: []
    }
  }
];

// Clear existing data and save test data
localStorage.removeItem('kp_analyzer_history');
localStorage.setItem('kp_analyzer_history', JSON.stringify(testComparisonData));

console.log('‚úÖ Test data saved to localStorage');
console.log('üìä Data structure:', testComparisonData);

// Test parsing manually
try {
  const historyData = localStorage.getItem('kp_analyzer_history');
  if (historyData) {
    const history = JSON.parse(historyData);
    console.log('üìã Parsed history:', history);
    
    // Test the activity service parsing logic
    const activities = history.map((item, index) => {
      const analysisId = item.id || `analysis_${index + 1}`;
      const kpResults = item.results || [];
      const ranking = item.ranking || [];
      
      let avgScore = 0;
      if (kpResults.length > 0) {
        avgScore = kpResults.reduce((acc, r) => acc + (r.complianceScore || r.overallRating || 0), 0) / kpResults.length;
      } else if (ranking.length > 0) {
        avgScore = ranking.reduce((acc, r) => acc + (r.totalScore || 0), 0) / ranking.length;
      }
      
      const documentsCount = kpResults.length || ranking.length;
      const createdAt = item.analyzedAt || item.createdAt || new Date().toISOString();
      
      return {
        id: analysisId,
        title: '–ê–Ω–∞–ª–∏–∑ –ö–ü –∑–∞–≤–µ—Ä—à—ë–Ω',
        description: `–ê–Ω–∞–ª–∏–∑ ${documentsCount} –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º ${avgScore.toFixed(1)}%`,
        created_at: createdAt,
        model_used: item.model || 'unknown',
        best_choice: item.bestChoice || item.recommendation?.winner || 'N/A'
      };
    });
    
    console.log('üéØ Generated activities:', activities);
  }
} catch (error) {
  console.error('‚ùå Error testing parsing:', error);
}

console.log('üîÑ Now refresh the page to see the activity feed update');