#!/bin/bash

# –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å ADMIN_PASSWORD

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å ADMIN_PASSWORD..."

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å backend
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend..."
docker compose -f docker-compose.backend.yml down

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—Å—Ç—å –ª–∏ .env.production
if [ ! -f ".env.production" ]; then
    echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env.production..."
    cp .env.production.example .env.production
fi

# –î–æ–±–∞–≤–∏—Ç—å ADMIN_PASSWORD –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if ! grep -q "ADMIN_PASSWORD=" .env.production; then
    echo "üîë –î–æ–±–∞–≤–ª–µ–Ω–∏–µ ADMIN_PASSWORD..."
    ADMIN_PWD=$(openssl rand -base64 32 | tr -d /=+ | cut -c -25)
    echo "ADMIN_PASSWORD=$ADMIN_PWD" >> .env.production
    echo "‚úÖ ADMIN_PASSWORD –¥–æ–±–∞–≤–ª–µ–Ω"
else
    echo "‚úÖ ADMIN_PASSWORD —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥—Ä—É–≥–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if grep -q "change_me" .env.production; then
    echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π..."
    POSTGRES_PWD=$(openssl rand -base64 32 | tr -d /=+ | cut -c -25)
    REDIS_PWD=$(openssl rand -base64 32 | tr -d /=+ | cut -c -25)
    JWT_SECRET_VAL=$(openssl rand -base64 64 | tr -d /=+ | cut -c -50)
    
    sed -i "s/devassist_secure_password_2024_change_me/$POSTGRES_PWD/g" .env.production
    sed -i "s/redis_secure_password_2024_change_me/$REDIS_PWD/g" .env.production
    sed -i "s/your_jwt_secret_key_minimum_32_characters_long_change_me_now/$JWT_SECRET_VAL/g" .env.production
    sed -i "s/admin_secure_password_2024_change_me/$ADMIN_PWD/g" .env.production
    
    echo "‚úÖ –í—Å–µ –ø–∞—Ä–æ–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–±–µ–∑ –ø–∞—Ä–æ–ª–µ–π)
echo ""
echo "üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
grep -E "^(POSTGRES_PASSWORD|REDIS_PASSWORD|JWT_SECRET|ADMIN_PASSWORD)=" .env.production | sed 's/=.*/=***/' || echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

# –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend
echo ""
echo "üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend..."
docker compose -f docker-compose.backend.yml up -d

echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
echo ""
echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker compose -f docker-compose.backend.yml ps

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å health
echo ""
echo "ü©∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏:"
if curl -f -s --max-time 10 http://localhost:8000/health >/dev/null 2>&1; then
    echo "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç: http://46.149.71.162:8000"
    echo "‚úÖ API Docs –¥–æ—Å—Ç—É–ø–Ω—ã: http://46.149.71.162:8000/docs"
else
    echo "‚ùå Backend API –≤—Å—ë –µ—â—ë –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    echo "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose -f docker-compose.backend.yml logs backend"
fi

echo ""
echo "üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"