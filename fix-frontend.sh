#!/bin/bash

# Fix Frontend –¥–ª—è DevAssist Pro
# –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º frontend

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}" >&2
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

log "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Frontend –¥–ª—è DevAssist Pro"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ frontend
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ frontend..."
docker compose logs --tail=50 frontend

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ frontend
log "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker compose restart frontend

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ - –∑–∞–ø—É—Å–∫ frontend —Å –¥—Ä—É–≥–æ–π –∫–æ–º–∞–Ω–¥–æ–π
log "–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ frontend —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π..."
docker compose stop frontend
docker compose rm -f frontend

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ docker-compose.yml —Å —Ä–∞–±–æ—á–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π frontend
log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ frontend..."
cat > docker-compose-fixed.yml << 'EOF'
services:
  # PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: devassist_postgres
    environment:
      POSTGRES_DB: devassist_pro
      POSTGRES_USER: devassist
      POSTGRES_PASSWORD: devassist_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devassist-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devassist"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis
  redis:
    image: redis:7-alpine
    container_name: devassist_redis
    command: redis-server --requirepass redis_password
    volumes:
      - redis_data:/data
    networks:
      - devassist-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.monolith
    container_name: devassist_backend
    ports:
      - "8000:8000"
    environment:
      POSTGRES_URL: postgresql://devassist:devassist_password@postgres:5432/devassist_pro
      DATABASE_URL: postgresql://devassist:devassist_password@postgres:5432/devassist_pro
      REDIS_URL: redis://:redis_password@redis:6379/0
      ADMIN_PASSWORD: admin123
      ADMIN_EMAIL: admin@devassist.pro
      DEBUG: false
      LOG_LEVEL: INFO
      ENVIRONMENT: production
      ALLOWED_ORIGINS: "*"
      MAX_FILE_SIZE: 50MB
      SUPPORTED_FORMATS: pdf,docx,txt
      ANTHROPIC_API_KEY: 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
      USE_REAL_API: true
      HOST: 0.0.0.0
      PORT: 8000
    volumes:
      - app_data:/app/data
    networks:
      - devassist-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend - –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
  frontend:
    image: node:18-alpine
    container_name: devassist_frontend
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      REACT_APP_API_URL: http://46.149.71.162:8000
      REACT_APP_WS_URL: ws://46.149.71.162:8000/ws
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: true
      HOST: 0.0.0.0
      PORT: 3000
    command: sh -c "npm install --force && npm start"
    networks:
      - devassist-network
    depends_on:
      - backend
    stdin_open: true
    tty: true

  # Nginx - —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
  nginx:
    image: nginx:alpine
    container_name: devassist_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/fixed.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - devassist-network
    depends_on:
      - backend

networks:
  devassist-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  app_data:
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
log "–°–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
mkdir -p nginx
cat > nginx/fixed.conf << 'EOF'
server {
    listen 80;
    server_name _;

    # Backend API proxy (–æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª)
    location / {
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check
    location /health {
        proxy_pass http://backend:8000/health;
    }

    # API docs
    location /docs {
        proxy_pass http://backend:8000/docs;
    }

    location /openapi.json {
        proxy_pass http://backend:8000/openapi.json;
    }

    location /redoc {
        proxy_pass http://backend:8000/redoc;
    }
}
EOF

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å –Ω–æ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
log "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
docker compose -f docker-compose-fixed.yml up -d

log "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (30 —Å–µ–∫)..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
docker compose -f docker-compose-fixed.yml ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."

if curl -f -s "http://localhost:8000/health" > /dev/null 2>&1; then
    info "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8000!"
else
    warning "‚ö†Ô∏è  Backend API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

if curl -f -s "http://localhost:3000" > /dev/null 2>&1; then
    info "‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 3000!"
else
    warning "‚ö†Ô∏è  Frontend –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É"
fi

if curl -f -s "http://localhost/health" > /dev/null 2>&1; then
    info "‚úÖ Nginx –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç API –Ω–∞ –ø–æ—Ä—Ç—É 80!"
else
    warning "‚ö†Ô∏è  Nginx –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
fi

# –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
echo
log "üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"
echo
info "üìç –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å–∞–º:"
info "   üîß Backend API:   http://46.149.71.162:8000/"
info "   üìö API Docs:      http://46.149.71.162:8000/docs"
info "   ‚öõÔ∏è  Frontend:      http://46.149.71.162:3000/"
info "   üåê –ß–µ—Ä–µ–∑ Nginx:   http://46.149.71.162/ (API endpoints)"
echo
info "üîë –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:"
info "   Email:    admin@devassist.pro"
info "   Password: admin123"
echo
warning "‚ö†Ô∏è  Frontend –º–æ–∂–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å 1-2 –º–∏–Ω—É—Ç—ã –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"
warning "   –ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ä–∞–∑—É, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É"
echo
info "üí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø:"
info "   - Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ –ø–æ—Ä—Ç—É 8000"
info "   - Frontend (–∫–æ–≥–¥–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è) –Ω–∞ –ø–æ—Ä—Ç—É 3000"
info "   - Nginx –Ω–∞ –ø–æ—Ä—Ç—É 80 –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç –Ω–∞ backend"
echo
log "‚ú® –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ backend API –Ω–∞–ø—Ä—è–º—É—é –∏–ª–∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–ø—É—Å–∫–∞ frontend!"