#!/bin/bash

# DevAssist Pro - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ backend'–∞
# –ü—Ä–æ–≤–µ—Ä–∫–∞ API –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ 46.149.71.162

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

SERVER_IP="46.149.71.162"
BASE_URL="http://$SERVER_IP:8000"

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_test() {
    echo -e "${BLUE}[TEST]${NC} $1"
}

echo "üß™ DevAssist Pro - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ backend –Ω–∞ $SERVER_IP"
echo "=" * 70

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è endpoint'–∞
test_endpoint() {
    local method="$1"
    local endpoint="$2"
    local description="$3"
    local expected_status="${4:-200}"
    
    log_test "$description ($endpoint)"
    
    if [ "$method" = "GET" ]; then
        response=$(curl -s -w "\n%{http_code}" --connect-timeout 10 "$BASE_URL$endpoint" 2>/dev/null)
    else
        response=$(curl -s -w "\n%{http_code}" -X "$method" --connect-timeout 10 "$BASE_URL$endpoint" 2>/dev/null)
    fi
    
    if [ $? -ne 0 ]; then
        log_error "‚ùå $endpoint - CONNECTION FAILED"
        return 1
    fi
    
    http_code=$(echo "$response" | tail -n 1)
    body=$(echo "$response" | sed '$d')
    
    if [ "$http_code" = "$expected_status" ]; then
        log_info "‚úÖ $endpoint - OK ($http_code)"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç
        if [ ${#body} -lt 150 ]; then
            echo "   –û—Ç–≤–µ—Ç: $body"
        else
            echo "   –û—Ç–≤–µ—Ç: $(echo "$body" | head -c 100)..."
        fi
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è health endpoint
        if [ "$endpoint" = "/health" ]; then
            service_name=$(echo "$body" | grep -o '"service":"[^"]*"' | cut -d'"' -f4)
            echo "   –°–µ—Ä–≤–∏—Å: $service_name"
            
            if [ "$service_name" = "devassist-pro-monolith" ]; then
                log_info "   ‚úÖ –ó–∞–ø—É—â–µ–Ω –ü–û–õ–ù–´–ô –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π backend"
            elif [ "$service_name" = "devassist-simple-backend" ]; then
                log_warn "   ‚ö†Ô∏è  –ó–∞–ø—É—â–µ–Ω –£–ü–†–û–©–ï–ù–ù–´–ô backend (app_simple.py)"
            else
                log_warn "   ‚ö†Ô∏è  –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø backend: $service_name"
            fi
        fi
        
        return 0
    else
        log_error "‚ùå $endpoint - FAILED ($http_code)"
        echo "   –û–∂–∏–¥–∞–ª—Å—è: $expected_status, –ø–æ–ª—É—á–µ–Ω: $http_code"
        if [ ${#body} -lt 200 ]; then
            echo "   –û—Ç–≤–µ—Ç: $body"
        fi
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
log_test "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ $SERVER_IP..."
if ping -c 1 -W 5 $SERVER_IP >/dev/null 2>&1; then
    log_info "‚úÖ –°–µ—Ä–≤–µ—Ä $SERVER_IP –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    log_warn "‚ö†Ô∏è  Ping –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç, –Ω–æ —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
fi

if curl -s --connect-timeout 10 "$BASE_URL" >/dev/null 2>&1; then
    log_info "‚úÖ HTTP —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 8000 –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    log_error "‚ùå HTTP —Å–µ—Ä–≤–µ—Ä –Ω–∞ $BASE_URL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

echo ""

# –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
echo "üîç –û—Å–Ω–æ–≤–Ω—ã–µ endpoints:"
test_endpoint "GET" "/" "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
test_endpoint "GET" "/health" "Health check"
test_endpoint "GET" "/docs" "API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è"

echo ""
echo "üîç API endpoints:"
test_endpoint "GET" "/api" "API –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
test_endpoint "GET" "/api/admin/status" "–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"

echo ""
echo "üîç AI/LLM endpoints:"
test_endpoint "GET" "/api/llm/providers" "AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã"
test_endpoint "GET" "/api/llm/health" "–ó–¥–æ—Ä–æ–≤—å–µ AI"

echo ""
echo "üîç Analytics endpoints:"
test_endpoint "GET" "/api/analytics/dashboard" "–î–∞—à–±–æ—Ä–¥ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"

echo ""
echo "üîç Activity endpoints:"
test_endpoint "GET" "/api/activity" "–õ–µ–Ω—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"

echo ""
echo "üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ backend
log_test "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ backend..."
health_response=$(curl -s --connect-timeout 10 "$BASE_URL/health" 2>/dev/null)
service_name=$(echo "$health_response" | grep -o '"service":"[^"]*"' | cut -d'"' -f4)

case "$service_name" in
    "devassist-pro-monolith")
        log_info "‚úÖ –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –∑–∞–ø—É—â–µ–Ω –ü–û–õ–ù–´–ô –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π backend"
        backend_type="–ü–û–õ–ù–´–ô"
        ;;
    "devassist-simple-backend")
        log_warn "‚ö†Ô∏è  –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –∑–∞–ø—É—â–µ–Ω –£–ü–†–û–©–ï–ù–ù–´–ô backend"
        log_warn "    –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –ø–æ–ª–Ω—ã–π –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π backend"
        backend_type="–£–ü–†–û–©–ï–ù–ù–´–ô"
        ;;
    *)
        log_error "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø backend: $service_name"
        backend_type="–ù–ï–ò–ó–í–ï–°–¢–ù–´–ô"
        ;;
esac

# –ü—Ä–æ–≤–µ—Ä–∫–∞ AI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
log_test "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ AI..."
ai_response=$(curl -s --connect-timeout 10 "$BASE_URL/api/llm/providers" 2>/dev/null)
if echo "$ai_response" | grep -q "not_configured"; then
    log_warn "‚ö†Ô∏è  AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    log_warn "    –ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏ –≤ .env —Ñ–∞–π–ª–µ"
else
    log_info "‚úÖ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
fi

echo ""
echo "üìã –†–ï–ó–Æ–ú–ï:"
echo "   üñ•Ô∏è  –°–µ—Ä–≤–µ—Ä:         $SERVER_IP:8000"
echo "   üîß –¢–∏–ø backend:     $backend_type"
echo "   üì° –°—Ç–∞—Ç—É—Å:          $(echo "$health_response" | grep -o '"status":"[^"]*"' | cut -d'"' -f4)"
echo ""

if [ "$backend_type" = "–£–ü–†–û–©–ï–ù–ù–´–ô" ]; then
    echo "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"
    echo "   1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–µ–∫—É—â–∏–π backend"
    echo "   2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω—ã–π –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π backend:"
    echo "      cd ~/project && ./deploy-full-monolith.sh"
    echo "   3. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
    echo ""
fi

echo "üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:"
echo "   ‚Ä¢ –ì–ª–∞–≤–Ω–∞—è:      $BASE_URL/"
echo "   ‚Ä¢ API Docs:     $BASE_URL/docs"
echo "   ‚Ä¢ Health:       $BASE_URL/health"
echo "   ‚Ä¢ Admin:        $BASE_URL/api/admin/status"
echo ""

log_info "üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"