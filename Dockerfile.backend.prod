# Multi-stage production Dockerfile for Backend Services
FROM python:3.11-slim as builder

# Установка системных зависимостей для сборки
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Создание виртуального окружения
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Копирование и установка зависимостей
COPY requirements.minimal.txt /tmp/requirements.txt
RUN pip install --upgrade pip && \
    pip install --no-cache-dir -r /tmp/requirements.txt

# Финальная стадия
FROM python:3.11-slim

# Создание пользователя без root привилегий
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Установка системных зависимостей для runtime
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Копирование виртуального окружения из builder stage
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Установка рабочей директории
WORKDIR /app

# Копирование backend кода
COPY backend/ /app/backend/
COPY demo_app.py /app/

# Создание директорий и установка прав
RUN mkdir -p /app/uploads /app/data /app/logs && \
    chown -R appuser:appuser /app

# Переключение на непривилегированного пользователя
USER appuser

# Healthcheck для проверки работоспособности сервиса
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Переменные окружения по умолчанию
ENV PYTHONPATH=/app:/app/backend \
    PYTHONUNBUFFERED=1 \
    ENVIRONMENT=production \
    LOG_LEVEL=INFO

# Expose порт
EXPOSE 8000

# Команда запуска API Gateway (по умолчанию)
CMD ["uvicorn", "api_gateway.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]