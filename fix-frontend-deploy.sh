#!/bin/bash

set -e

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ Frontend –¥–ª—è DevAssist Pro"
echo "================================================="

# –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.frontend.yml" ]; then
    echo "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose -f docker-compose.frontend.yml down 2>/dev/null || true

# –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ frontend
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ frontend..."
mkdir -p frontend/build

# –°–æ–∑–¥–∞—Ç—å index.html –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "frontend/build/index.html" ]; then
    echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ index.html –≤ frontend/build..."
    cat > frontend/build/index.html << 'EOF'
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>DevAssist Pro</title>
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
            margin: 0; 
            padding: 40px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            min-height: 100vh;
        }
        .container { 
            max-width: 800px; 
            margin: 0 auto; 
            text-align: center; 
        }
        .card { 
            background: rgba(255,255,255,0.1); 
            backdrop-filter: blur(10px);
            padding: 30px; 
            border-radius: 15px; 
            margin: 20px 0;
            border: 1px solid rgba(255,255,255,0.2);
        }
        .status { 
            background: #d4edda; 
            color: #155724; 
            padding: 15px; 
            border-radius: 8px; 
            margin: 15px 0;
        }
        .api-link { margin: 10px 0; }
        .api-link a { color: #ffd700; text-decoration: none; }
        .api-link a:hover { text-decoration: underline; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üöÄ DevAssist Pro</h1>
        <p>–°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π —Å –ò–ò</p>
        
        <div class="card">
            <h2>üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</h2>
            <div class="status">
                ‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç<br>
                ‚úÖ Frontend —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç
            </div>
        </div>

        <div class="card">
            <h2>üõ†Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã</h2>
            <div class="api-link">
                <a href="http://46.149.71.162:8000/docs" target="_blank">
                    üìñ API Documentation (Swagger)
                </a>
            </div>
            <div class="api-link">
                <a href="http://46.149.71.162:8000/health" target="_blank">
                    ü©∫ Health Check
                </a>
            </div>
        </div>

        <div class="card">
            <h2>üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            <p>Backend API –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.</p>
            <p><strong>–°–µ—Ä–≤–µ—Ä:</strong> Ubuntu 22.04 (46.149.71.162)</p>
        </div>
    </div>
</body>
</html>
EOF
fi

# –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ nginx.conf —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "frontend/nginx.conf" ]; then
    echo "‚öôÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ nginx.conf –≤ frontend..."
    cat > frontend/nginx.conf << 'EOF'
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # SPA routing
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache";
    }

    # Health check endpoint
    location /frontend-health {
        access_log off;
        return 200 "Frontend OK\n";
        add_header Content-Type text/plain;
    }
}
EOF
fi

# –ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –≤ frontend
echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ frontend –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
ls -la frontend/build/ 2>/dev/null || echo "build –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞"

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ frontend
echo "üèóÔ∏è  –°–±–æ—Ä–∫–∞ frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker compose -f docker-compose.frontend.yml build --no-cache

echo "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ frontend —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose -f docker-compose.frontend.yml up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ frontend (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üìä –°—Ç–∞—Ç—É—Å frontend —Å–µ—Ä–≤–∏—Å–æ–≤:"
docker compose -f docker-compose.frontend.yml ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ frontend
echo ""
echo "ü©∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ frontend:"
if curl -f -s --max-time 5 http://localhost:3000/frontend-health >/dev/null 2>&1; then
    echo "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω: http://46.149.71.162:3000"
    echo "‚úÖ Health check —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 3000"
    echo "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose -f docker-compose.frontend.yml logs"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ nginx (–ø–æ—Ä—Ç 80)
echo ""
echo "ü©∫ –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx proxy (–ø–æ—Ä—Ç 80):"
if curl -f -s --max-time 5 http://localhost/ >/dev/null 2>&1; then
    echo "‚úÖ Nginx proxy —Ä–∞–±–æ—Ç–∞–µ—Ç: http://46.149.71.162"
else
    echo "‚ùå Nginx proxy –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    echo "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ nginx: docker logs devassist_nginx_proxy"
fi

echo ""
echo "üéâ Frontend —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
echo "  Frontend:     http://46.149.71.162"
echo "  Frontend:     http://46.149.71.162:3000 (direct)"
echo "  Backend API:  http://46.149.71.162:8000"
echo "  API Docs:     http://46.149.71.162:8000/docs"
echo ""
echo "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "  –õ–æ–≥–∏:         docker compose -f docker-compose.frontend.yml logs -f"
echo "  –°—Ç–∞—Ç—É—Å:       docker compose -f docker-compose.frontend.yml ps"
echo "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:    docker compose -f docker-compose.frontend.yml down"
echo "  –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:   docker compose -f docker-compose.frontend.yml restart"