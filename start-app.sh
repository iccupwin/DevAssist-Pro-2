#!/bin/bash

# DevAssist Pro - Unified Startup Script
# –ó–∞–ø—É—Å–∫–∞–µ—Ç backend –∏ frontend –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ DevAssist Pro..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js –¥–ª—è frontend
    if ! command -v node &> /dev/null; then
        error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –¥–ª—è –∑–∞–ø—É—Å–∫–∞ frontend."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
    if ! command -v npm &> /dev/null; then
        error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ npm –¥–ª—è –∑–∞–ø—É—Å–∫–∞ frontend."
        exit 1
    fi
    
    log "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ frontend
    if [[ ! -z "$FRONTEND_PID" ]]; then
        info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ frontend (PID: $FRONTEND_PID)..."
        kill $FRONTEND_PID 2>/dev/null || true
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend Docker containers
    info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend services..."
    cd backend && docker-compose -f docker-compose.monolith.yml down 2>/dev/null || true
    
    log "üõë –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    exit 0
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM EXIT

# –ó–∞–ø—É—Å–∫ backend
start_backend() {
    log "–ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    cd backend
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è docker-compose —Ñ–∞–π–ª–∞
    if [[ ! -f "docker-compose.monolith.yml" ]]; then
        error "–§–∞–π–ª docker-compose.monolith.yml –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ backend"
        exit 1
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker-compose -f docker-compose.monolith.yml down 2>/dev/null || true
    
    # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    info "–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–∏—Å–æ–≤..."
    docker-compose -f docker-compose.monolith.yml up --build -d
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
    info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ backend —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
    if docker-compose -f docker-compose.monolith.yml ps | grep -q "Up"; then
        log "‚úÖ Backend —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
        info "Backend –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000"
    else
        error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ backend —Å–µ—Ä–≤–∏—Å–æ–≤"
        docker-compose -f docker-compose.monolith.yml logs
        exit 1
    fi
    
    cd ..
}

# –ó–∞–ø—É—Å–∫ frontend
start_frontend() {
    log "–ó–∞–ø—É—Å–∫ frontend..."
    
    cd frontend
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è package.json
    if [[ ! -f "package.json" ]]; then
        error "–§–∞–π–ª package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ frontend"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –µ—Å–ª–∏ node_modules –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [[ ! -d "node_modules" ]]; then
        info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend..."
        npm install
    fi
    
    # –ó–∞–ø—É—Å–∫ frontend –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    info "–ó–∞–ø—É—Å–∫ React development server..."
    npm start &
    FRONTEND_PID=$!
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ frontend
    info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ frontend —Å–µ—Ä–≤–µ—Ä–∞..."
    sleep 15
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ frontend
    if curl -s http://localhost:3000 > /dev/null; then
        log "‚úÖ Frontend –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        info "Frontend –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:3000"
    else
        warning "Frontend –º–æ–∂–µ—Ç –≤—Å—ë –µ—â—ë –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ http://localhost:3000"
    fi
    
    cd ..
}

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    log "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ DevAssist Pro:"
    echo
    info "üîß Backend Services:"
    echo "   ‚Ä¢ API Gateway: http://localhost:8000"
    echo "   ‚Ä¢ PostgreSQL: localhost:5432"
    echo "   ‚Ä¢ Redis: localhost:6379"
    echo
    info "üé® Frontend:"
    echo "   ‚Ä¢ React App: http://localhost:3000"
    echo
    info "üìñ –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "   ‚Ä¢ –õ–æ–≥–∏ backend: cd backend && docker-compose -f docker-compose.monolith.yml logs -f"
    echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: Ctrl+C"
    echo
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ DevAssist Pro Startup Script"
    echo
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    check_dependencies
    
    # –ó–∞–ø—É—Å–∫ backend
    start_backend
    
    # –ó–∞–ø—É—Å–∫ frontend
    start_frontend
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    show_status
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    log "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏."
    
    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    while true; do
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
        if ! docker-compose -f backend/docker-compose.monolith.yml ps | grep -q "Up"; then
            error "Backend —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
            break
        fi
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend
        if [[ ! -z "$FRONTEND_PID" ]] && ! kill -0 $FRONTEND_PID 2>/dev/null; then
            error "Frontend –ø—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
            break
        fi
        
        sleep 5
    done
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"