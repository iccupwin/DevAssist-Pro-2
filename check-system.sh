#!/bin/bash
# ===========================================
# DevAssist Pro - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
# ===========================================

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo ""
echo "========================================"
echo -e "${BLUE}üîç DevAssist Pro - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã${NC}"
echo "========================================"
echo ""

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
echo -e "${BLUE}üì¶ Docker:${NC}"
if command -v docker &> /dev/null; then
    echo -e "  ‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker --version | cut -d' ' -f3)"
else
    echo -e "  ‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

if command -v docker-compose &> /dev/null; then
    echo -e "  ‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker-compose --version | cut -d' ' -f3)"
else
    echo -e "  ‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi
echo ""

# 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞
echo -e "${BLUE}üìÅ –§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞:${NC}"
required_files=(
    "Dockerfile.fullstack"
    "docker-compose.fullstack.yml"
    "start-fullstack.sh"
    "stop-fullstack.sh"
    ".env"
)

for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo -e "  ‚úÖ $file"
    else
        echo -e "  ‚ùå $file"
    fi
done
echo ""

# 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo -e "${BLUE}üê≥ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:${NC}"
if docker-compose -f docker-compose.fullstack.yml ps | grep -q "Up"; then
    echo -e "  ‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
    docker-compose -f docker-compose.fullstack.yml ps
else
    echo -e "  ‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
fi
echo ""

# 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç—å
echo -e "${BLUE}üåê –°–µ—Ç–µ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:${NC}"

# HTTP Health Check
if curl -f -s http://localhost:80/health > /dev/null 2>&1; then
    echo -e "  ‚úÖ HTTP Health Check (http://localhost:80/health)"
else
    echo -e "  ‚ùå HTTP Health Check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# API Health Check  
if curl -f -s http://localhost:80/api/health > /dev/null 2>&1; then
    echo -e "  ‚úÖ API Health Check (http://localhost:80/api/health)"
else
    echo -e "  ‚ùå API Health Check –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# API Docs
if curl -f -s http://localhost:80/api/docs > /dev/null 2>&1; then
    echo -e "  ‚úÖ API Documentation (http://localhost:80/api/docs)"
else
    echo -e "  ‚ùå API Documentation –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
if curl -f -s http://localhost:80/ > /dev/null 2>&1; then
    echo -e "  ‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (http://localhost:80/)"
else
    echo -e "  ‚ùå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi
echo ""

# 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Å—É—Ä—Å—ã
echo -e "${BLUE}üíª –†–µ—Å—É—Ä—Å—ã —Å–∏—Å—Ç–µ–º—ã:${NC}"

# RAM
MEMORY_USAGE=$(free | grep Mem | awk '{printf("%.1f", $3/$2 * 100.0)}')
echo -e "  üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ RAM: ${MEMORY_USAGE}%"

# –î–∏—Å–∫
DISK_USAGE=$(df . | tail -1 | awk '{print $5}')
echo -e "  üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: $DISK_USAGE"

# Docker stats (–µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã)
if docker-compose -f docker-compose.fullstack.yml ps | grep -q "Up"; then
    echo -e "  üê≥ Docker —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
    docker stats --no-stream --format "table {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}" | head -4
fi
echo ""

# 6. –í–Ω–µ—à–Ω–∏–π IP –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
echo -e "${BLUE}üåç –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø:${NC}"
EXTERNAL_IP=$(curl -s ifconfig.me 2>/dev/null || curl -s ipinfo.io/ip 2>/dev/null || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω")
echo -e "  üåê –í–Ω–µ—à–Ω–∏–π IP: $EXTERNAL_IP"

if [ "$EXTERNAL_IP" != "–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω" ]; then
    echo -e "  üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
    echo -e "     ‚Ä¢ http://$EXTERNAL_IP/"
    echo -e "     ‚Ä¢ http://$EXTERNAL_IP/health"
    echo -e "     ‚Ä¢ http://$EXTERNAL_IP/api/docs"
fi
echo ""

# 7. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏
echo -e "${BLUE}üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ (–æ—à–∏–±–∫–∏):${NC}"
if docker-compose -f docker-compose.fullstack.yml ps | grep -q "Up"; then
    ERRORS=$(docker-compose -f docker-compose.fullstack.yml logs --tail=50 2>&1 | grep -i error | tail -3)
    if [ -n "$ERRORS" ]; then
        echo -e "  ‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö:"
        echo "$ERRORS" | sed 's/^/     /'
    else
        echo -e "  ‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
else
    echo -e "  ‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã, –ª–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
fi
echo ""

# 8. –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
echo "========================================"
if docker-compose -f docker-compose.fullstack.yml ps | grep -q "Up" && \
   curl -f -s http://localhost:80/health > /dev/null 2>&1; then
    echo -e "${GREEN}üéâ –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –ö–û–†–†–ï–ö–¢–ù–û!${NC}"
    echo -e "${GREEN}   DevAssist Pro –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é${NC}"
else
    echo -e "${RED}‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´${NC}"
    echo -e "${YELLOW}   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å: ./fix-npm-error.sh${NC}"
fi
echo "========================================"
echo ""