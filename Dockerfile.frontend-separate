# Stage 1: Build React app
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY frontend/package*.json ./
RUN npm install --production=false

# Copy source
COPY frontend/ .

# Create .env.local for build
RUN echo 'ESLINT_NO_DEV_ERRORS=true' > .env.local && \
    echo 'DISABLE_ESLINT_PLUGIN=true' >> .env.local && \
    echo 'GENERATE_SOURCEMAP=false' >> .env.local && \
    echo 'TSC_COMPILE_ON_ERROR=true' >> .env.local && \
    echo 'REACT_APP_API_URL=/api' >> .env.local

# Build environment
ENV ESLINT_NO_DEV_ERRORS=true
ENV DISABLE_ESLINT_PLUGIN=true
ENV GENERATE_SOURCEMAP=false
ENV TSC_COMPILE_ON_ERROR=true
ENV CI=false

# Build the app
RUN npm run build

# Stage 2: Nginx production server
FROM nginx:alpine

# Copy built files
COPY --from=builder /app/build /usr/share/nginx/html

# Nginx configuration for React SPA with API proxy
RUN cat > /etc/nginx/conf.d/default.conf << 'EOF'
server {
    listen 80;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;
    
    # Enable gzip
    gzip on;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json;
    
    # React app
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Proxy all /api requests to backend
    location /api/ {
        proxy_pass http://backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts for long operations
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
    
    # Health check proxy
    location /health {
        proxy_pass http://backend:8000/health;
        proxy_set_header Host $host;
    }
    
    # API docs proxy
    location /docs {
        proxy_pass http://backend:8000/docs;
        proxy_set_header Host $host;
    }
    
    location /openapi.json {
        proxy_pass http://backend:8000/openapi.json;
        proxy_set_header Host $host;
    }
}
EOF

EXPOSE 80