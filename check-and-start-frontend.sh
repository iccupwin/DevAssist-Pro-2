#!/bin/bash

echo "üñ•Ô∏è  –ü–†–û–í–ï–†–ö–ê –ò –ó–ê–ü–£–°–ö FRONTEND"
echo "============================="
echo ""

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ frontend..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ø–æ—Ä—Ç 3000
echo "üìã –ü—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 3000:"
netstat -tulpn | grep :3000 || echo "   –ü–æ—Ä—Ç 3000 —Å–≤–æ–±–æ–¥–µ–Ω"

echo ""
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Å frontend..."
docker ps | grep frontend || echo "   –ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö frontend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"

echo ""
echo "üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ frontend..."
if [ -d "frontend" ]; then
    echo "   ‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è frontend —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    
    echo ""
    echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json..."
    if [ -f "frontend/package.json" ]; then
        echo "   ‚úÖ package.json –Ω–∞–π–¥–µ–Ω"
        echo "   üìã –°–∫—Ä–∏–ø—Ç—ã:"
        grep -A 5 '"scripts"' frontend/package.json | head -10
    else
        echo "   ‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile frontend..."
    if [ -f "frontend/Dockerfile" ]; then
        echo "   ‚úÖ Dockerfile –Ω–∞–π–¥–µ–Ω"
    else
        echo "   ‚ùå Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
else
    echo "   ‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

echo ""
echo "üîç –ò—â–µ–º docker-compose —Ñ–∞–π–ª—ã —Å frontend..."
find . -name "docker-compose*.yml" -exec grep -l "frontend\|3000" {} \; 2>/dev/null || echo "   –ù–µ –Ω–∞–π–¥–µ–Ω—ã docker-compose —Ñ–∞–π–ª—ã —Å frontend"

echo ""
echo "üöÄ –ó–ê–ü–£–°–ö FRONTEND"
echo "=================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π docker-compose
if [ -f "docker-compose.yml" ]; then
    echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ docker-compose.yml..."
    if grep -q "frontend\|3000" docker-compose.yml; then
        echo "   ‚úÖ Frontend –Ω–∞–π–¥–µ–Ω –≤ docker-compose.yml"
        
        echo ""
        echo "üöÄ –ó–∞–ø—É—Å–∫ frontend —á–µ—Ä–µ–∑ docker-compose..."
        docker-compose up -d frontend 2>/dev/null || docker-compose up -d
        
    else
        echo "   ‚ùå Frontend –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ docker-compose.yml"
    fi
fi

# –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ª—é–±–æ–π compose —Å frontend
FRONTEND_COMPOSE=$(find . -name "docker-compose*.yml" -exec grep -l "frontend\|3000" {} \; | head -1)

if [ -n "$FRONTEND_COMPOSE" ]; then
    echo ""
    echo "üìã –ù–∞–π–¥–µ–Ω compose —Ñ–∞–π–ª —Å frontend: $FRONTEND_COMPOSE"
    echo "üöÄ –ó–∞–ø—É—Å–∫ frontend..."
    
    COMPOSE_DIR=$(dirname "$FRONTEND_COMPOSE")
    COMPOSE_FILE=$(basename "$FRONTEND_COMPOSE")
    
    cd "$COMPOSE_DIR"
    docker-compose -f "$COMPOSE_FILE" up -d frontend 2>/dev/null || docker-compose -f "$COMPOSE_FILE" up -d
    cd - > /dev/null
    
elif [ -f "frontend/Dockerfile" ]; then
    echo ""
    echo "üê≥ –ó–∞–ø—É—Å–∫ frontend —á–µ—Ä–µ–∑ standalone Docker..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∏–º –ª—é–±–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 3000
    EXISTING_CONTAINER=$(docker ps --filter "publish=3000" --format "{{.ID}}")
    if [ -n "$EXISTING_CONTAINER" ]; then
        echo "   üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 3000..."
        docker stop $EXISTING_CONTAINER
    fi
    
    # –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º frontend
    cd frontend
    docker build -t devassist-frontend .
    docker run -d -p 3000:3000 --name devassist-frontend-standalone devassist-frontend
    cd ..
    
elif [ -f "frontend/package.json" ]; then
    echo ""
    echo "üì¶ –ó–∞–ø—É—Å–∫ frontend —á–µ—Ä–µ–∑ npm (–ª–æ–∫–∞–ª—å–Ω–æ)..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Node.js
    if command -v npm >/dev/null 2>&1; then
        cd frontend
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if [ ! -d "node_modules" ]; then
            echo "   üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
            npm install
        fi
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–µ
        echo "   üöÄ –ó–∞–ø—É—Å–∫ npm start –≤ —Ñ–æ–Ω–µ..."
        nohup npm start > ../frontend.log 2>&1 &
        echo $! > ../frontend.pid
        
        cd ..
    else
        echo "   ‚ùå Node.js/npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
else
    echo "   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞ frontend"
fi

echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ frontend (15 —Å–µ–∫—É–Ω–¥)..."
sleep 15

echo ""
echo "üß™ –ü–†–û–í–ï–†–ö–ê FRONTEND"
echo "==================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å frontend
echo "üîç –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ frontend:"

# –õ–æ–∫–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç
FRONTEND_LOCAL=$(curl -s --max-time 10 "http://localhost:3000" 2>/dev/null || echo "TIMEOUT")
if echo "$FRONTEND_LOCAL" | grep -qi "html\|doctype\|title\|react"; then
    echo "   ‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ (localhost:3000)"
    LOCAL_OK=true
else
    echo "   ‚ùå Frontend –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ"
    echo "   –û—Ç–≤–µ—Ç: $(echo "$FRONTEND_LOCAL" | head -c 80)..."
    LOCAL_OK=false
fi

# –í–Ω–µ—à–Ω–∏–π —Ç–µ—Å—Ç
FRONTEND_EXT=$(curl -s --max-time 10 "http://46.149.71.162:3000" 2>/dev/null || echo "TIMEOUT")
if echo "$FRONTEND_EXT" | grep -qi "html\|doctype\|title\|react"; then
    echo "   ‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ (46.149.71.162:3000)"
    EXT_OK=true
else
    echo "   ‚ùå Frontend –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ"
    EXT_OK=false
fi

echo ""
echo "üìä –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø–æ—Ä—Ç–æ–≤:"
netstat -tulpn | grep -E ":3000|:8000" || echo "   –ü–æ—Ä—Ç—ã 3000 –∏ 8000 –Ω–µ –∑–∞–Ω—è—Ç—ã"

echo ""
echo "üê≥ –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}" | head -10

echo ""
echo "üéØ –†–ï–ó–£–õ–¨–¢–ê–¢:"
echo "============="

if [ "$LOCAL_OK" = true ] && [ "$EXT_OK" = true ]; then
    echo ""
    echo "üéâ FRONTEND –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–¢–ê–ï–¢!"
    echo ""
    echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: http://localhost:3000"
    echo "‚úÖ –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø:   http://46.149.71.162:3000"
    echo ""
    echo "üåê –ü–û–õ–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê:"
    echo "   Frontend: http://46.149.71.162:3000"
    echo "   Backend:  http://46.149.71.162:8000"
    echo ""
    echo "üéä DEVASSIST PRO –ì–û–¢–û–í –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!"
    
elif [ "$LOCAL_OK" = true ]; then
    echo "‚ö†Ô∏è  Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ, –Ω–æ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ"
    echo ""
    echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ: http://localhost:3000"
    echo "‚ùå –ò–∑–≤–Ω–µ: http://46.149.71.162:3000"
    echo ""
    echo "üí° –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å firewall –∏–ª–∏ binding"
    
else
    echo "‚ùå FRONTEND –ù–ï –ó–ê–ü–£–©–ï–ù"
    echo ""
    echo "üîß –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
    echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: tail frontend.log"
    echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å—ã: ps aux | grep node"
    echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—Ä—Ç—ã: netstat -tulpn | grep 3000"
fi

echo ""
echo "üìã –£–ü–†–ê–í–õ–ï–ù–ò–ï FRONTEND:"
if [ -f "frontend.pid" ]; then
    echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: kill \$(cat frontend.pid)"
fi
echo "   –õ–æ–≥–∏: tail -f frontend.log"
echo "   –°—Ç–∞—Ç—É—Å: curl http://localhost:3000"

echo ""
echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend –∑–∞–≤–µ—Ä—à–µ–Ω–∞"