#!/bin/bash

echo "üîê –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò"
echo "=================================="
echo ""

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ backend –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏..."
BACKEND_LOGS=$(docker logs devassist_app_monolith 2>&1 | tail -10)
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤ backend:"
echo "$BACKEND_LOGS"

echo ""
echo "üß™ –î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏..."

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω–∞
echo "üë§ –¢–µ—Å—Ç 1: admin@devassist.pro / admin123"
AUTH_RESPONSE=$(curl -s -X POST \
    -H "Content-Type: application/json" \
    -H "Origin: http://46.149.71.162:3000" \
    -d '{"email":"admin@devassist.pro","password":"admin123"}' \
    "http://localhost:8000/api/auth/login" 2>/dev/null)

echo "   –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç: $AUTH_RESPONSE"

if echo "$AUTH_RESPONSE" | grep -q '"success":true'; then
    echo "   ‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: –≤—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω"
else
    echo "   ‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: –æ—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞"
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –µ—Å—Ç—å –ª–∏ –æ—à–∏–±–∫–∞ —Å –ø–∞—Ä–æ–ª–µ–º
    if echo "$AUTH_RESPONSE" | grep -q "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å"; then
        echo "   üîß –ü—Ä–æ–±–ª–µ–º–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å"
        echo "   üí° –í–æ–∑–º–æ–∂–Ω–æ –∞–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–ª—Å—è —Å –¥—Ä—É–≥–∏–º –ø–∞—Ä–æ–ª–µ–º"
    elif echo "$AUTH_RESPONSE" | grep -q "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"; then
        echo "   üîß –ü—Ä–æ–±–ª–µ–º–∞: –∞–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        echo "   üí° –ù—É–∂–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
    elif echo "$AUTH_RESPONSE" | grep -q "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞"; then
        echo "   üîß –ü—Ä–æ–±–ª–µ–º–∞: –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞"
        echo "   üí° –ü—Ä–æ–≤–µ—Ä–∏–º –ª–æ–≥–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π"
    fi
fi

echo ""
echo "üß™ –¢–µ—Å—Ç 2: –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
REG_RESPONSE=$(curl -s -X POST \
    -H "Content-Type: application/json" \
    -H "Origin: http://46.149.71.162:3000" \
    -d '{"email":"testuser@example.com","password":"testpass123","full_name":"Test User","company":"Test Company"}' \
    "http://localhost:8000/api/auth/register" 2>/dev/null)

echo "   –û—Ç–≤–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: $REG_RESPONSE"

if echo "$REG_RESPONSE" | grep -q '"success":true'; then
    echo "   ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    
    echo ""
    echo "üß™ –¢–µ—Å—Ç 3: –í—Ö–æ–¥ —Å –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    LOGIN_NEW=$(curl -s -X POST \
        -H "Content-Type: application/json" \
        -H "Origin: http://46.149.71.162:3000" \
        -d '{"email":"testuser@example.com","password":"testpass123"}' \
        "http://localhost:8000/api/auth/login" 2>/dev/null)
    
    echo "   –û—Ç–≤–µ—Ç –≤—Ö–æ–¥–∞: $LOGIN_NEW"
    
    if echo "$LOGIN_NEW" | grep -q '"success":true'; then
        echo "   ‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –≤—Ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        echo "   üí° –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±–ª–µ–º–∞ —Ç–æ–ª—å–∫–æ —Å –∞–¥–º–∏–Ω–æ–º"
    else
        echo "   ‚ùå –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –≤—Ö–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
else
    echo "   ‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo ""
echo "üîß –ü–õ–ê–ù –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:"

if echo "$AUTH_RESPONSE" | grep -q "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å"; then
    echo "1. –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–∞—Ä–æ–ª–µ–º –∞–¥–º–∏–Ω–∞ - —Å–±—Ä–æ—Å–∏–º –ø–∞—Ä–æ–ª—å"
    echo "2. –ó–∞–ø—É—Å—Ç–∏–º –∫–æ–º–∞–Ω–¥—É —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
    
    echo ""
    echo "üîÑ –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
    cat > reset_admin_password.py << 'EOF'
import os, sys
sys.path.append('/app')
from shared.database import SessionLocal
from shared.models import User
import bcrypt

def hash_password(password: str) -> str:
    return bcrypt.hashpw(password.encode('utf-8'), bcrypt.gensalt()).decode('utf-8')

def reset_admin_password():
    db = SessionLocal()
    try:
        admin = db.query(User).filter(User.email == "admin@devassist.pro").first()
        if admin:
            new_password = "admin123"
            admin.hashed_password = hash_password(new_password)
            db.commit()
            print(f"‚úÖ –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–±—Ä–æ—à–µ–Ω –Ω–∞: {new_password}")
        else:
            print("‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        db.close()

if __name__ == "__main__":
    reset_admin_password()
EOF
    
    echo "   üìù –°–∫—Ä–∏–ø—Ç —Å–±—Ä–æ—Å–∞ —Å–æ–∑–¥–∞–Ω"
    echo "   üê≥ –ö–æ–ø–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º..."
    
    docker cp reset_admin_password.py devassist_app_monolith:/tmp/
    docker exec devassist_app_monolith python /tmp/reset_admin_password.py
    
    echo ""
    echo "üß™ –ü–æ–≤—Ç–æ—Ä–Ω—ã–π —Ç–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏..."
    AUTH_RESPONSE_2=$(curl -s -X POST \
        -H "Content-Type: application/json" \
        -H "Origin: http://46.149.71.162:3000" \
        -d '{"email":"admin@devassist.pro","password":"admin123"}' \
        "http://localhost:8000/api/auth/login" 2>/dev/null)
    
    echo "   –û—Ç–≤–µ—Ç: $AUTH_RESPONSE_2"
    
    if echo "$AUTH_RESPONSE_2" | grep -q '"success":true'; then
        echo "   üéâ –£–°–ü–ï–•! –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!"
    else
        echo "   ‚ùå –í—Å–µ –µ—â–µ –ø—Ä–æ–±–ª–µ–º—ã"
    fi
    
    rm reset_admin_password.py
    
elif echo "$AUTH_RESPONSE" | grep -q "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"; then
    echo "1. –ê–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ–∑–¥–∞–ª—Å—è"
    echo "2. –ù—É–∂–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"
    echo ""
    echo "üîÑ –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    cd backend
    docker compose -f docker-compose.monolith.yml down -v
    docker compose -f docker-compose.monolith.yml up -d
    cd ..
    
else
    echo "1. –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"
    echo "2. –ü—Ä–æ–≤–µ—Ä–∏–º –ø–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏"
    echo ""
    echo "üìã –ü–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏ backend:"
    docker logs devassist_app_monolith | tail -20
fi

echo ""
echo "‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"