version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: devassist_postgres_real
    environment:
      POSTGRES_DB: devassist_pro
      POSTGRES_USER: devassist
      POSTGRES_PASSWORD: devassist_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - devassist-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devassist -d devassist_pro"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    mem_limit: 512m

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: devassist_redis_real
    command: redis-server --requirepass redis_password --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - devassist-network
    healthcheck:
      test: ["CMD", "redis-cli", "auth", "redis_password", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    mem_limit: 256m

  # Backend FastAPI Monolith
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile.monolith
    container_name: devassist_backend_real
    environment:
      # Database Configuration
      POSTGRES_URL: postgresql://devassist:devassist_password@postgres:5432/devassist_pro
      
      # Redis Configuration
      REDIS_URL: redis://:redis_password@redis:6379/0
      
      # Application Settings
      DEBUG: false
      LOG_LEVEL: INFO
      ENVIRONMENT: production
      
      # CORS Settings
      ALLOWED_ORIGINS: "http://46.149.71.162,https://46.149.71.162,http://localhost:3000,http://localhost"
      
      # File Upload Settings
      MAX_FILE_SIZE: 50MB
      SUPPORTED_FORMATS: pdf,docx,txt,xlsx,xls
      UPLOAD_DIR: /app/uploads
      
      # AI Provider Configuration
      ANTHROPIC_API_KEY: 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
      OPENAI_API_KEY: ${OPENAI_API_KEY:-dummy_key}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY:-dummy_key}
      USE_REAL_API: true
      
      # Server Configuration  
      HOST: 0.0.0.0
      PORT: 8000
      WORKERS: 1
      
      # Security
      SECRET_KEY: devassist-pro-secret-key-production-change-me
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 1440
      
    volumes:
      - app_data:/app/data
      - app_uploads:/app/uploads
      - app_logs:/app/logs
    networks:
      - devassist-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    mem_limit: 1g
    
  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.working
    container_name: devassist_frontend_real
    ports:
      - "80:80"
    volumes:
      - ./frontend/nginx.production.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_logs:/var/log/nginx
    networks:
      - devassist-network
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health.json"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    mem_limit: 512m

networks:
  devassist-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_data:
    driver: local
  app_uploads:
    driver: local
  app_logs:
    driver: local
  frontend_logs:
    driver: local