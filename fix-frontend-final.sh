#!/bin/bash

echo "üîß –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–ê–®–ï–ì–û FRONTEND"
echo "======================================="
echo ""

echo "üõë –ü–æ–ª–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö frontend –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
sudo lsof -ti:3000 | xargs sudo kill -9 2>/dev/null || true
docker stop devassist-static-frontend 2>/dev/null || true
docker rm devassist-static-frontend 2>/dev/null || true
if [ -f "frontend.pid" ]; then
    kill $(cat frontend.pid) 2>/dev/null || true
    rm -f frontend.pid
fi

cd frontend

echo ""
echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º..."
echo "   Node –≤–µ—Ä—Å–∏—è: $(node --version)"
echo "   NPM –≤–µ—Ä—Å–∏—è: $(npm --version)"

echo ""
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ TypeScript –æ—à–∏–±–æ–∫..."

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É —Å bestProposal –≤ unifiedReportExportService.ts
sed -i '240,246s/bestProposal: report.best_proposal/bestProposal: report.best_proposal/' src/services/unifiedReportExportService.ts
sed -i '283,289s/bestProposal: report.best_proposal/bestProposal: report.best_proposal/' src/services/unifiedReportExportService.ts

# –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ç—á –¥–ª—è —Ç–∏–ø–æ–≤
cat > src/types/pdfExportPatch.d.ts << 'EOF'
// –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø–∞—Ç—á –¥–ª—è —Ç–∏–ø–æ–≤
declare module '../types/pdfExport' {
  export interface ComparisonResult {
    summary: string;
    recommendations: string[];
    bestProposal?: any;
  }
}
EOF

echo "   ‚úÖ TypeScript –ø–∞—Ç—á–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"

echo ""
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∏ —Å—Ç–∞—Ä—ã—Ö —Å–±–æ—Ä–æ–∫..."
rm -rf node_modules/.cache 2>/dev/null || true
rm -rf build 2>/dev/null || true

echo ""
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cat > .env.local << 'EOF'
# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
REACT_APP_API_URL=http://46.149.71.162:8000
REACT_APP_WS_URL=ws://46.149.71.162:8000
HOST=0.0.0.0
PORT=3000

# –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
SKIP_PREFLIGHT_CHECK=true
TSC_COMPILE_ON_ERROR=true
DISABLE_ESLINT_PLUGIN=true
FAST_REFRESH=false
GENERATE_SOURCEMAP=false

# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞–º—è—Ç–∏
NODE_OPTIONS="--max-old-space-size=2048"
REACT_APP_NO_INLINE_RUNTIME_CHUNK=true
IMAGE_INLINE_SIZE_LIMIT=0
EOF

echo "   ‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π .env.local —Å–æ–∑–¥–∞–Ω"

echo ""
echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Node.js –¥–æ –≤–µ—Ä—Å–∏–∏ 18..."
if [[ $(node --version) != v18* ]]; then
    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
    sudo apt-get install -y nodejs
    echo "   ‚úÖ Node.js –æ–±–Ω–æ–≤–ª–µ–Ω –¥–æ $(node --version)"
else
    echo "   ‚úÖ Node.js —É–∂–µ –≤–µ—Ä—Å–∏–∏ 18"
fi

echo ""
echo "üöÄ –ó–ê–ü–£–°–ö –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–û–ì–û FRONTEND"
echo "===================================="

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
export NODE_ENV=development
export NODE_OPTIONS="--max-old-space-size=2048"

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å nohup –∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
nohup npm start > ../frontend-optimized.log 2>&1 &
FRONTEND_PID=$!

echo "   üöÄ Frontend –∑–∞–ø—É—â–µ–Ω —Å PID: $FRONTEND_PID"
echo "$FRONTEND_PID" > ../frontend.pid

echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ (90 —Å–µ–∫—É–Ω–¥)..."
echo "   –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
for i in {1..9}; do
    sleep 10
    if ! ps -p $FRONTEND_PID > /dev/null 2>&1; then
        echo "   ‚ùå –ü—Ä–æ—Ü–µ—Å—Å —É–ø–∞–ª –Ω–∞ $((i*10)) —Å–µ–∫—É–Ω–¥–µ"
        break
    fi
    echo "   ‚è≥ –ü—Ä–æ—à–ª–æ $((i*10)) —Å–µ–∫—É–Ω–¥, –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç..."
done

echo ""
echo "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."

if ps -p $FRONTEND_PID > /dev/null 2>&1; then
    echo "   ‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    PROCESS_OK=true
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–∏–ª—è—Ü–∏—é
    COMPILED=$(tail -20 ../frontend-optimized.log | grep -c "Compiled successfully" || echo 0)
    if [ $COMPILED -gt 0 ]; then
        echo "   ‚úÖ Webpack —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω"
    else
        echo "   ‚ö†Ô∏è Webpack –µ—â–µ –∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è..."
    fi
else
    echo "   ‚ùå –ü—Ä–æ—Ü–µ—Å—Å —É–ø–∞–ª"
    PROCESS_OK=false
fi

echo ""
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
tail -15 ../frontend-optimized.log

echo ""
echo "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–û–°–¢–£–ü–ù–û–°–¢–ò"
echo "=========================="

if [ "$PROCESS_OK" = true ]; then
    sleep 10  # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"
    ss -tulpn | grep :3000 && PORT_OK=true || PORT_OK=false
    
    if [ "$PORT_OK" = true ]; then
        echo ""
        echo "üåê –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:"
        
        LOCAL_TEST=$(timeout 15 curl -s http://localhost:3000 2>&1)
        if echo "$LOCAL_TEST" | grep -qi "html\|react\|<div"; then
            echo "   ‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!"
            
            EXT_TEST=$(timeout 15 curl -s http://46.149.71.162:3000 2>&1)
            if echo "$EXT_TEST" | grep -qi "html\|react\|<div"; then
                echo "   ‚úÖ –í–Ω–µ—à–Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω!"
                echo ""
                echo "üéâüéâüéâ –í–ê–® FRONTEND –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–¢–ê–ï–¢! üéâüéâüéâ"
                echo ""
                echo "üåê –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê:"
                echo "   üñ•Ô∏è  Frontend: http://46.149.71.162:3000"
                echo "   ‚öôÔ∏è  Backend:  http://46.149.71.162:8000"
                echo ""
                echo "üë§ –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê:"
                echo "   üìß Email:    admin@devassist.pro"
                echo "   üîë Password: admin123"
                echo ""
                echo "üéä –í–ê–® FRONTEND –ó–ê–ü–£–©–ï–ù –ò –°–¢–ê–ë–ò–õ–ï–ù!"
            else
                echo "   ‚ùå –í–Ω–µ—à–Ω–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
                echo "   –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å –µ—â–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å firewall"
            fi
        else
            echo "   ‚ùå –õ–æ–∫–∞–ª—å–Ω–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
            echo "   –û—Ç–≤–µ—Ç: $(echo "$LOCAL_TEST" | head -c 100)..."
        fi
    else
        echo "   ‚ùå –ü–æ—Ä—Ç 3000 –Ω–µ –∑–∞–Ω—è—Ç"
    fi
else
    echo "‚ùå Frontend –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –≤—ã–∂–∏–ª"
    echo ""
    echo "üìã –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏:"
    grep -E "(FATAL|ERROR|Out of memory|killed)" ../frontend-optimized.log | tail -10
fi

cd ..

echo ""
echo "üìã –£–ü–†–ê–í–õ–ï–ù–ò–ï:"
echo "   –°—Ç–∞—Ç—É—Å:     ps -p \$(cat frontend.pid) 2>/dev/null || echo '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'"
echo "   –õ–æ–≥–∏:       tail -f frontend-optimized.log"
echo "   –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: watch 'ps aux | grep node | grep -v grep'"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:  kill \$(cat frontend.pid) 2>/dev/null; rm frontend.pid"

echo ""
echo "üí° –ï–°–õ–ò –í–°–ï –ï–©–ï –ù–ï –†–ê–ë–û–¢–ê–ï–¢:"
echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: tail -100 frontend-optimized.log"
echo "   2. –£–≤–µ–ª–∏—á—å—Ç–µ –ø–∞–º—è—Ç—å: export NODE_OPTIONS='--max-old-space-size=4096'"
echo "   3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ production build –≤–º–µ—Å—Ç–æ dev server"

echo ""
echo "‚úÖ –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"