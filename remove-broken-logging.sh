#!/bin/bash

echo "üîß –£–î–ê–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–ù–´–• –°–¢–†–û–ö –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø"
echo "========================================"
echo ""

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–∞—Ç—á –∫–æ—Ç–æ—Ä—ã–π —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
cat > remove_logging.py << 'EOF'
#!/usr/bin/env python3

# –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª app.py
with open('/app/app.py', 'r', encoding='utf-8') as f:
    lines = f.readlines()

# –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
new_lines = []
skip_next = False

for i, line in enumerate(lines):
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    if ('response.get(\'success\', False)' in line and 
        ('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' in line or '–í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' in line)):
        print(f"–£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—É—é —Å—Ç—Ä–æ–∫—É {i+1}: {line.strip()}")
        continue
    new_lines.append(line)

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
with open('/app/app.py', 'w', encoding='utf-8') as f:
    f.writelines(new_lines)

print("‚úÖ –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã!")
EOF

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend..."
docker stop devassist_app_monolith 2>/dev/null || true

echo ""
echo "üîß –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å—Ç—Ä–æ–∫..."
docker cp remove_logging.py devassist_app_monolith:/tmp/
docker start devassist_app_monolith
sleep 5
docker exec devassist_app_monolith python /tmp/remove_logging.py

echo ""
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend..."
docker restart devassist_app_monolith

echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (20 —Å–µ–∫—É–Ω–¥)..."
sleep 20

echo ""
echo "üß™ –¢–ï–°–¢ –û–°–ù–û–í–ù–´–• –§–£–ù–ö–¶–ò–ô"
echo "========================"

# Health Check
echo "üîç Health Check:"
HEALTH=$(curl -s --max-time 10 "http://localhost:8000/health" 2>/dev/null || echo "TIMEOUT")
if echo "$HEALTH" | grep -q "healthy"; then
    echo "   ‚úÖ –†–ê–ë–û–¢–ê–ï–¢"
    HEALTH_OK=true
else
    echo "   ‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
    HEALTH_OK=false
fi

if [ "$HEALTH_OK" = true ]; then
    # Authentication Test
    echo "üîê Authentication:"
    AUTH=$(curl -s -X POST \
        -H "Content-Type: application/json" \
        -H "Origin: http://46.149.71.162:3000" \
        -d '{"email":"admin@devassist.pro","password":"admin123"}' \
        "http://localhost:8000/api/auth/login" 2>/dev/null || echo "TIMEOUT")
    
    if echo "$AUTH" | grep -q '"success":true'; then
        echo "   ‚úÖ –†–ê–ë–û–¢–ê–ï–¢"
        AUTH_OK=true
    else
        echo "   ‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
        echo "   –û—Ç–≤–µ—Ç: $(echo "$AUTH" | head -c 80)..."
        AUTH_OK=false
    fi
    
    # CORS Test
    echo "üåê CORS:"
    CORS=$(curl -s -i -X OPTIONS \
        -H "Origin: http://46.149.71.162:3000" \
        -H "Access-Control-Request-Method: POST" \
        "http://localhost:8000/api/auth/login" 2>/dev/null || echo "TIMEOUT")
    
    if echo "$CORS" | grep -qi "access-control-allow-origin.*46.149.71.162"; then
        echo "   ‚úÖ –†–ê–ë–û–¢–ê–ï–¢"
        CORS_OK=true
    else
        echo "   ‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
        CORS_OK=false
    fi
    
    # External Access
    echo "üåç External Access:"
    EXT=$(curl -s --max-time 10 "http://46.149.71.162:8000/health" 2>/dev/null || echo "TIMEOUT")
    if echo "$EXT" | grep -q "healthy"; then
        echo "   ‚úÖ –†–ê–ë–û–¢–ê–ï–¢"
        EXT_OK=true
    else
        echo "   ‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
        EXT_OK=false
    fi
else
    AUTH_OK=false
    CORS_OK=false
    EXT_OK=false
fi

echo ""
echo "üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:"
echo "======================"

if [ "$HEALTH_OK" = true ] && [ "$AUTH_OK" = true ] && [ "$CORS_OK" = true ] && [ "$EXT_OK" = true ]; then
    echo ""
    echo "üéâüéâüéâ –ü–û–õ–ù–´–ô –£–°–ü–ï–•! üéâüéâüéâ"
    echo ""
    echo "‚úÖ Health Check: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "‚úÖ Authentication: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "‚úÖ CORS: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "‚úÖ External Access: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo ""
    echo "üåê –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï:"
    echo ""
    echo "   Frontend:     http://46.149.71.162:3000"
    echo "   Backend:      http://46.149.71.162:8000"
    echo "   API Docs:     http://46.149.71.162:8000/docs"
    echo ""
    echo "üë§ –î–ê–ù–ù–´–ï –î–õ–Ø –í–•–û–î–ê:"
    echo "   Email:    admin@devassist.pro"
    echo "   Password: admin123"
    echo ""
    echo "üéä –í–°–ï –ì–û–¢–û–í–û –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø!"
    
elif [ "$HEALTH_OK" = true ]; then
    echo "‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–û –†–ê–ë–û–¢–ê–ï–¢:"
    echo ""
    echo "‚úÖ Backend: –∑–∞–ø—É—â–µ–Ω"
    [ "$AUTH_OK" != true ] && echo "‚ùå Authentication: –ø—Ä–æ–±–ª–µ–º–∞"
    [ "$CORS_OK" != true ] && echo "‚ùå CORS: –ø—Ä–æ–±–ª–µ–º–∞"
    [ "$EXT_OK" != true ] && echo "‚ùå External Access: –ø—Ä–æ–±–ª–µ–º–∞"
    
else
    echo "‚ùå BACKEND –ù–ï –ó–ê–ü–£–©–ï–ù"
    echo ""
    echo "–õ–æ–≥–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:"
    docker logs devassist_app_monolith 2>&1 | tail -10
fi

# –û—á–∏—Å—Ç–∫–∞
rm -f remove_logging.py
docker exec devassist_app_monolith rm -f /tmp/remove_logging.py 2>/dev/null || true

echo ""
echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"