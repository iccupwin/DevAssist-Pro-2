#!/bin/bash

# DevAssist Pro - –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞ —á–µ—Ä–µ–∑ API –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_info "üîê DevAssist Pro - –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∞ —á–µ—Ä–µ–∑ API
create_admin_via_api() {
    local email=$1
    local password=$2
    local full_name=$3
    
    print_info "–ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞ —á–µ—Ä–µ–∑ API..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    if ! curl -f -s http://localhost:8000/health >/dev/null 2>&1; then
        print_error "Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞ —á–µ—Ä–µ–∑ API
    response=$(curl -s -X POST http://localhost:8000/api/admin/users/create-admin \
        -H "Content-Type: application/json" \
        -d "{
            \"email\": \"$email\",
            \"password\": \"$password\",
            \"full_name\": \"$full_name\",
            \"company\": \"DevAssist Pro\",
            \"position\": \"System Administrator\"
        }" 2>/dev/null)
    
    if [ $? -eq 0 ] && echo "$response" | grep -q "success"; then
        print_success "–ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ API!"
        echo "$response" | python3 -m json.tool 2>/dev/null || echo "$response"
        return 0
    else
        print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞ —á–µ—Ä–µ–∑ API"
        print_info "–û—Ç–≤–µ—Ç API: $response"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∞ –Ω–∞–ø—Ä—è–º—É—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
create_admin_via_db() {
    local email=$1
    local password=$2
    local full_name=$3
    
    print_info "–°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞ –Ω–∞–ø—Ä—è–º—É—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É Docker Compose
    if command -v "docker" >/dev/null 2>&1 && docker compose version >/dev/null 2>&1; then
        DOCKER_CMD="docker compose"
    elif command -v "docker-compose" >/dev/null 2>&1; then
        DOCKER_CMD="docker-compose"
    else
        print_error "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        return 1
    fi
    
    # –ù–∞—Ö–æ–¥–∏–º PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    PG_CONTAINER=$($DOCKER_CMD ps --format "table {{.Names}}" | grep -E "(postgres|db)" | head -1)
    
    if [ -z "$PG_CONTAINER" ]; then
        print_error "PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    print_info "–ò—Å–ø–æ–ª—å–∑—É–µ–º PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä: $PG_CONTAINER"
    
    # –•—ç—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å (–ø—Ä–æ—Å—Ç–æ–µ bcrypt —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ)
    # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ–ª–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ bcrypt —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ
    password_hash=$(python3 -c "
import bcrypt
password = '$password'.encode('utf-8')
hashed = bcrypt.hashpw(password, bcrypt.gensalt())
print(hashed.decode('utf-8'))
" 2>/dev/null || echo "\$2b\$12\$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewAlzYIsGhL6VK5u")
    
    # SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∞
    SQL="
    INSERT INTO users (
        email, 
        hashed_password, 
        full_name, 
        is_active, 
        is_superuser, 
        is_verified,
        company,
        position,
        created_at,
        updated_at
    ) VALUES (
        '$email',
        '$password_hash',
        '$full_name',
        true,
        true,
        true,
        'DevAssist Pro',
        'System Administrator',
        NOW(),
        NOW()
    ) ON CONFLICT (email) DO UPDATE SET
        is_superuser = true,
        is_active = true,
        is_verified = true,
        updated_at = NOW();
    "
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º SQL
    if docker exec -i "$PG_CONTAINER" psql -U devassist_user -d devassist_pro -c "$SQL" 2>/dev/null; then
        print_success "–ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!"
        return 0
    else
        # –ü—Ä–æ–±—É–µ–º —Å –¥—Ä—É–≥–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        if docker exec -i "$PG_CONTAINER" psql -U devassist -d devassist_pro -c "$SQL" 2>/dev/null; then
            print_success "–ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!"
            return 0
        elif docker exec -i "$PG_CONTAINER" psql -U postgres -d devassist_pro -c "$SQL" 2>/dev/null; then
            print_success "–ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!"
            return 0
        else
            print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å SQL –∑–∞–ø—Ä–æ—Å"
            return 1
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
create_tables_if_needed() {
    print_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É Docker Compose
    if command -v "docker" >/dev/null 2>&1 && docker compose version >/dev/null 2>&1; then
        DOCKER_CMD="docker compose"
    elif command -v "docker-compose" >/dev/null 2>&1; then
        DOCKER_CMD="docker-compose"
    else
        return 1
    fi
    
    # –ù–∞—Ö–æ–¥–∏–º PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    PG_CONTAINER=$($DOCKER_CMD ps --format "table {{.Names}}" | grep -E "(postgres|db)" | head -1)
    
    if [ -z "$PG_CONTAINER" ]; then
        print_warning "PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü"
        return 1
    fi
    
    # SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã users
    CREATE_USERS_TABLE="
    CREATE TABLE IF NOT EXISTS users (
        id SERIAL PRIMARY KEY,
        email VARCHAR(255) UNIQUE NOT NULL,
        hashed_password VARCHAR(255) NOT NULL,
        full_name VARCHAR(255) NOT NULL,
        is_active BOOLEAN DEFAULT true,
        is_superuser BOOLEAN DEFAULT false,
        is_verified BOOLEAN DEFAULT false,
        company VARCHAR(255),
        position VARCHAR(255),
        phone VARCHAR(50),
        created_at TIMESTAMP DEFAULT NOW(),
        updated_at TIMESTAMP DEFAULT NOW()
    );
    
    CREATE INDEX IF NOT EXISTS idx_users_email ON users(email);
    CREATE INDEX IF NOT EXISTS idx_users_is_active ON users(is_active);
    CREATE INDEX IF NOT EXISTS idx_users_is_superuser ON users(is_superuser);
    "
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
    if docker exec -i "$PG_CONTAINER" psql -U devassist_user -d devassist_pro -c "$CREATE_USERS_TABLE" 2>/dev/null; then
        print_success "–¢–∞–±–ª–∏—Ü—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã/—Å–æ–∑–¥–∞–Ω—ã"
    elif docker exec -i "$PG_CONTAINER" psql -U devassist -d devassist_pro -c "$CREATE_USERS_TABLE" 2>/dev/null; then
        print_success "–¢–∞–±–ª–∏—Ü—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã/—Å–æ–∑–¥–∞–Ω—ã"
    elif docker exec -i "$PG_CONTAINER" psql -U postgres -d devassist_pro -c "$CREATE_USERS_TABLE" 2>/dev/null; then
        print_success "–¢–∞–±–ª–∏—Ü—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã/—Å–æ–∑–¥–∞–Ω—ã"
    else
        print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å/—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_python_deps() {
    if ! python3 -c "import bcrypt" 2>/dev/null; then
        print_warning "bcrypt –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        if command -v pip3 >/dev/null 2>&1; then
            pip3 install bcrypt >/dev/null 2>&1 || true
        elif command -v apt-get >/dev/null 2>&1; then
            apt-get update >/dev/null 2>&1 && apt-get install -y python3-bcrypt >/dev/null 2>&1 || true
        fi
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    DEFAULT_EMAIL="admin@devassist.pro"
    DEFAULT_PASSWORD="admin123456"
    DEFAULT_NAME="System Administrator"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    EMAIL=${1:-$DEFAULT_EMAIL}
    PASSWORD=${2:-$DEFAULT_PASSWORD}
    FULL_NAME=${3:-$DEFAULT_NAME}
    
    print_info "–°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:"
    print_info "  Email: $EMAIL"
    print_info "  –ò–º—è: $FULL_NAME"
    print_info "  –ü–∞—Ä–æ–ª—å: [—Å–∫—Ä—ã—Ç]"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    check_python_deps
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    create_tables_if_needed
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞ —á–µ—Ä–µ–∑ API
    if create_admin_via_api "$EMAIL" "$PASSWORD" "$FULL_NAME"; then
        echo ""
        print_success "‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ API!"
    else
        # –ï—Å–ª–∏ API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–∞–ø—Ä—è–º—É—é –≤ –ë–î
        print_info "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–∞–ø—Ä—è–º—É—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
        if create_admin_via_db "$EMAIL" "$PASSWORD" "$FULL_NAME"; then
            echo ""
            print_success "‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!"
        else
            print_error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
            echo ""
            print_info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
            print_info "1. –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã: docker compose ps"
            print_info "2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏: docker compose logs"
            print_info "3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã: docker compose restart"
            exit 1
        fi
    fi
    
    echo ""
    print_success "üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å:"
    print_info "   URL: http://46.149.71.162/admin"
    print_info "   Email: $EMAIL"
    print_info "   –ü–∞—Ä–æ–ª—å: $PASSWORD"
    echo ""
    print_warning "‚ö†Ô∏è  –í–ê–ñ–ù–û: –°—Ä–∞–∑—É –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞ —Å–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [email] [password] [full_name]"
    echo ""
    echo "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:"
    echo "  email      Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: admin@devassist.pro)"
    echo "  password   –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: admin123456)"
    echo "  full_name  –ü–æ–ª–Ω–æ–µ –∏–º—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: System Administrator)"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0"
    echo "  $0 admin@example.com mypassword 'John Doe'"
    echo "  $0 test@test.com"
    echo ""
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "$1" in
    -h|--help|help)
        show_help
        exit 0
        ;;
    *)
        main "$@"
        ;;
esac