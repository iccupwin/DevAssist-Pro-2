#!/bin/bash

# DevAssist Pro - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –º–æ–Ω–æ–ª–∏—Ç–Ω–æ–≥–æ backend'–∞
# –ê–≤—Ç–æ—Ä: Claude Code Assistant

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_test() {
    echo -e "${BLUE}[TEST]${NC} $1"
}

BASE_URL="http://localhost:8000"

echo "üß™ DevAssist Pro - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API"
echo "=" * 50

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è endpoint'–∞
test_endpoint() {
    local method="$1"
    local endpoint="$2"
    local description="$3"
    local expected_status="${4:-200}"
    
    log_test "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $description"
    
    if [ "$method" = "GET" ]; then
        response=$(curl -s -w "\n%{http_code}" "$BASE_URL$endpoint")
    else
        response=$(curl -s -w "\n%{http_code}" -X "$method" "$BASE_URL$endpoint")
    fi
    
    http_code=$(echo "$response" | tail -n 1)
    body=$(echo "$response" | sed '$d')
    
    if [ "$http_code" = "$expected_status" ]; then
        log_info "‚úÖ $endpoint - OK ($http_code)"
        if [ ${#body} -lt 200 ]; then
            echo "   –û—Ç–≤–µ—Ç: $body"
        else
            echo "   –û—Ç–≤–µ—Ç: $(echo "$body" | head -c 100)..."
        fi
    else
        log_error "‚ùå $endpoint - FAILED ($http_code)"
        echo "   –û–∂–∏–¥–∞–ª—Å—è: $expected_status, –ø–æ–ª—É—á–µ–Ω: $http_code"
    fi
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
log_test "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
if curl -s "$BASE_URL" > /dev/null; then
    log_info "‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    log_error "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ $BASE_URL"
    exit 1
fi

echo ""

# –û—Å–Ω–æ–≤–Ω—ã–µ endpoints
test_endpoint "GET" "/" "–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
test_endpoint "GET" "/health" "Health check"
test_endpoint "GET" "/api" "API –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"

# –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ endpoints
test_endpoint "GET" "/api/admin/status" "–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"

# LLM/AI endpoints
test_endpoint "GET" "/api/llm/providers" "AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã"
test_endpoint "GET" "/api/llm/health" "–ó–¥–æ—Ä–æ–≤—å–µ AI"

# Analytics endpoints
test_endpoint "GET" "/api/analytics/dashboard" "–î–∞—à–±–æ—Ä–¥ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"

# Activity endpoints
test_endpoint "GET" "/api/activity" "–õ–µ–Ω—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"

echo "üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
log_test "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ AI..."
ai_health=$(curl -s "$BASE_URL/api/llm/health")
if echo "$ai_health" | grep -q "healthy"; then
    log_info "‚úÖ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
else
    log_warn "‚ö†Ô∏è  AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã —Ç—Ä–µ–±—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ health check
log_test "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
health_response=$(curl -s "$BASE_URL/health")
if echo "$health_response" | grep -q "healthy"; then
    log_info "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    log_warn "‚ö†Ô∏è  –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–∏—Å—Ç–µ–º–æ–π"
fi

echo ""
echo "üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
echo "   ‚Ä¢ Swagger UI: $BASE_URL/docs"
echo "   ‚Ä¢ Redoc:      $BASE_URL/redoc"
echo "   ‚Ä¢ Health:     $BASE_URL/health"
echo "   ‚Ä¢ Admin:      $BASE_URL/api/admin/status"
echo ""

log_info "üí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Swagger UI: $BASE_URL/docs"