#!/bin/bash

set -e

echo "üöÄ DevAssist Pro - –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ò –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï"
echo "=========================================================="
echo "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, CORS –∏ TypeScript –æ—à–∏–±–æ–∫"
echo ""

SERVER_IP="46.149.71.162"
LOG_FILE="/tmp/devassist-fix-$(date +%Y%m%d-%H%M%S).log"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

log "üîß –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è DevAssist Pro"

echo "üìã –≠—Ç–∞–ø—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "  1. ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
echo "  2. ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ TypeScript –æ—à–∏–±–æ–∫"
echo "  3. üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "  4. üßπ –û—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞"
echo "  5. üê≥ –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫"
echo "  6. üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"
echo ""

# –≠—Ç–∞–ø 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
log "üìä –≠—Ç–∞–ø 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ ! -f ".env.production" ]; then
    log "‚ùå –§–∞–π–ª .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if [ ! -f "backend/.env.production" ]; then
    log "‚ùå –§–∞–π–ª backend/.env.production –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

log "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"

# –≠—Ç–∞–ø 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
log "üìä –≠—Ç–∞–ø 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if grep -q "http://46.149.71.162:3000" .env.production; then
    log "‚úÖ CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤ .env.production –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞"
else
    log "‚ö†Ô∏è  –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ .env.production"
    sed -i 's|ALLOWED_ORIGINS=.*|ALLOWED_ORIGINS=http://46.149.71.162:3000,http://46.149.71.162,https://46.149.71.162,http://localhost:3000,http://localhost|' .env.production
fi

if grep -q "http://46.149.71.162:3000" backend/.env.production; then
    log "‚úÖ CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤ backend/.env.production –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞"
else
    log "‚ö†Ô∏è  –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ backend/.env.production"
    sed -i 's|ALLOWED_ORIGINS=.*|ALLOWED_ORIGINS=http://46.149.71.162:3000,http://46.149.71.162,https://46.149.71.162,http://localhost:3000,http://localhost|' backend/.env.production
fi

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript —Ç–∏–ø–æ–≤..."
if grep -q "export interface ComparisonResult" frontend/src/utils/types.ts; then
    log "‚úÖ TypeScript —Ç–∏–ø—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
else
    log "‚ö†Ô∏è  –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö TypeScript —Ç–∏–ø–æ–≤"
    cat >> frontend/src/utils/types.ts << 'EOF'

// –¢–∏–ø—ã –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–∞
export interface ComparisonResult {
  summary: string;
  recommendations: string[];
  bestProposal?: {
    id: string;
    companyName: string;
    score: number;
    reasons: string[];
  };
}

export interface RealAnalysisResult {
  id: string;
  tz_name: string;
  kp_name: string;
  company_name: any;
  tech_stack: any;
  pricing: any;
  timeline: any;
  total_cost: any;
  currency: any;
  cost_breakdown: any;
  competitive_advantages: any;
  team_expertise: any;
  methodology: any;
  quality_assurance: any;
  // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—è
  post_launch_support?: any;
  document_quality?: any;
  file_format?: any;
  summary: any;
  confidence_score: any;
}
EOF
fi

# –≠—Ç–∞–ø 3: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
log "üõë –≠—Ç–∞–ø 3: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose down 2>/dev/null || true
docker compose -f docker-compose.production.yml down 2>/dev/null || true
docker compose -f docker-compose.dev.yml down 2>/dev/null || true

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞—Ö..."
sudo fuser -k 3000/tcp 2>/dev/null || true
sudo fuser -k 8000/tcp 2>/dev/null || true
sudo fuser -k 8001/tcp 2>/dev/null || true
sudo fuser -k 8002/tcp 2>/dev/null || true
sudo fuser -k 8003/tcp 2>/dev/null || true
sudo fuser -k 8004/tcp 2>/dev/null || true
sudo fuser -k 8005/tcp 2>/dev/null || true
sudo fuser -k 8006/tcp 2>/dev/null || true

# –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
sleep 3

log "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –≠—Ç–∞–ø 4: –û—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞
log "üßπ –≠—Ç–∞–ø 4: –û—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞"

echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
docker system prune -f 2>/dev/null || true
docker volume prune -f 2>/dev/null || true

echo "üßπ –û—á–∏—Å—Ç–∫–∞ frontend build –∫—ç—à–∞..."
cd frontend
npm cache clean --force 2>/dev/null || true
rm -rf node_modules/.cache 2>/dev/null || true
rm -rf build 2>/dev/null || true
cd ..

log "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –≠—Ç–∞–ø 5: –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
log "üê≥ –≠—Ç–∞–ø 5: –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"

echo "üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cp .env.production .env
cp backend/.env.production backend/.env

echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
docker compose build --no-cache --pull

echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker compose up -d

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ (60 —Å–µ–∫—É–Ω–¥)..."
sleep 60

log "‚úÖ –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"

# –≠—Ç–∞–ø 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
log "üìä –≠—Ç–∞–ø 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤"

echo "üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker compose ps

echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"
for port in 3000 8000 8001 8002 8003 8004 8005 8006; do
    if netstat -ln | grep -q ":$port "; then
        echo "  ‚úÖ Port $port: –∞–∫—Ç–∏–≤–µ–Ω"
    else
        echo "  ‚ùå Port $port: –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    fi
done

echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend
if curl -f -s --max-time 10 "http://$SERVER_IP:3000" >/dev/null 2>&1; then
    echo "  ‚úÖ Frontend (3000): –¥–æ—Å—Ç—É–ø–µ–Ω"
    FRONTEND_OK=true
else
    echo "  ‚ùå Frontend (3000): –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    FRONTEND_OK=false
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API Gateway
if curl -f -s --max-time 10 "http://$SERVER_IP:8000/health" >/dev/null 2>&1; then
    echo "  ‚úÖ API Gateway (8000): –¥–æ—Å—Ç—É–ø–µ–Ω"
    BACKEND_OK=true
else
    echo "  ‚ùå API Gateway (8000): –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    BACKEND_OK=false
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Monolithic App (–ø–æ—Ä—Ç 8000 —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω –∫–∞–∫ API Gateway)
# –í –º–æ–Ω–æ–ª–∏—Ç–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ auth —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if curl -f -s --max-time 10 "http://$SERVER_IP:8000/api/auth/health" >/dev/null 2>&1; then
    echo "  ‚úÖ Auth Module: –¥–æ—Å—Ç—É–ø–µ–Ω"
    AUTH_OK=true
else
    echo "  ‚ö†Ô∏è  Auth Module: –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ API Gateway"
    AUTH_OK=$BACKEND_OK
fi

# –≠—Ç–∞–ø 7: –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
log "üß™ –≠—Ç–∞–ø 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"

echo ""
echo "üß™ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏..."
if [ -f "./auth-verification.sh" ]; then
    chmod +x ./auth-verification.sh
    if ./auth-verification.sh; then
        log "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–∞"
        AUTH_TEST_OK=true
    else
        log "‚ùå –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ—É—Å–ø–µ—à–Ω–∞"
        AUTH_TEST_OK=false
    fi
else
    echo "‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    AUTH_TEST_OK=false
fi

# –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
echo ""
echo "üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢"
echo "=================="

log "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è:"

if [ "$FRONTEND_OK" = true ] && [ "$BACKEND_OK" = true ] && [ "$AUTH_OK" = true ]; then
    if [ "$AUTH_TEST_OK" = true ]; then
        echo "üéâ –ü–û–õ–ù–´–ô –£–°–ü–ï–•! –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç, –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!"
        echo ""
        echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URLs:"
        echo "   Frontend: http://$SERVER_IP:3000"
        echo "   Backend API: http://$SERVER_IP:8000"
        echo "   Auth Service: http://$SERVER_IP:8001"
        echo ""
        echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã:"
        echo "   ‚Ä¢ CORS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
        echo "   ‚Ä¢ TypeScript —Ç–∏–ø—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã"
        echo "   ‚Ä¢ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞"
        
        log "üéâ –£–°–ü–ï–®–ù–û–ï –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï - –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        
        echo ""
        echo "üìã –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
        echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker compose down"
        echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker compose restart"
        echo "   –õ–æ–≥–∏: docker compose logs -f"
        echo "   –°—Ç–∞—Ç—É—Å: docker compose ps"
        
        exit 0
    else
        echo "‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•. –°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π."
        log "‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–• - –ü—Ä–æ–±–ª–µ–º—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π"
        exit 1
    fi
else
    echo "üö® –û–®–ò–ë–ö–ê –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø! –ù–µ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å."
    
    echo ""
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
    [ "$FRONTEND_OK" = false ] && echo "   ‚Ä¢ Frontend"
    [ "$BACKEND_OK" = false ] && echo "   ‚Ä¢ API Gateway"
    [ "$AUTH_OK" = false ] && echo "   ‚Ä¢ Auth Service"
    
    echo ""
    echo "üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é:"
    echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose logs"
    echo "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—Ä—Ç—ã: netstat -tulpn | grep -E ':(3000|8000|8001)'"
    echo "   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo "   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ .env"
    
    echo ""
    echo "üìã –§–∞–π–ª –ª–æ–≥–∞: $LOG_FILE"
    
    log "üö® –û–®–ò–ë–ö–ê –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø - –ù–µ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å"
    exit 2
fi