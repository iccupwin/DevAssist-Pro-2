#!/bin/bash

# DevAssist Pro - –ú–µ–Ω–µ–¥–∂–µ—Ä –º–æ–Ω–æ–ª–∏—Ç–Ω–æ–≥–æ backend'–∞
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

show_help() {
    echo "üöÄ DevAssist Pro - –ú–µ–Ω–µ–¥–∂–µ—Ä –º–æ–Ω–æ–ª–∏—Ç–Ω–æ–≥–æ Backend"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  start     - –ó–∞–ø—É—Å—Ç–∏—Ç—å backend"
    echo "  stop      - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å backend"
    echo "  restart   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å backend"
    echo "  status    - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "  test      - –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å API"
    echo "  logs      - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "  clean     - –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ (–û–°–¢–û–†–û–ñ–ù–û!)"
    echo "  help      - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 start"
    echo "  $0 status"
    echo "  $0 test"
}

case "$1" in
    start)
        echo -e "${GREEN}üöÄ –ó–∞–ø—É—Å–∫ DevAssist Pro Backend...${NC}"
        ./start-monolith-backend.sh
        ;;
    stop)
        echo -e "${RED}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ DevAssist Pro Backend...${NC}"
        ./stop-monolith-backend.sh
        ;;
    restart)
        echo -e "${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ DevAssist Pro Backend...${NC}"
        ./stop-monolith-backend.sh
        sleep 3
        ./start-monolith-backend.sh
        ;;
    status)
        echo -e "${BLUE}üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ DevAssist Pro Backend...${NC}"
        ./check-monolith-status.sh
        ;;
    test)
        echo -e "${BLUE}üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API DevAssist Pro Backend...${NC}"
        ./test-monolith-api.sh
        ;;
    logs)
        echo -e "${BLUE}üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ DevAssist Pro Backend...${NC}"
        if [ -f "backend/docker-compose.monolith.yml" ]; then
            cd backend
            if command -v docker-compose &> /dev/null; then
                docker-compose -f docker-compose.monolith.yml logs -f
            else
                docker compose -f docker-compose.monolith.yml logs -f
            fi
        else
            echo -e "${RED}–§–∞–π–ª docker-compose.monolith.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
        fi
        ;;
    clean)
        echo -e "${RED}üóëÔ∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö DevAssist Pro!${NC}"
        read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ! [y/N]: " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            ./stop-monolith-backend.sh
            if [ -f "backend/docker-compose.monolith.yml" ]; then
                cd backend
                if command -v docker-compose &> /dev/null; then
                    docker-compose -f docker-compose.monolith.yml down -v
                else
                    docker compose -f docker-compose.monolith.yml down -v
                fi
                docker system prune -f --volumes
                echo -e "${GREEN}‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"
            fi
        else
            echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
        fi
        ;;
    help|--help|-h|"")
        show_help
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1${NC}"
        echo ""
        show_help
        exit 1
        ;;
esac