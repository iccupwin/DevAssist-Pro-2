#!/bin/bash

# DevAssist Pro - –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ü–û–õ–ù–û–ì–û –º–æ–Ω–æ–ª–∏—Ç–Ω–æ–≥–æ backend'–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å app_simple.py –Ω–∞ app.py

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

echo "üîÑ DevAssist Pro - –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ü–û–õ–ù–´–ô –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π backend"
echo "=" * 70

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "backend/docker-compose.monolith.yml" ]; then
    log_error "–§–∞–π–ª backend/docker-compose.monolith.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    log_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ DevAssist-Pro"
    exit 1
fi

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è docker compose
if command -v docker-compose &> /dev/null; then
    DOCKER_COMPOSE="docker-compose"
else
    DOCKER_COMPOSE="docker compose"
fi

log_step "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
pkill -f "python.*app" 2>/dev/null || true
pkill -f "uvicorn" 2>/dev/null || true

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –µ—Å–ª–∏ –µ—Å—Ç—å
cd backend
$DOCKER_COMPOSE down 2>/dev/null || true
$DOCKER_COMPOSE -f docker-compose.dev.yml down 2>/dev/null || true
$DOCKER_COMPOSE -f docker-compose.monolith.yml down 2>/dev/null || true

log_info "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
cd ..

if [ ! -f ".env" ]; then
    log_warn "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º –∏–∑ .env.example..."
    if [ -f ".env.example" ]; then
        cp .env.example .env
        log_info "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
        log_warn "‚ö†Ô∏è  –í–ê–ñ–ù–û: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏ –≤ .env —Ñ–∞–π–ª–µ!"
    else
        log_error "–§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        exit 1
    fi
fi

log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker Compose..."
cd backend

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if ! $DOCKER_COMPOSE -f docker-compose.monolith.yml config >/dev/null 2>&1; then
    log_error "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è docker-compose.monolith.yml –Ω–µ–≤–∞–ª–∏–¥–Ω–∞!"
    log_error "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Ñ–∞–π–ª–∞"
    exit 1
fi

log_info "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docker Compose –≤–∞–ª–∏–¥–Ω–∞"

log_step "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –æ–±—Ä–∞–∑–æ–≤..."
docker system prune -f >/dev/null 2>&1 || true

log_step "–°–±–æ—Ä–∫–∞ –º–æ–Ω–æ–ª–∏—Ç–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞..."
$DOCKER_COMPOSE -f docker-compose.monolith.yml build --no-cache

log_step "–ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –º–æ–Ω–æ–ª–∏—Ç–Ω–æ–≥–æ backend..."
$DOCKER_COMPOSE -f docker-compose.monolith.yml up -d

log_step "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 15

log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
$DOCKER_COMPOSE -f docker-compose.monolith.yml ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
max_attempts=60
attempt=1

while [ $attempt -le $max_attempts ]; do
    if curl -s http://localhost:8000/health >/dev/null 2>&1; then
        health_response=$(curl -s http://localhost:8000/health)
        if echo "$health_response" | grep -q "devassist-pro-monolith"; then
            log_info "‚úÖ –ü–û–õ–ù–´–ô –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π backend —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
            break
        else
            log_warn "–í—Å–µ –µ—â–µ –∑–∞–ø—É—â–µ–Ω–∞ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è, –∂–¥–µ–º..."
        fi
    else
        log_warn "–ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: Backend –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤..."
    fi
    sleep 2
    ((attempt++))
done

if [ $attempt -gt $max_attempts ]; then
    log_error "‚ùå Backend –Ω–µ —Å–º–æ–≥ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –∑–∞ —Ä–∞–∑—É–º–Ω–æ–µ –≤—Ä–µ–º—è"
    log_error "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: $DOCKER_COMPOSE -f docker-compose.monolith.yml logs"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoints
log_step "–ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints..."

test_endpoint() {
    local endpoint="$1"
    local description="$2"
    
    if curl -s "http://localhost:8000$endpoint" >/dev/null 2>&1; then
        log_info "‚úÖ $endpoint - OK"
    else
        log_warn "‚ö†Ô∏è  $endpoint - –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
}

test_endpoint "/health" "Health check"
test_endpoint "/api" "API –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
test_endpoint "/api/admin/status" "Admin —Å—Ç–∞—Ç—É—Å"
test_endpoint "/api/llm/providers" "AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã"
test_endpoint "/api/analytics/dashboard" "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"

echo ""
log_info "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –º–æ–Ω–æ–ª–∏—Ç–Ω–æ–≥–æ backend –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "=" * 70
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
final_health=$(curl -s http://localhost:8000/health 2>/dev/null || echo '{"service":"unknown"}')
service_name=$(echo "$final_health" | grep -o '"service":"[^"]*"' | cut -d'"' -f4)

if [ "$service_name" = "devassist-pro-monolith" ]; then
    log_info "‚úÖ –£–°–ü–ï–•: –ó–∞–ø—É—â–µ–Ω –ø–æ–ª–Ω—ã–π –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π backend"
else
    log_warn "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í–æ–∑–º–æ–∂–Ω–æ, –∑–∞–ø—É—â–µ–Ω–∞ –Ω–µ —Ç–∞ –≤–µ—Ä—Å–∏—è"
    log_warn "   –¢–µ–∫—É—â–∏–π —Å–µ—Ä–≤–∏—Å: $service_name"
    log_warn "   –û–∂–∏–¥–∞–ª—Å—è: devassist-pro-monolith"
fi

echo ""
echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:"
echo "   ‚Ä¢ –ì–ª–∞–≤–Ω–∞—è:      http://localhost:8000/"
echo "   ‚Ä¢ Health:       http://localhost:8000/health"  
echo "   ‚Ä¢ API Docs:     http://localhost:8000/docs"
echo "   ‚Ä¢ Admin:        http://localhost:8000/api/admin/status"
echo "   ‚Ä¢ AI –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã: http://localhost:8000/api/llm/providers"
echo "   ‚Ä¢ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞:    http://localhost:8000/api/analytics/dashboard"
echo ""

echo "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   ‚Ä¢ –õ–æ–≥–∏:         cd backend && $DOCKER_COMPOSE -f docker-compose.monolith.yml logs -f"
echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞:    cd backend && $DOCKER_COMPOSE -f docker-compose.monolith.yml down"
echo "   ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:   cd backend && $DOCKER_COMPOSE -f docker-compose.monolith.yml restart"
echo ""

log_info "‚ú® –ì–æ—Ç–æ–≤–æ! –ü–æ–ª–Ω—ã–π –º–æ–Ω–æ–ª–∏—Ç–Ω—ã–π backend DevAssist Pro –∑–∞–ø—É—â–µ–Ω!"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
log_step "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
$DOCKER_COMPOSE -f docker-compose.monolith.yml logs --tail=10 app