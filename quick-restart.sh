#!/bin/bash

set -e

echo "‚ö° DevAssist Pro - –ë–´–°–¢–†–´–ô –ü–ï–†–ï–ó–ê–ü–£–°–ö"
echo "==================================="
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è CORS –∏–∑–º–µ–Ω–µ–Ω–∏–π"
echo ""

SERVER_IP="46.149.71.162"

echo "üìã –≠—Ç–∞–ø—ã:"
echo "  1. üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "  2. üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
echo "  3. üöÄ –ó–∞–ø—É—Å–∫ –±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏"
echo "  4. üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞"
echo ""

# –≠—Ç–∞–ø 1: –û—Å—Ç–∞–Ω–æ–≤–∫–∞
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose down 2>/dev/null || true

# –≠—Ç–∞–ø 2: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ .env..."
if [ -f ".env.production" ]; then
    cp .env.production .env
    echo "‚úÖ .env –æ–±–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚ö†Ô∏è  .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –≠—Ç–∞–ø 3: –ó–∞–ø—É—Å–∫
echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker compose up -d

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (60 —Å–µ–∫—É–Ω–¥)..."
sleep 60

# –≠—Ç–∞–ø 4: –ü—Ä–æ–≤–µ—Ä–∫–∞
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞:"
docker compose ps

echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:"

# Frontend
if curl -f -s --max-time 10 "http://$SERVER_IP:3000" >/dev/null 2>&1; then
    echo "  ‚úÖ Frontend: —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "  ‚ùå Frontend: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# Backend
if curl -f -s --max-time 10 "http://$SERVER_IP:8000/health" >/dev/null 2>&1; then
    echo "  ‚úÖ Backend: —Ä–∞–±–æ—Ç–∞–µ—Ç"
    BACKEND_OK=true
elif curl -f -s --max-time 10 "http://$SERVER_IP:80/health" >/dev/null 2>&1; then
    echo "  ‚úÖ Backend (—á–µ—Ä–µ–∑ –ø–æ—Ä—Ç 80): —Ä–∞–±–æ—Ç–∞–µ—Ç"
    BACKEND_OK=true
else
    echo "  ‚ùå Backend: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    BACKEND_OK=false
fi

# CORS —Ç–µ—Å—Ç
if [ "$BACKEND_OK" = true ]; then
    echo ""
    echo "üß™ –¢–µ—Å—Ç CORS..."
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–±–æ—á–∏–π –ø–æ—Ä—Ç
    if curl -f -s --max-time 5 "http://$SERVER_IP:8000/health" >/dev/null 2>&1; then
        BACKEND_PORT=8000
    else
        BACKEND_PORT=80
    fi
    
    CORS_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" \
        -H "Origin: http://$SERVER_IP:3000" \
        -H "Access-Control-Request-Method: POST" \
        -H "Access-Control-Request-Headers: Content-Type,Authorization" \
        -X OPTIONS \
        "http://$SERVER_IP:$BACKEND_PORT/api/auth/login" 2>/dev/null || echo "000")
    
    if [ "$CORS_RESPONSE" = "200" ] || [ "$CORS_RESPONSE" = "204" ]; then
        echo "  ‚úÖ CORS: —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $CORS_RESPONSE)"
        
        echo ""
        echo "üß™ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏..."
        if [ -f "./auth-verification.sh" ]; then
            ./auth-verification.sh
        fi
    else
        echo "  ‚ùå CORS: –ø—Ä–æ–±–ª–µ–º–∞ (HTTP $CORS_RESPONSE)"
        
        echo ""
        echo "üîß CORS –≤—Å—ë –µ—â—ë –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
        echo "   1. –ü–æ–ª–Ω—É—é –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É: ./fix-monolith-deploy.sh"
        echo "   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose logs app"
        echo "   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ"
    fi
else
    echo ""
    echo "‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ—Å–±–æ—Ä–∫—É:"
    echo "   ./fix-monolith-deploy.sh"
fi

echo ""
echo "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   –õ–æ–≥–∏: docker compose logs -f"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker compose down"
echo "   –°—Ç–∞—Ç—É—Å: docker compose ps"