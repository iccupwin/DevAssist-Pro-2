#!/bin/bash

# DevAssist Pro - –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ –±–µ–∑ Docker Compose
# –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ frontend —á–µ—Ä–µ–∑ npm start

set -e

echo "üöÄ –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ DevAssist Pro (—Ç–æ–ª—å–∫–æ frontend)..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
    if ! command -v node &> /dev/null; then
        error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –¥–ª—è –∑–∞–ø—É—Å–∫–∞ frontend."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
    if ! command -v npm &> /dev/null; then
        error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ npm –¥–ª—è –∑–∞–ø—É—Å–∫–∞ frontend."
        exit 1
    fi
    
    log "‚úÖ Node.js $(node --version) –∏ npm $(npm --version) —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ frontend
    if [[ ! -z "$FRONTEND_PID" ]]; then
        info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ frontend (PID: $FRONTEND_PID)..."
        kill $FRONTEND_PID 2>/dev/null || true
    fi
    
    log "üõë Frontend –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 0
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM EXIT

# –ó–∞–ø—É—Å–∫ frontend
start_frontend() {
    log "–ó–∞–ø—É—Å–∫ frontend..."
    
    cd frontend
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è package.json
    if [[ ! -f "package.json" ]]; then
        error "–§–∞–π–ª package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ frontend"
        exit 1
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –µ—Å–ª–∏ node_modules –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [[ ! -d "node_modules" ]]; then
        info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend..."
        npm install
    else
        info "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º npm install"
    fi
    
    # –ó–∞–ø—É—Å–∫ frontend
    info "–ó–∞–ø—É—Å–∫ React development server..."
    log "‚úÖ Frontend –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ http://localhost:3000"
    
    # –ó–∞–ø—É—Å–∫ —Å –≤—ã–≤–æ–¥–æ–º –ª–æ–≥–æ–≤
    npm start
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ DevAssist Pro Simple Startup (Frontend Only)"
    echo
    
    warning "‚ö†Ô∏è  –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ frontend! Backend –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ."
    warning "‚ö†Ô∏è  –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Docker –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose."
    echo
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    check_dependencies
    
    # –ó–∞–ø—É—Å–∫ frontend
    start_frontend
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"