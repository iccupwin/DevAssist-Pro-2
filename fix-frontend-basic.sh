#!/bin/bash

echo "üîß –ë–ê–ó–û–í–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï FRONTEND (–ø–æ–ø—ã—Ç–∫–∞ #4)"
echo "===========================================" 
echo ""
echo "‚ùå –ù–ï–£–î–ê–ß–ù–´–ï –ü–û–ü–´–¢–ö–ò:"
echo "   1. ‚ùå Dev server (–∑–∞–≤–∏—Å–∞–µ—Ç)"
echo "   2. ‚ùå Production build (–∑–∞–≤–∏—Å–∞–µ—Ç –Ω–∞ npm run build)"
echo "   3. ‚ùå npm ci --only=production (–æ—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏)"
echo ""
echo "üéØ –¢–ï–ö–£–©–ê–Ø –ü–û–ü–´–¢–ö–ê: –ë–∞–∑–æ–≤—ã–π npm install"
echo ""

echo "üõë –û—á–∏—Å—Ç–∫–∞..."
docker stop devassist-frontend 2>/dev/null || true
docker rm devassist-frontend 2>/dev/null || true
docker rmi devassist-frontend-basic 2>/dev/null || true

cd frontend

echo ""
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–≥–æ Dockerfile..."
cat > Dockerfile.basic << 'EOF'
FROM node:18-alpine

WORKDIR /app

COPY package*.json ./

# –ë–∞–∑–æ–≤–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
RUN npm config set registry https://registry.npmjs.org/ && \
    npm install --timeout=300000

COPY . .

ENV NODE_ENV=development
ENV REACT_APP_API_URL=http://46.149.71.162:8000
ENV HOST=0.0.0.0
ENV PORT=3000

EXPOSE 3000

CMD ["npm", "start"]
EOF

echo "   ‚úÖ –ë–∞–∑–æ–≤—ã–π Dockerfile —Å–æ–∑–¥–∞–Ω"

echo ""
echo "üöÄ –ë–∞–∑–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ (5 –º–∏–Ω—É—Ç —Ç–∞–π–º–∞—É—Ç)..."
timeout 300 docker build -f Dockerfile.basic -t devassist-frontend-basic . --no-cache

if [ $? -eq 0 ]; then
    echo "   ‚úÖ –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω"
    
    echo ""
    echo "üöÄ –ó–∞–ø—É—Å–∫ —Å –±–æ–ª—å—à–∏–º —Ç–∞–π–º–∞—É—Ç–æ–º..."
    docker run -d \
        --name devassist-frontend \
        -p 3000:3000 \
        --memory="2g" \
        devassist-frontend-basic
    
    if [ $? -eq 0 ]; then
        echo "   ‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"
        
        echo ""
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 90 —Å–µ–∫—É–Ω–¥..."
        sleep 90
        
        echo ""
        echo "üìã –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
        docker ps | grep frontend || echo "   –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"
        
        echo ""
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
        docker logs devassist-frontend --tail 10 2>/dev/null || echo "   –ù–µ—Ç –ª–æ–≥–æ–≤"
        
        echo ""
        echo "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:"
        LOCAL=$(curl -s --connect-timeout 5 --max-time 10 http://localhost:3000 2>/dev/null | head -c 20)
        if [ -n "$LOCAL" ]; then
            echo "   ‚úÖ –†–ê–ë–û–¢–ê–ï–¢! –û—Ç–≤–µ—Ç: $LOCAL..."
            echo ""
            echo "üéâ FRONTEND –ó–ê–ü–£–©–ï–ù:"
            echo "   http://46.149.71.162:3000"
            echo "   http://localhost:3000"
        else
            echo "   ‚ùå –ù–ï –û–¢–í–ï–ß–ê–ï–¢"
        fi
        
    else
        echo "   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
        echo ""
        echo "üìã –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ß–ï–ö-–õ–ò–°–¢ –ù–ï–£–î–ê–ß:"
        echo "   1. ‚ùå Dev server (–∑–∞–≤–∏—Å–∞–µ—Ç)"
        echo "   2. ‚ùå Production build (–∑–∞–≤–∏—Å–∞–µ—Ç)"
        echo "   3. ‚ùå npm ci --only=production (–æ—à–∏–±–∫–∞)"
        echo "   4. ‚ùå –ë–∞–∑–æ–≤—ã–π npm install (–æ—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞)"
    fi
    
elif [ $? -eq 124 ]; then
    echo "   ‚ùå –¢–∞–π–º–∞—É—Ç —Å–±–æ—Ä–∫–∏ (5 –º–∏–Ω—É—Ç)"
    echo ""
    echo "üìã –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ß–ï–ö-–õ–ò–°–¢ –ù–ï–£–î–ê–ß:"
    echo "   1. ‚ùå Dev server (–∑–∞–≤–∏—Å–∞–µ—Ç)"
    echo "   2. ‚ùå Production build (–∑–∞–≤–∏—Å–∞–µ—Ç)"
    echo "   3. ‚ùå npm ci --only=production (–æ—à–∏–±–∫–∞)"
    echo "   4. ‚ùå –ë–∞–∑–æ–≤—ã–π npm install (—Ç–∞–π–º–∞—É—Ç —Å–±–æ—Ä–∫–∏)"
else
    echo "   ‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏"
    echo ""
    echo "üìã –û–ë–ù–û–í–õ–ï–ù–ù–´–ô –ß–ï–ö-–õ–ò–°–¢ –ù–ï–£–î–ê–ß:"
    echo "   1. ‚ùå Dev server (–∑–∞–≤–∏—Å–∞–µ—Ç)"
    echo "   2. ‚ùå Production build (–∑–∞–≤–∏—Å–∞–µ—Ç)"
    echo "   3. ‚ùå npm ci --only=production (–æ—à–∏–±–∫–∞)"
    echo "   4. ‚ùå –ë–∞–∑–æ–≤—ã–π npm install (–æ—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏)"
fi

cd ..

echo ""
echo "üí° –ï–°–õ–ò –≠–¢–û –ù–ï –†–ê–ë–û–¢–ê–ï–¢, –ü–û–ü–†–û–ë–£–ï–ú:"
echo "   5. –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–µ–∑ Docker"
echo "   6. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞"
echo "   7. –ü—Ä—è–º–æ–π nginx —Å –≥–æ—Ç–æ–≤—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏"

echo ""
echo "‚úÖ –ë–∞–∑–æ–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"