# ===========================================
# DevAssist Pro - Unified Fullstack Deployment
# ===========================================

services:
  # ===== DATABASE SERVICE =====
  postgres:
    image: postgres:15-alpine
    container_name: devassist_postgres_fullstack
    environment:
      POSTGRES_DB: devassist_pro
      POSTGRES_USER: devassist
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devassist_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devassist -d devassist_pro"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - devassist_network

  # ===== CACHE SERVICE =====
  redis:
    image: redis:7-alpine
    container_name: devassist_redis_fullstack
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password} --appendonly yes
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - devassist_network

  # ===== UNIFIED APPLICATION SERVICE =====
  fullstack:
    build:
      context: .
      dockerfile: Dockerfile.fullstack
      args:
        - NODE_ENV=production
        - REACT_APP_API_URL=/api
        - REACT_APP_WEBSOCKET_URL=/ws
    container_name: devassist_fullstack
    ports:
      - "80:80"
    environment:
      # ===== APPLICATION SETTINGS =====
      ENVIRONMENT: production
      DEBUG: false
      LOG_LEVEL: INFO
      
      # ===== DATABASE CONFIGURATION =====
      POSTGRES_URL: postgresql://devassist:${POSTGRES_PASSWORD:-devassist_password}@postgres:5432/devassist_pro
      
      # ===== REDIS CONFIGURATION =====
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_password}@redis:6379/0
      
      # ===== CORS CONFIGURATION =====
      ALLOWED_ORIGINS: "http://localhost,http://localhost:80,http://127.0.0.1,http://127.0.0.1:80,${ALLOWED_ORIGINS:-}"
      
      # ===== FILE UPLOAD SETTINGS =====
      MAX_FILE_SIZE: 100MB
      SUPPORTED_FORMATS: pdf,docx,txt,doc
      
      # ===== AI PROVIDER CONFIGURATION =====
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY:-}
      USE_REAL_API: true
      
      # ===== SECURITY SETTINGS =====
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-your-super-secret-jwt-key-change-in-production}
      SESSION_SECRET: ${SESSION_SECRET:-your-super-secret-session-key-change-in-production}
      
      # ===== OAUTH CONFIGURATION =====
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      YANDEX_CLIENT_ID: ${YANDEX_CLIENT_ID:-}
      YANDEX_CLIENT_SECRET: ${YANDEX_CLIENT_SECRET:-}
      
      # ===== EMAIL CONFIGURATION =====
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      
      # ===== MONITORING =====
      ENABLE_MONITORING: ${ENABLE_MONITORING:-true}
      SENTRY_DSN: ${SENTRY_DSN:-}
      
      # ===== TIMEZONE =====
      TZ: ${TZ:-Europe/Moscow}
      
    volumes:
      - app_data:/app/data
      - app_logs:/var/log/devassist
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "/usr/local/bin/health-check.sh"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - devassist_network

# ===== NETWORK CONFIGURATION =====
networks:
  devassist_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ===== VOLUME CONFIGURATION =====
volumes:
  postgres_data:
    driver: local
  
  redis_data:
    driver: local
  
  app_data:
    driver: local
  
  app_logs:
    driver: local