#!/usr/bin/env python3
"""
Test Real KP Analyzer - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import requests
import json
import time

def test_real_kp_analyzer():
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–ü –ê–ù–ê–õ–ò–ó–ê–¢–û–†–ê –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò ===")
    
    # –†–µ–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    real_kp_text = '''
–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∂–∏–ª–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞ "–°–æ–ª–Ω–µ—á–Ω—ã–µ –°–∞–¥—ã"

–ò–°–ü–û–õ–ù–ò–¢–ï–õ–¨: –û–û–û "–ü—Ä–µ–º–∏—É–º–°—Ç—Ä–æ–π–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"
–°–¢–û–ò–ú–û–°–¢–¨: 250 000 000 —Ä—É–±–ª–µ–π
–°–†–û–ö–ò –í–´–ü–û–õ–ù–ï–ù–ò–Ø: 36 –º–µ—Å—è—Ü–µ–≤ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–∞
–ì–ê–†–ê–ù–¢–ò–Ø: 5 –ª–µ—Ç –Ω–∞ –≤—Å–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã
–û–ü–´–¢ –†–ê–ë–û–¢–´: 25 –ª–µ—Ç –≤ —Å—Ñ–µ—Ä–µ –∂–∏–ª–∏—â–Ω–æ–≥–æ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞
–õ–ò–¶–ï–ù–ó–ò–ò: –ß–ª–µ–Ω –°–†–û "–°–æ—é–∑ –°—Ç—Ä–æ–∏—Ç–µ–ª–µ–π", –ª–∏—Ü–µ–Ω–∑–∏—è ‚Ññ12345

–¢–ï–•–ù–ò–ß–ï–°–ö–û–ï –û–ü–ò–°–ê–ù–ò–ï:
- –û–±—â–∞—è –ø–ª–æ—â–∞–¥—å: 15,000 –∫–≤.–º
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä: 120 –µ–¥–∏–Ω–∏—Ü
- –≠—Ç–∞–∂–Ω–æ—Å—Ç—å: 12 —ç—Ç–∞–∂–µ–π
- –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: –º–æ–Ω–æ–ª–∏—Ç–Ω–æ-–∫–∞—Ä–∫–∞—Å–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è
- –§—É–Ω–¥–∞–º–µ–Ω—Ç: —Å–≤–∞–π–Ω–æ-—Ä–æ—Å—Ç–≤–µ—Ä–∫–æ–≤—ã–π
- –§–∞—Å–∞–¥: –Ω–∞–≤–µ—Å–Ω–æ–π –≤–µ–Ω—Ç–∏–ª–∏—Ä—É–µ–º—ã–π

–í–ö–õ–Æ–ß–ï–ù–û –í –°–¢–û–ò–ú–û–°–¢–¨:
- –ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ
- –í—Å–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ-–º–æ–Ω—Ç–∞–∂–Ω—ã–µ —Ä–∞–±–æ—Ç—ã
- –ë–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π
- –°–¥–∞—á–∞ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–¥ –∫–ª—é—á

–≠–¢–ê–ü–´ –í–´–ü–û–õ–ù–ï–ù–ò–Ø:
1. –ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è - 6 –º–µ—Å—è—Ü–µ–≤
2. –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–±–æ—Ç—ã - 3 –º–µ—Å—è—Ü–∞  
3. –û—Å–Ω–æ–≤–Ω–æ–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ - 24 –º–µ—Å—è—Ü–∞
4. –§–∏–Ω–∏—à–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –∏ —Å–¥–∞—á–∞ - 3 –º–µ—Å—è—Ü–∞

–§–ò–ù–ê–ù–°–û–í–´–ï –£–°–õ–û–í–ò–Ø:
- –ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 30% –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∞–Ω–∏–∏ –¥–æ–≥–æ–≤–æ—Ä–∞
- –ü–æ—ç—Ç–∞–ø–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–º—É –ø–ª–∞–Ω—É
- –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç –ø—Ä–∏ —Å–¥–∞—á–µ –æ–±—ä–µ–∫—Ç–∞

–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:
- –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –ø—Ä–æ–µ–∫—Ç–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
- –°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ
- –û–ø—ã—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –∏ –ø—Ä–æ—Ä–∞–±—ã
- –ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö
- –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤
'''

    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    data = {
        'prompt': real_kp_text,
        'model': 'claude-3-haiku-20240307',
        'max_tokens': 1000,
        'temperature': 0.1
    }

    print(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º {len(real_kp_text)} —Å–∏–º–≤–æ–ª–æ–≤ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ö–ü –≤ Claude API...")
    start_time = time.time()

    try:
        response = requests.post('http://localhost:8000/api/llm/analyze', json=data, timeout=60)
        end_time = time.time()
        processing_time = end_time - start_time
        
        print(f"‚è±Ô∏è  –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {processing_time:.1f} —Å–µ–∫—É–Ω–¥")
        
        if response.status_code == 200:
            result = response.json()
            model_used = result.get('model', 'unknown')
            fallback_mode = result.get('fallback_mode', 'unknown')
            
            print(f"ü§ñ –ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –º–æ–¥–µ–ª—å: {model_used}")
            print(f"üîÑ –†–µ–∂–∏–º fallback: {fallback_mode}")
            
            # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            if 'claude' in model_used.lower():
                print("‚úÖ SUCCESS: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ä–µ–∞–ª—å–Ω—ã–π Claude API!")
                
                content = result.get('content', '')
                if content.startswith('{'):
                    try:
                        analysis = json.loads(content)
                        print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê:")
                        print(f"   –ö–æ–º–ø–∞–Ω–∏—è: {analysis.get('company_name', 'N/A')}")
                        print(f"   –°—Ç–æ–∏–º–æ—Å—Ç—å: {analysis.get('pricing', 'N/A')}")
                        print(f"   –°—Ä–æ–∫–∏: {analysis.get('timeline', 'N/A')}")
                        print(f"   –û—Ü–µ–Ω–∫–∞: {analysis.get('compliance_score', 'N/A')}")
                        print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {analysis.get('recommendation', 'N/A')}")
                        
                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ mock –¥–∞–Ω–Ω—ã–µ
                        company_name = analysis.get('company_name', '')
                        if company_name != 'TEST FIXED COMPANY' and 'FIXED' not in company_name:
                            print("üéâ SUCCESS: –ù–ï–¢ MOCK –î–ê–ù–ù–´–•! Claude —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!")
                            return True
                        else:
                            print(f"‚ö†Ô∏è  WARNING: –í—Å–µ –µ—â–µ –ø–æ–ª—É—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: {company_name}")
                            return False
                            
                    except json.JSONDecodeError as e:
                        print(f"‚ùå ERROR: –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON: {e}")
                        return False
                else:
                    print("‚ùå ERROR: –û—Ç–≤–µ—Ç –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON")
                    return False
            else:
                print(f"‚ö†Ô∏è  WARNING: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä: {model_used}")
                return False
                
            # –ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            if processing_time > 8.0:
                print(f"‚úÖ SUCCESS: –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ ({processing_time:.1f}—Å) –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –ò–ò –æ–±—Ä–∞–±–æ—Ç–∫—É!")
            elif processing_time > 2.0:
                print(f"‚ÑπÔ∏è  INFO: –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ ({processing_time:.1f}—Å) –±—ã—Å—Ç—Ä–æ–µ, –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ –¥–ª—è –ª–µ–≥–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")
            else:
                print(f"‚ö†Ô∏è  WARNING: –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ ({processing_time:.1f}—Å) —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ mock –¥–∞–Ω–Ω—ã–µ")
                
        else:
            print(f"‚ùå ERROR: HTTP {response.status_code}")
            print(f"Response: {response.text[:300]}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ó–ê–ü–†–û–°–ê: {e}")
        return False

if __name__ == "__main__":
    success = test_real_kp_analyzer()
    print("\n" + "="*60)
    if success:
        print("üéâ –ö–ü –ê–ù–ê–õ–ò–ó–ê–¢–û–† –†–ê–ë–û–¢–ê–ï–¢ –° –†–ï–ê–õ–¨–ù–´–ú–ò –î–ê–ù–ù–´–ú–ò!")
    else:
        print("‚ùå –ö–ü –ê–ù–ê–õ–ò–ó–ê–¢–û–† –ï–©–ï –°–û–î–ï–†–ñ–ò–¢ MOCK –î–ê–ù–ù–´–ï!")
    print("="*60)