#!/bin/bash

# –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ PostgreSQL –∏ Redis –¥–ª—è DevAssist Pro

echo "üóÑÔ∏è  DevAssist Pro - –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ PostgreSQL –∏ Redis"
echo "=" * 55

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É docker-compose
if command -v docker-compose >/dev/null 2>&1; then
    DOCKER_COMPOSE="docker-compose"
elif docker compose version >/dev/null 2>&1; then
    DOCKER_COMPOSE="docker compose"
else
    echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ docker..."
    
    echo "üê≥ –ó–∞–ø—É—Å–∫ PostgreSQL..."
    docker run -d \
        --name devassist_postgres \
        -e POSTGRES_DB=devassist_pro \
        -e POSTGRES_USER=devassist \
        -e POSTGRES_PASSWORD=devassist_password \
        -p 5432:5432 \
        -v postgres_data:/var/lib/postgresql/data \
        postgres:15-alpine
    
    echo "üê≥ –ó–∞–ø—É—Å–∫ Redis..."
    docker run -d \
        --name devassist_redis \
        -p 6379:6379 \
        redis:7-alpine redis-server --requirepass redis_password
    
    echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
    echo "–ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏..."
    sleep 10
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL..."
    if docker exec devassist_postgres pg_isready -U devassist >/dev/null 2>&1; then
        echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤"
    else
        echo "‚ö†Ô∏è  PostgreSQL –µ—â–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è..."
        sleep 5
    fi
    
    echo "‚úÖ –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤—ã!"
    echo "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:"
    echo "   ./start-monolith-direct.sh"
    exit 0
fi

cd backend

echo "üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º: $DOCKER_COMPOSE"

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π docker-compose —Ç–æ–ª—å–∫–æ –¥–ª—è –ë–î
cat > docker-compose.db-only.yml << EOF
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: devassist_postgres
    environment:
      POSTGRES_DB: devassist_pro
      POSTGRES_USER: devassist
      POSTGRES_PASSWORD: devassist_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devassist"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: devassist_redis
    command: redis-server --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
EOF

echo "üöÄ –ó–∞–ø—É—Å–∫ PostgreSQL –∏ Redis..."
$DOCKER_COMPOSE -f docker-compose.db-only.yml up -d

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö..."
sleep 15

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
$DOCKER_COMPOSE -f docker-compose.db-only.yml ps

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è PostgreSQL..."
max_attempts=30
attempt=1

while [ $attempt -le $max_attempts ]; do
    if docker exec devassist_postgres pg_isready -U devassist >/dev/null 2>&1; then
        echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º!"
        break
    else
        echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts: PostgreSQL –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è..."
        sleep 2
        ((attempt++))
    fi
done

if [ $attempt -gt $max_attempts ]; then
    echo "‚ùå PostgreSQL –Ω–µ —Å–º–æ–≥ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏:"
    $DOCKER_COMPOSE -f docker-compose.db-only.yml logs postgres
    exit 1
fi

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Redis..."
if docker exec devassist_redis redis-cli -a redis_password ping 2>/dev/null | grep -q PONG; then
    echo "‚úÖ Redis –≥–æ—Ç–æ–≤ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º!"
else
    echo "‚ö†Ô∏è  Redis –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤, –Ω–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ"
fi

echo ""
echo "üéâ –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã!"
echo "=" * 55
echo ""
echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏:"
echo "   PostgreSQL: localhost:5432"
echo "   ‚Ä¢ –ë–∞–∑–∞: devassist_pro"
echo "   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: devassist"
echo "   ‚Ä¢ –ü–∞—Ä–æ–ª—å: devassist_password"
echo ""
echo "   Redis: localhost:6379"
echo "   ‚Ä¢ –ü–∞—Ä–æ–ª—å: redis_password"
echo ""
echo "üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:"
echo "   cd .. && ./start-monolith-direct.sh"
echo ""
echo "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö:"
echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: $DOCKER_COMPOSE -f docker-compose.db-only.yml down"
echo "   ‚Ä¢ –õ–æ–≥–∏: $DOCKER_COMPOSE -f docker-compose.db-only.yml logs -f"
echo "   ‚Ä¢ –°—Ç–∞—Ç—É—Å: $DOCKER_COMPOSE -f docker-compose.db-only.yml ps"