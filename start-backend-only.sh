#!/bin/bash

# DevAssist Pro - –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ backend —á–µ—Ä–µ–∑ Docker (–±–µ–∑ compose)

set -e

echo "üîß –ó–∞–ø—É—Å–∫ DevAssist Pro Backend..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if ! command -v docker &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ Docker daemon –∑–∞–ø—É—â–µ–Ω
    if ! docker info &> /dev/null; then
        error "Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
        exit 1
    fi
    
    log "‚úÖ Docker $(docker --version | cut -d' ' -f3 | tr -d ',') —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    docker stop devassist_postgres 2>/dev/null || true
    docker stop devassist_redis 2>/dev/null || true
    docker stop devassist_backend 2>/dev/null || true
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    docker rm devassist_postgres 2>/dev/null || true
    docker rm devassist_redis 2>/dev/null || true
    docker rm devassist_backend 2>/dev/null || true
    
    log "üõë Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    exit 0
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup SIGINT SIGTERM EXIT

# –°–æ–∑–¥–∞–Ω–∏–µ Docker —Å–µ—Ç–∏
create_network() {
    info "–°–æ–∑–¥–∞–Ω–∏–µ Docker —Å–µ—Ç–∏..."
    docker network create devassist_network 2>/dev/null || true
}

# –ó–∞–ø—É—Å–∫ PostgreSQL
start_postgres() {
    info "–ó–∞–ø—É—Å–∫ PostgreSQL..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    docker stop devassist_postgres 2>/dev/null || true
    docker rm devassist_postgres 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫ PostgreSQL
    docker run -d \
        --name devassist_postgres \
        --network devassist_network \
        -e POSTGRES_DB=devassist_pro \
        -e POSTGRES_USER=devassist \
        -e POSTGRES_PASSWORD=devassist_password \
        -p 5432:5432 \
        -v devassist_postgres_data:/var/lib/postgresql/data \
        postgres:15-alpine
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    for i in {1..30}; do
        if docker exec devassist_postgres pg_isready -U devassist &>/dev/null; then
            log "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤"
            return 0
        fi
        sleep 1
    done
    
    error "PostgreSQL –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ 30 —Å–µ–∫—É–Ω–¥"
    exit 1
}

# –ó–∞–ø—É—Å–∫ Redis
start_redis() {
    info "–ó–∞–ø—É—Å–∫ Redis..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    docker stop devassist_redis 2>/dev/null || true
    docker rm devassist_redis 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫ Redis
    docker run -d \
        --name devassist_redis \
        --network devassist_network \
        -p 6379:6379 \
        -v devassist_redis_data:/data \
        redis:7-alpine redis-server --requirepass redis_password
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Redis..."
    sleep 5
    
    log "‚úÖ Redis –∑–∞–ø—É—â–µ–Ω"
}

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ backend
start_backend() {
    info "–°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ backend..."
    
    cd backend
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è Dockerfile
    if [[ ! -f "Dockerfile.monolith" ]]; then
        error "–§–∞–π–ª Dockerfile.monolith –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ backend"
        exit 1
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    docker stop devassist_backend 2>/dev/null || true
    docker rm devassist_backend 2>/dev/null || true
    
    # –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞
    info "–°–±–æ—Ä–∫–∞ backend –æ–±—Ä–∞–∑–∞..."
    docker build -t devassist_backend -f Dockerfile.monolith .
    
    # –ó–∞–ø—É—Å–∫ backend
    info "–ó–∞–ø—É—Å–∫ backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    docker run -d \
        --name devassist_backend \
        --network devassist_network \
        -p 8000:8000 \
        -e POSTGRES_URL=postgresql://devassist:devassist_password@devassist_postgres:5432/devassist_pro \
        -e REDIS_URL=redis://:redis_password@devassist_redis:6379/0 \
        -e DEBUG=false \
        -e LOG_LEVEL=INFO \
        -e ENVIRONMENT=production \
        -e ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001 \
        -e MAX_FILE_SIZE=50MB \
        -e SUPPORTED_FORMATS=pdf,docx,txt \
        -e USE_REAL_API=true \
        -v devassist_app_data:/app/data \
        devassist_backend
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ backend..."
    sleep 15
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    for i in {1..30}; do
        if curl -s http://localhost:8000/health &>/dev/null; then
            log "‚úÖ Backend –≥–æ—Ç–æ–≤"
            return 0
        fi
        sleep 1
    done
    
    warning "Backend –º–æ–∂–µ—Ç –≤—Å—ë –µ—â—ë –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ http://localhost:8000"
    
    cd ..
}

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    log "üìä –°—Ç–∞—Ç—É—Å Backend —Å–µ—Ä–≤–∏—Å–æ–≤:"
    echo
    info "üîß –ó–∞–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
    docker ps --filter "name=devassist_" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    echo
    info "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–¥—Ä–µ—Å–∞:"
    echo "   ‚Ä¢ Backend API: http://localhost:8000"
    echo "   ‚Ä¢ PostgreSQL: localhost:5432"
    echo "   ‚Ä¢ Redis: localhost:6379"
    echo
    info "üìñ –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "   ‚Ä¢ –õ–æ–≥–∏ backend: docker logs -f devassist_backend"
    echo "   ‚Ä¢ –õ–æ–≥–∏ PostgreSQL: docker logs -f devassist_postgres"
    echo "   ‚Ä¢ –õ–æ–≥–∏ Redis: docker logs -f devassist_redis"
    echo "   ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: Ctrl+C"
    echo
}

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–∏—Å–æ–≤
monitor_services() {
    log "üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ backend —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    while true; do
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
        if ! docker ps --filter "name=devassist_postgres" --filter "status=running" | grep -q devassist_postgres; then
            error "PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
            break
        fi
        
        if ! docker ps --filter "name=devassist_redis" --filter "status=running" | grep -q devassist_redis; then
            error "Redis –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
            break
        fi
        
        if ! docker ps --filter "name=devassist_backend" --filter "status=running" | grep -q devassist_backend; then
            error "Backend –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
            break
        fi
        
        sleep 10
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üîß DevAssist Pro Backend Startup"
    echo
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    check_dependencies
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∏
    create_network
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
    start_postgres
    start_redis
    start_backend
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    show_status
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    log "‚úÖ Backend —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏."
    
    # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    monitor_services
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"