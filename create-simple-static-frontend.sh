#!/bin/bash

echo "üìÑ –°–û–ó–î–ê–ù–ò–ï –°–¢–ê–¢–ò–ß–ù–û–ì–û FRONTEND (–ö–†–ê–ô–ù–Ø–Ø –ú–ï–†–ê)"
echo "=============================================="
echo ""
echo "‚ùå –ü–†–û–ë–õ–ï–ú–ê: React dev server –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–∞–¥–∞–µ—Ç –∏–∑-–∑–∞ –Ω–µ—Ö–≤–∞—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤"
echo "‚úÖ –†–ï–®–ï–ù–ò–ï: –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç–∏—á–Ω—É—é HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –≤–∞—à–∏–º API"
echo ""

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö frontend –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
sudo lsof -ti:3000 | xargs sudo kill -9 2>/dev/null || true

echo ""
echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–π —Å—Ç–∞—Ç–∏—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã..."

mkdir -p static-frontend

cat > static-frontend/index.html << 'EOF'
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DevAssist Pro - AI Platform</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <style>
        body { font-family: 'Inter', system-ui, sans-serif; }
        .gradient-bg { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Header -->
    <header class="gradient-bg text-white py-4">
        <div class="container mx-auto px-6 flex justify-between items-center">
            <h1 class="text-2xl font-bold">DevAssist Pro</h1>
            <div id="authSection">
                <button onclick="showLogin()" class="bg-white text-purple-600 px-4 py-2 rounded-lg mr-2 hover:bg-gray-100">–í—Ö–æ–¥</button>
                <button onclick="showRegister()" class="border border-white px-4 py-2 rounded-lg hover:bg-white hover:text-purple-600">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</button>
            </div>
            <div id="userSection" class="hidden">
                <span id="userName" class="mr-4"></span>
                <button onclick="logout()" class="bg-red-500 px-4 py-2 rounded-lg hover:bg-red-600">–í—ã—Ö–æ–¥</button>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main class="container mx-auto px-6 py-8">
        <!-- Welcome Section -->
        <div id="welcomeSection" class="text-center mb-12">
            <h2 class="text-4xl font-bold text-gray-800 mb-4">AI-Powered Development Assistant</h2>
            <p class="text-xl text-gray-600 mb-8">–ê–Ω–∞–ª–∏–∑ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞</p>
            
            <!-- System Status -->
            <div class="bg-white rounded-lg shadow-md p-6 mb-8">
                <h3 class="text-lg font-semibold mb-4">–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã</h3>
                <div id="systemStatus" class="space-y-2">
                    <div class="flex justify-between items-center">
                        <span>Backend API:</span>
                        <span id="backendStatus" class="text-gray-500">–ü—Ä–æ–≤–µ—Ä—è–µ–º...</span>
                    </div>
                    <div class="flex justify-between items-center">
                        <span>Frontend:</span>
                        <span class="text-green-600">‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Login Modal -->
        <div id="loginModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center">
            <div class="bg-white rounded-lg p-8 max-w-md w-full mx-4">
                <h3 class="text-2xl font-bold mb-6">–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É</h3>
                <form onsubmit="login(event)">
                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2">Email</label>
                        <input type="email" id="loginEmail" class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-purple-500" required>
                    </div>
                    <div class="mb-6">
                        <label class="block text-gray-700 text-sm font-bold mb-2">–ü–∞—Ä–æ–ª—å</label>
                        <input type="password" id="loginPassword" class="w-full px-3 py-2 border rounded-lg focus:outline-none focus:border-purple-500" required>
                    </div>
                    <div class="flex justify-between">
                        <button type="button" onclick="hideLogin()" class="bg-gray-300 px-4 py-2 rounded-lg hover:bg-gray-400">–û—Ç–º–µ–Ω–∞</button>
                        <button type="submit" class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700">–í–æ–π—Ç–∏</button>
                    </div>
                </form>
                <div class="mt-4 p-3 bg-blue-50 rounded">
                    <p class="text-sm text-blue-800">
                        <strong>–¢–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç:</strong><br>
                        Email: admin@devassist.pro<br>
                        –ü–∞—Ä–æ–ª—å: admin123
                    </p>
                </div>
            </div>
        </div>

        <!-- Dashboard -->
        <div id="dashboard" class="hidden">
            <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
                <!-- KP Analyzer Card -->
                <div class="bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow">
                    <div class="text-purple-600 text-3xl mb-4">üìÑ</div>
                    <h3 class="text-xl font-semibold mb-2">–ö–ü –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä</h3>
                    <p class="text-gray-600 mb-4">–ê–Ω–∞–ª–∏–∑ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –ò–ò</p>
                    <button onclick="openKPAnalyzer()" class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700">–û—Ç–∫—Ä—ã—Ç—å</button>
                </div>

                <!-- Analytics Card -->
                <div class="bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow">
                    <div class="text-blue-600 text-3xl mb-4">üìä</div>
                    <h3 class="text-xl font-semibold mb-2">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞</h3>
                    <p class="text-gray-600 mb-4">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã –ø–æ –∞–Ω–∞–ª–∏–∑–∞–º</p>
                    <button class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">–°–∫–æ—Ä–æ</button>
                </div>

                <!-- API Docs Card -->
                <div class="bg-white rounded-lg shadow-md p-6 hover:shadow-lg transition-shadow">
                    <div class="text-green-600 text-3xl mb-4">üìö</div>
                    <h3 class="text-xl font-semibold mb-2">API –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</h3>
                    <p class="text-gray-600 mb-4">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API</p>
                    <a href="http://46.149.71.162:8000/docs" target="_blank" class="inline-block bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700">–û—Ç–∫—Ä—ã—Ç—å</a>
                </div>
            </div>
        </div>
    </main>

    <script>
        const API_BASE = 'http://46.149.71.162:8000';
        let authToken = localStorage.getItem('authToken');
        
        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            checkSystemStatus();
            if (authToken) {
                showDashboard();
            }
        });

        // System status check
        async function checkSystemStatus() {
            try {
                const response = await axios.get(`${API_BASE}/health`);
                document.getElementById('backendStatus').innerHTML = '<span class="text-green-600">‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç</span>';
            } catch (error) {
                document.getElementById('backendStatus').innerHTML = '<span class="text-red-600">‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω</span>';
            }
        }

        // Auth functions
        function showLogin() {
            document.getElementById('loginModal').classList.remove('hidden');
            document.getElementById('loginModal').classList.add('flex');
        }

        function hideLogin() {
            document.getElementById('loginModal').classList.add('hidden');
            document.getElementById('loginModal').classList.remove('flex');
        }

        function showRegister() {
            alert('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç:\nEmail: admin@devassist.pro\n–ü–∞—Ä–æ–ª—å: admin123');
        }

        async function login(event) {
            event.preventDefault();
            
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;
            
            try {
                const response = await axios.post(`${API_BASE}/api/auth/login`, {
                    email: email,
                    password: password
                });
                
                if (response.data.success && response.data.token) {
                    authToken = response.data.token;
                    localStorage.setItem('authToken', authToken);
                    hideLogin();
                    showDashboard();
                    alert('–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É!');
                } else {
                    alert('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ' + (response.data.message || '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'));
                }
            } catch (error) {
                console.error('Login error:', error);
                alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
            }
        }

        function logout() {
            authToken = null;
            localStorage.removeItem('authToken');
            hideDashboard();
        }

        function showDashboard() {
            document.getElementById('authSection').classList.add('hidden');
            document.getElementById('userSection').classList.remove('hidden');
            document.getElementById('welcomeSection').classList.add('hidden');
            document.getElementById('dashboard').classList.remove('hidden');
            document.getElementById('userName').textContent = 'Admin';
        }

        function hideDashboard() {
            document.getElementById('authSection').classList.remove('hidden');
            document.getElementById('userSection').classList.add('hidden');
            document.getElementById('welcomeSection').classList.remove('hidden');
            document.getElementById('dashboard').classList.add('hidden');
        }

        function openKPAnalyzer() {
            alert('–ö–ü –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –æ–∫–Ω–µ.\n\n–í –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–∞.');
        }
    </script>
</body>
</html>
EOF

echo "   ‚úÖ –°–æ–∑–¥–∞–Ω static-frontend/index.html"

echo ""
echo "üê≥ –ó–∞–ø—É—Å–∫ nginx –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã..."

# –°–æ–∑–¥–∞–µ–º nginx –∫–æ–Ω—Ñ–∏–≥
cat > static-frontend/nginx.conf << 'EOF'
server {
    listen 3000;
    server_name localhost;
    
    root /usr/share/nginx/html;
    index index.html;
    
    # CORS headers
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';
    
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    location /health {
        return 200 '{"status":"healthy","service":"static-frontend"}';
        add_header Content-Type application/json;
    }
}
EOF

# –ó–∞–ø—É—Å–∫–∞–µ–º nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–æ —Å—Ç–∞—Ç–∏—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
docker run -d \
    --name devassist-static-frontend \
    -p 3000:3000 \
    -v "$(pwd)/static-frontend/index.html:/usr/share/nginx/html/index.html:ro" \
    -v "$(pwd)/static-frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro" \
    --restart unless-stopped \
    nginx:alpine

echo "   ‚úÖ Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω"

echo ""
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (10 —Å–µ–∫—É–Ω–¥)..."
sleep 10

echo ""
echo "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–¢–ê–¢–ò–ß–ù–û–ì–û FRONTEND"
echo "================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
CONTAINER_STATUS=$(docker ps --filter "name=devassist-static-frontend" --format "{{.Status}}" 2>/dev/null || echo "Not found")
if [[ "$CONTAINER_STATUS" == *"Up"* ]]; then
    echo "   ‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: $CONTAINER_STATUS"
    
    # –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    LOCAL_TEST=$(curl -s --max-time 5 "http://localhost:3000" 2>/dev/null || echo "TIMEOUT")
    if echo "$LOCAL_TEST" | grep -q "DevAssist Pro"; then
        echo "   ‚úÖ –õ–æ–∫–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω"
        
        EXT_TEST=$(curl -s --max-time 5 "http://46.149.71.162:3000" 2>/dev/null || echo "TIMEOUT")
        if echo "$EXT_TEST" | grep -q "DevAssist Pro"; then
            echo "   ‚úÖ –í–Ω–µ—à–Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω"
            echo ""
            echo "üéâüéâüéâ –°–¢–ê–¢–ò–ß–ù–´–ô FRONTEND –†–ê–ë–û–¢–ê–ï–¢! üéâüéâüéâ"
            echo ""
            echo "üåê –°–¢–ê–ë–ò–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê:"
            echo ""
            echo "   üñ•Ô∏è  Frontend:    http://46.149.71.162:3000"
            echo "   ‚öôÔ∏è  Backend:     http://46.149.71.162:8000"
            echo "   üìñ API Docs:    http://46.149.71.162:8000/docs"
            echo ""
            echo "üë§ –î–õ–Ø –í–•–û–î–ê –í –°–ò–°–¢–ï–ú–£:"
            echo "   üìß Email:    admin@devassist.pro"
            echo "   üîë Password: admin123"
            echo ""
            echo "‚ú® –û–°–û–ë–ï–ù–ù–û–°–¢–ò –°–¢–ê–¢–ò–ß–ù–û–ì–û FRONTEND:"
            echo "   ‚úÖ –°—Ç–∞–±–∏–ª—å–Ω—ã–π - –Ω–µ –ø–∞–¥–∞–µ—Ç"
            echo "   ‚úÖ –ë—ã—Å—Ç—Ä—ã–π - –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞"
            echo "   ‚úÖ –õ–µ–≥–∫–∏–π - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º–∏–Ω–∏–º—É–º —Ä–µ—Å—É—Ä—Å–æ–≤"
            echo "   ‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π - –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≤–∞—à–µ–º—É API"
            echo "   ‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è - –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É"
            echo ""
            echo "üéä DEVASSIST PRO –ì–û–¢–û–í –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!"
        else
            echo "   ‚ùå –í–Ω–µ—à–Ω–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi
    else
        echo "   ‚ùå –õ–æ–∫–∞–ª—å–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
else
    echo "   ‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    docker logs devassist-static-frontend
fi

echo ""
echo "üìã –£–ü–†–ê–í–õ–ï–ù–ò–ï –°–¢–ê–¢–ò–ß–ù–´–ú FRONTEND:"
echo "   –°—Ç–∞—Ç—É—Å:      docker ps | grep static-frontend"
echo "   –õ–æ–≥–∏:        docker logs devassist-static-frontend"
echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:  docker restart devassist-static-frontend"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:   docker stop devassist-static-frontend"
echo "   –£–¥–∞–ª–µ–Ω–∏–µ:    docker rm -f devassist-static-frontend"

echo ""
echo "‚úÖ –°—Ç–∞—Ç–∏—á–Ω—ã–π frontend —Å–æ–∑–¥–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω"