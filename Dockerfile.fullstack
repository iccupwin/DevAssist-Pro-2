# ===========================================
# DevAssist Pro - Unified Fullstack Container
# ===========================================
# –≠—Ç–æ—Ç Dockerfile –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç Frontend (React) –∏ Backend (FastAPI) 
# –≤ –µ–¥–∏–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å Nginx –≤ –∫–∞—á–µ—Å—Ç–≤–µ reverse proxy

# ============= STAGE 1: Build Frontend =============
FROM node:18-alpine AS frontend-builder

WORKDIR /frontend-build

# –ö–æ–ø–∏—Ä—É–µ–º package.json –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
COPY frontend/package*.json ./
RUN npm ci --only=production --silent

# –ö–æ–ø–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ frontend
COPY frontend/ ./

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è production build
ENV NODE_ENV=production
ENV REACT_APP_API_URL=/api
ENV REACT_APP_WEBSOCKET_URL=/ws
ENV GENERATE_SOURCEMAP=false
ENV INLINE_RUNTIME_CHUNK=false

# –°–æ–±–∏—Ä–∞–µ–º production build
RUN npm run build

# –û—á–∏—â–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
RUN find /frontend-build/build -name "*.map" -delete

# ============= STAGE 2: Prepare Backend =============
FROM python:3.11-slim AS backend-builder

WORKDIR /backend-build

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# –ö–æ–ø–∏—Ä—É–µ–º requirements –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
COPY backend/requirements-monolith.txt ./
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-monolith.txt

# –ö–æ–ø–∏—Ä—É–µ–º backend –∫–æ–¥
COPY backend/app.py ./
COPY backend/shared/ ./shared/

# ============= STAGE 3: Production Runtime =============
FROM python:3.11-slim AS production

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º labels –¥–ª—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
LABEL maintainer="DevAssist Pro Team"
LABEL version="1.0.0"
LABEL description="DevAssist Pro - Unified Fullstack Application"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
RUN apt-get update && apt-get install -y \
    nginx \
    supervisor \
    curl \
    procps \
    tzdata \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –≥—Ä—É–ø–ø—ã
RUN groupadd -r devassist && useradd -r -g devassist devassist

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
RUN mkdir -p \
    /app \
    /app/data/uploads \
    /app/data/reports \
    /app/data/cache \
    /var/log/devassist \
    /var/log/nginx \
    /var/log/supervisor \
    /etc/supervisor/conf.d

# ===== BACKEND SETUP =====
WORKDIR /app

# –ö–æ–ø–∏—Ä—É–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ builder stage
COPY --from=backend-builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=backend-builder /usr/local/bin /usr/local/bin

# –ö–æ–ø–∏—Ä—É–µ–º backend –∫–æ–¥
COPY --from=backend-builder /backend-build/ ./

# ===== FRONTEND SETUP =====
# –£–¥–∞–ª—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
RUN rm -f /etc/nginx/sites-enabled/default /etc/nginx/sites-available/default

# –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–π frontend
COPY --from=frontend-builder /frontend-build/build /usr/share/nginx/html

# –ö–æ–ø–∏—Ä—É–µ–º nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
COPY nginx.fullstack.conf /etc/nginx/nginx.conf

# –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–µ error pages
RUN echo '<!DOCTYPE html><html><head><title>404 - Page Not Found</title><meta charset="utf-8"><style>body{font-family:Arial,sans-serif;text-align:center;padding:50px;background:#f5f5f5}h1{color:#333}p{color:#666}</style></head><body><h1>404 - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1><p>–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.</p><a href="/">–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a></body></html>' > /usr/share/nginx/html/404.html

RUN echo '<!DOCTYPE html><html><head><title>50x - Server Error</title><meta charset="utf-8"><style>body{font-family:Arial,sans-serif;text-align:center;padding:50px;background:#f5f5f5}h1{color:#d32f2f}p{color:#666}</style></head><body><h1>50x - –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</h1><p>–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º—ã.</p><a href="/">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</a></body></html>' > /usr/share/nginx/html/50x.html

# ===== SUPERVISOR CONFIGURATION =====
COPY <<EOF /etc/supervisor/conf.d/supervisord.conf
[supervisord]
nodaemon=true
user=root
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid
childlogdir=/var/log/supervisor

[program:backend]
command=python app.py
directory=/app
user=devassist
autostart=true
autorestart=true
stderr_logfile=/var/log/devassist/backend.err.log
stdout_logfile=/var/log/devassist/backend.out.log
environment=PYTHONUNBUFFERED="1"

[program:nginx]
command=nginx -g "daemon off;"
user=root
autostart=true
autorestart=true
stderr_logfile=/var/log/nginx/error.log
stdout_logfile=/var/log/nginx/access.log

[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface
EOF

# ===== STARTUP SCRIPT =====
COPY <<EOF /usr/local/bin/startup.sh
#!/bin/bash
set -e

echo "üöÄ Starting DevAssist Pro Fullstack Application..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -z "\$ANTHROPIC_API_KEY" ]; then
    echo "‚ö†Ô∏è  Warning: ANTHROPIC_API_KEY not set"
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
mkdir -p /app/data/{uploads,reports,cache}
chown -R devassist:devassist /app/data
chmod -R 755 /app/data

# –°–æ–∑–¥–∞–µ–º log –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p /var/log/{devassist,nginx,supervisor}
chown -R devassist:devassist /var/log/devassist
chmod -R 755 /var/log

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ nginx —Ñ–∞–π–ª—ã
chown -R www-data:www-data /usr/share/nginx/html
chmod -R 755 /usr/share/nginx/html

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
nginx -t

echo "‚úÖ Configuration validated"
echo "üìä Available at: http://localhost:80"
echo "üè• Health check: http://localhost:80/health"
echo "üìö API docs: http://localhost:80/api/docs"

# –ó–∞–ø—É—Å–∫–∞–µ–º supervisor
exec supervisord -c /etc/supervisor/conf.d/supervisord.conf
EOF

RUN chmod +x /usr/local/bin/startup.sh

# ===== HEALTH CHECK SCRIPT =====
COPY <<EOF /usr/local/bin/health-check.sh
#!/bin/bash
# –ü—Ä–æ–≤–µ—Ä—è–µ–º nginx
curl -f http://localhost:80/health || exit 1

# –ü—Ä–æ–≤–µ—Ä—è–µ–º backend
curl -f http://localhost:8000/health || exit 1

echo "All services healthy"
EOF

RUN chmod +x /usr/local/bin/health-check.sh

# ===== PERMISSIONS =====
RUN chown -R devassist:devassist /app \
    && chown -R www-data:www-data /usr/share/nginx/html \
    && chown -R devassist:devassist /var/log/devassist

# ===== ENVIRONMENT VARIABLES =====
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV NODE_ENV=production
ENV ENVIRONMENT=production

# ===== EXPOSE PORTS =====
EXPOSE 80

# ===== HEALTH CHECK =====
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
    CMD /usr/local/bin/health-check.sh

# ===== VOLUMES =====
VOLUME ["/app/data"]

# ===== STARTUP =====
CMD ["/usr/local/bin/startup.sh"]