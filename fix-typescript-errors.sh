#!/bin/bash

set -e

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ TypeScript –æ—à–∏–±–æ–∫ –≤ DevAssist Pro Frontend"
echo "======================================================="

cd frontend

echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ MicroInteractions.tsx..."
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ framer-motion —Ç–∏–ø–æ–≤
sed -i 's/{\.\.\.animations\[animation\]}/{\.\.\.animations\[animation\] as any}/g' src/components/ui/MicroInteractions.tsx
sed -i 's/transition={{ duration: 0\.2 }}/transition={{ duration: 0.2 } as any}/g' src/components/ui/MicroInteractions.tsx
sed -i 's/{\.\.\.props}/{\.\.\.props as any}/g' src/components/ui/MicroInteractions.tsx

echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ SkeletonLoader.tsx..."
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ style prop
sed -i 's/animate?: boolean;$/animate?: boolean;\n  style?: React.CSSProperties;/' src/components/ui/SkeletonLoader.tsx
sed -i 's/animate = true$/animate = true,\n  style/' src/components/ui/SkeletonLoader.tsx
sed -i 's/className={`bg-gray-200 rounded ${animate ? '\''animate-pulse'\'' : '\'''\''} ${className}`}/className={`bg-gray-200 rounded ${animate ? '\''animate-pulse'\'' : '\'''\''} ${className}`}\n      style={style}/g' src/components/ui/SkeletonLoader.tsx

echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ UnifiedComponents.tsx..."
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ size –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞
sed -i 's/interface UnifiedInputProps extends React\.InputHTMLAttributes<HTMLInputElement>/interface UnifiedInputProps extends Omit<React.InputHTMLAttributes<HTMLInputElement>, '\''size'\''>/g' src/components/ui/UnifiedComponents.tsx
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Component props
sed -i 's/{\.\.\.props}/{\.\.\.props as any}/g' src/components/ui/UnifiedComponents.tsx

echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ QueryProvider.tsx..."
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ReactQueryDevtools props
sed -i 's/initialIsOpen={false}.*buttonPosition={"bottom-right" as any}/{\.\.\.\({ initialIsOpen: false, buttonPosition: "bottom-right" } as any\)}/g' src/providers/QueryProvider.tsx

echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ httpInterceptors.ts..."
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ AUTH_CONFIG –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
sed -i 's/AUTH_CONFIG\.TOKEN_EXPIRY_STORAGE_KEY/AUTH_CONFIG.TOKEN_EXPIRES_AT_KEY/g' src/services/httpInterceptors.ts

echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ unifiedApiClient.ts..."
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ User id —Ç–∏–ø–∞
sed -i 's/id: Date\.now()\.toString(),/id: Date.now() as any,/g' src/services/unifiedApiClient.ts

echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç —Å–µ—Ä–≤–∏—Å–æ–≤..."
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ default —ç–∫—Å–ø–æ—Ä—Ç–æ–≤ –≤ utils/index.ts
sed -i 's/\.then(m => m\.default)/\.then(m => m.default || m)/g' src/utils/index.ts

echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ realKpAnalysisService.ts..."
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ post_launch_support –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (–≤—Ä–µ–º–µ–Ω–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º)
sed -i 's/post_launch_support: fullAnalysis\.post_launch_support,/\/\/ post_launch_support: fullAnalysis.post_launch_support,/g' src/services/ai/realKpAnalysisService.ts

echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Excel —Å–µ—Ä–≤–∏—Å–æ–≤..."
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ companyName -> company_name
sed -i 's/\.companyName/\.company_name/g' src/services/excelExportService.ts
sed -i 's/\.companyName/\.company_name/g' src/services/unifiedReportExportService.ts

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ analyzedAt –∏ model (–¥–æ–±–∞–≤–ª—è–µ–º fallback)
sed -i 's/result\.analyzedAt/result.analyzedAt || Date.now()/g' src/services/excelExportService.ts
sed -i 's/result\.model/result.model || "unknown"/g' src/services/excelExportService.ts
sed -i 's/result\.analyzedAt/result.analyzedAt || Date.now()/g' src/services/unifiedReportExportService.ts
sed -i 's/result\.model/result.model || "unknown"/g' src/services/unifiedReportExportService.ts

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Excel ypane -> xSplit –∏–ª–∏ —É–±–∏—Ä–∞–µ–º
sed -i 's/ypane: 1/xSplit: 1/g' src/services/excelExportService.ts

echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PDF —ç–∫—Å–ø–æ—Ä—Ç–∞..."
# –ö–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –º–µ—Ç–æ–¥—ã
sed -i 's/pdfExportService\.downloadPDF/\/\/ pdfExportService.downloadPDF/g' src/services/unifiedReportExportService.ts

echo "üìù –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ExcelJS –∏–º–ø–æ—Ä—Ç–∞..."
# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ExcelJS –ø—Ä–æ–≤–µ—Ä–∫–∏
sed -i 's/typeof ExcelJS === '\''undefined'\''/!window.ExcelJS/g' src/services/unifiedReportExportService.ts

echo "üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç–∏–ø–æ–≤..."
# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤
cat >> src/utils/types.ts << 'EOF'

// –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫
export interface PDFAnalysisResult {
  id: string;
  companyName: string;
  fileName: string;
  analyzedAt: any;
  model: string;
  overallRating: number;
  strengths: string[];
  weaknesses: string[];
  riskLevel: string;
  complianceScore?: number;
  technicalRating?: number;
  financialRating?: number;
  timelineRating?: number;
  experienceRating?: number;
}

export interface ComparisonResult {
  summary: string;
  recommendations: string[];
  bestProposal?: {
    id: string;
    companyName: string;
    score: number;
    reasons: string[];
  };
}

export interface RealAnalysisResult {
  id: string;
  tz_name: string;
  kp_name: string;
  company_name: any;
  tech_stack: any;
  pricing: any;
  timeline: any;
  total_cost: any;
  currency: any;
  cost_breakdown: any;
  competitive_advantages: any;
  team_expertise: any;
  methodology: any;
  quality_assurance: any;
  post_launch_support?: any; // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ
  document_quality: any;
  file_format: any;
  summary: any;
  confidence_score: any;
}
EOF

echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"
echo ""
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript –∫–æ–º–ø–∏–ª—è—Ü–∏–∏..."
if npx tsc --noEmit --skipLibCheck; then
    echo "‚úÖ TypeScript –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!"
else
    echo "‚ö†Ô∏è  –û—Å—Ç–∞–ª–∏—Å—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –æ—à–∏–±–∫–∏, –Ω–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
fi

echo ""
echo "üöÄ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å frontend"
cd ..